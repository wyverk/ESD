-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.
--cntr[25] is cntr[25] at FF_X43_Y1_N47
--register power-up is low

cntr[25] = DFFEAS(A1L2, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L2 is Add0~1 at LABCELL_X43_Y1_N45
A1L2_adder_eqn = ( cntr[25] ) + ( GND ) + ( A1L7 );
A1L2 = SUM(A1L2_adder_eqn);


--A1L6 is Add0~5 at LABCELL_X43_Y1_N42
A1L6_adder_eqn = ( cntr[24] ) + ( GND ) + ( A1L11 );
A1L6 = SUM(A1L6_adder_eqn);

--A1L7 is Add0~6 at LABCELL_X43_Y1_N42
A1L7_adder_eqn = ( cntr[24] ) + ( GND ) + ( A1L11 );
A1L7 = CARRY(A1L7_adder_eqn);


--cntr[24] is cntr[24] at FF_X43_Y1_N43
--register power-up is low

cntr[24] = DFFEAS(A1L6, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L10 is Add0~9 at LABCELL_X43_Y1_N39
A1L10_adder_eqn = ( cntr[23] ) + ( GND ) + ( A1L15 );
A1L10 = SUM(A1L10_adder_eqn);

--A1L11 is Add0~10 at LABCELL_X43_Y1_N39
A1L11_adder_eqn = ( cntr[23] ) + ( GND ) + ( A1L15 );
A1L11 = CARRY(A1L11_adder_eqn);


--cntr[23] is cntr[23] at FF_X43_Y1_N41
--register power-up is low

cntr[23] = DFFEAS(A1L10, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L14 is Add0~13 at LABCELL_X43_Y1_N36
A1L14_adder_eqn = ( cntr[22] ) + ( GND ) + ( A1L19 );
A1L14 = SUM(A1L14_adder_eqn);

--A1L15 is Add0~14 at LABCELL_X43_Y1_N36
A1L15_adder_eqn = ( cntr[22] ) + ( GND ) + ( A1L19 );
A1L15 = CARRY(A1L15_adder_eqn);


--cntr[22] is cntr[22] at FF_X43_Y1_N37
--register power-up is low

cntr[22] = DFFEAS(A1L14, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L18 is Add0~17 at LABCELL_X43_Y1_N33
A1L18_adder_eqn = ( cntr[21] ) + ( GND ) + ( A1L23 );
A1L18 = SUM(A1L18_adder_eqn);

--A1L19 is Add0~18 at LABCELL_X43_Y1_N33
A1L19_adder_eqn = ( cntr[21] ) + ( GND ) + ( A1L23 );
A1L19 = CARRY(A1L19_adder_eqn);


--cntr[21] is cntr[21] at FF_X43_Y1_N35
--register power-up is low

cntr[21] = DFFEAS(A1L18, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L22 is Add0~21 at LABCELL_X43_Y1_N30
A1L22_adder_eqn = ( cntr[20] ) + ( GND ) + ( A1L27 );
A1L22 = SUM(A1L22_adder_eqn);

--A1L23 is Add0~22 at LABCELL_X43_Y1_N30
A1L23_adder_eqn = ( cntr[20] ) + ( GND ) + ( A1L27 );
A1L23 = CARRY(A1L23_adder_eqn);


--cntr[20] is cntr[20] at FF_X43_Y1_N31
--register power-up is low

cntr[20] = DFFEAS(A1L22, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L26 is Add0~25 at LABCELL_X43_Y1_N27
A1L26_adder_eqn = ( cntr[19] ) + ( GND ) + ( A1L31 );
A1L26 = SUM(A1L26_adder_eqn);

--A1L27 is Add0~26 at LABCELL_X43_Y1_N27
A1L27_adder_eqn = ( cntr[19] ) + ( GND ) + ( A1L31 );
A1L27 = CARRY(A1L27_adder_eqn);


--cntr[19] is cntr[19] at FF_X43_Y1_N29
--register power-up is low

cntr[19] = DFFEAS(A1L26, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L30 is Add0~29 at LABCELL_X43_Y1_N24
A1L30_adder_eqn = ( cntr[18] ) + ( GND ) + ( A1L35 );
A1L30 = SUM(A1L30_adder_eqn);

--A1L31 is Add0~30 at LABCELL_X43_Y1_N24
A1L31_adder_eqn = ( cntr[18] ) + ( GND ) + ( A1L35 );
A1L31 = CARRY(A1L31_adder_eqn);


--cntr[18] is cntr[18] at FF_X43_Y1_N25
--register power-up is low

cntr[18] = DFFEAS(A1L30, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L34 is Add0~33 at LABCELL_X43_Y1_N21
A1L34_adder_eqn = ( cntr[17] ) + ( GND ) + ( A1L39 );
A1L34 = SUM(A1L34_adder_eqn);

--A1L35 is Add0~34 at LABCELL_X43_Y1_N21
A1L35_adder_eqn = ( cntr[17] ) + ( GND ) + ( A1L39 );
A1L35 = CARRY(A1L35_adder_eqn);


--cntr[17] is cntr[17] at FF_X43_Y1_N23
--register power-up is low

cntr[17] = DFFEAS(A1L34, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L38 is Add0~37 at LABCELL_X43_Y1_N18
A1L38_adder_eqn = ( cntr[16] ) + ( GND ) + ( A1L43 );
A1L38 = SUM(A1L38_adder_eqn);

--A1L39 is Add0~38 at LABCELL_X43_Y1_N18
A1L39_adder_eqn = ( cntr[16] ) + ( GND ) + ( A1L43 );
A1L39 = CARRY(A1L39_adder_eqn);


--cntr[16] is cntr[16] at FF_X43_Y1_N20
--register power-up is low

cntr[16] = DFFEAS(A1L38, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L42 is Add0~41 at LABCELL_X43_Y1_N15
A1L42_adder_eqn = ( cntr[15] ) + ( GND ) + ( A1L47 );
A1L42 = SUM(A1L42_adder_eqn);

--A1L43 is Add0~42 at LABCELL_X43_Y1_N15
A1L43_adder_eqn = ( cntr[15] ) + ( GND ) + ( A1L47 );
A1L43 = CARRY(A1L43_adder_eqn);


--cntr[15] is cntr[15] at FF_X43_Y1_N16
--register power-up is low

cntr[15] = DFFEAS(A1L42, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L46 is Add0~45 at LABCELL_X43_Y1_N12
A1L46_adder_eqn = ( cntr[14] ) + ( GND ) + ( A1L51 );
A1L46 = SUM(A1L46_adder_eqn);

--A1L47 is Add0~46 at LABCELL_X43_Y1_N12
A1L47_adder_eqn = ( cntr[14] ) + ( GND ) + ( A1L51 );
A1L47 = CARRY(A1L47_adder_eqn);


--cntr[14] is cntr[14] at FF_X43_Y1_N14
--register power-up is low

cntr[14] = DFFEAS(A1L46, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L50 is Add0~49 at LABCELL_X43_Y1_N9
A1L50_adder_eqn = ( cntr[13] ) + ( GND ) + ( A1L55 );
A1L50 = SUM(A1L50_adder_eqn);

--A1L51 is Add0~50 at LABCELL_X43_Y1_N9
A1L51_adder_eqn = ( cntr[13] ) + ( GND ) + ( A1L55 );
A1L51 = CARRY(A1L51_adder_eqn);


--cntr[13] is cntr[13] at FF_X43_Y1_N11
--register power-up is low

cntr[13] = DFFEAS(A1L50, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L54 is Add0~53 at LABCELL_X43_Y1_N6
A1L54_adder_eqn = ( cntr[12] ) + ( GND ) + ( A1L59 );
A1L54 = SUM(A1L54_adder_eqn);

--A1L55 is Add0~54 at LABCELL_X43_Y1_N6
A1L55_adder_eqn = ( cntr[12] ) + ( GND ) + ( A1L59 );
A1L55 = CARRY(A1L55_adder_eqn);


--cntr[12] is cntr[12] at FF_X43_Y1_N7
--register power-up is low

cntr[12] = DFFEAS(A1L54, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L58 is Add0~57 at LABCELL_X43_Y1_N3
A1L58_adder_eqn = ( cntr[11] ) + ( GND ) + ( A1L63 );
A1L58 = SUM(A1L58_adder_eqn);

--A1L59 is Add0~58 at LABCELL_X43_Y1_N3
A1L59_adder_eqn = ( cntr[11] ) + ( GND ) + ( A1L63 );
A1L59 = CARRY(A1L59_adder_eqn);


--cntr[11] is cntr[11] at FF_X43_Y1_N5
--register power-up is low

cntr[11] = DFFEAS(A1L58, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L62 is Add0~61 at LABCELL_X43_Y1_N0
A1L62_adder_eqn = ( cntr[10] ) + ( GND ) + ( A1L67 );
A1L62 = SUM(A1L62_adder_eqn);

--A1L63 is Add0~62 at LABCELL_X43_Y1_N0
A1L63_adder_eqn = ( cntr[10] ) + ( GND ) + ( A1L67 );
A1L63 = CARRY(A1L63_adder_eqn);


--cntr[10] is cntr[10] at FF_X43_Y1_N2
--register power-up is low

cntr[10] = DFFEAS(A1L62, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L66 is Add0~65 at LABCELL_X43_Y2_N57
A1L66_adder_eqn = ( cntr[9] ) + ( GND ) + ( A1L71 );
A1L66 = SUM(A1L66_adder_eqn);

--A1L67 is Add0~66 at LABCELL_X43_Y2_N57
A1L67_adder_eqn = ( cntr[9] ) + ( GND ) + ( A1L71 );
A1L67 = CARRY(A1L67_adder_eqn);


--cntr[9] is cntr[9] at FF_X43_Y2_N59
--register power-up is low

cntr[9] = DFFEAS(A1L66, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L70 is Add0~69 at LABCELL_X43_Y2_N54
A1L70_adder_eqn = ( cntr[8] ) + ( GND ) + ( A1L75 );
A1L70 = SUM(A1L70_adder_eqn);

--A1L71 is Add0~70 at LABCELL_X43_Y2_N54
A1L71_adder_eqn = ( cntr[8] ) + ( GND ) + ( A1L75 );
A1L71 = CARRY(A1L71_adder_eqn);


--cntr[8] is cntr[8] at FF_X43_Y2_N56
--register power-up is low

cntr[8] = DFFEAS(A1L70, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L74 is Add0~73 at LABCELL_X43_Y2_N51
A1L74_adder_eqn = ( cntr[7] ) + ( GND ) + ( A1L79 );
A1L74 = SUM(A1L74_adder_eqn);

--A1L75 is Add0~74 at LABCELL_X43_Y2_N51
A1L75_adder_eqn = ( cntr[7] ) + ( GND ) + ( A1L79 );
A1L75 = CARRY(A1L75_adder_eqn);


--cntr[7] is cntr[7] at FF_X43_Y2_N52
--register power-up is low

cntr[7] = DFFEAS(A1L74, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L78 is Add0~77 at LABCELL_X43_Y2_N48
A1L78_adder_eqn = ( cntr[6] ) + ( GND ) + ( A1L83 );
A1L78 = SUM(A1L78_adder_eqn);

--A1L79 is Add0~78 at LABCELL_X43_Y2_N48
A1L79_adder_eqn = ( cntr[6] ) + ( GND ) + ( A1L83 );
A1L79 = CARRY(A1L79_adder_eqn);


--cntr[6] is cntr[6] at FF_X43_Y2_N50
--register power-up is low

cntr[6] = DFFEAS(A1L78, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L82 is Add0~81 at LABCELL_X43_Y2_N45
A1L82_adder_eqn = ( cntr[5] ) + ( GND ) + ( A1L87 );
A1L82 = SUM(A1L82_adder_eqn);

--A1L83 is Add0~82 at LABCELL_X43_Y2_N45
A1L83_adder_eqn = ( cntr[5] ) + ( GND ) + ( A1L87 );
A1L83 = CARRY(A1L83_adder_eqn);


--cntr[5] is cntr[5] at FF_X43_Y2_N47
--register power-up is low

cntr[5] = DFFEAS(A1L82, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L86 is Add0~85 at LABCELL_X43_Y2_N42
A1L86_adder_eqn = ( cntr[4] ) + ( GND ) + ( A1L91 );
A1L86 = SUM(A1L86_adder_eqn);

--A1L87 is Add0~86 at LABCELL_X43_Y2_N42
A1L87_adder_eqn = ( cntr[4] ) + ( GND ) + ( A1L91 );
A1L87 = CARRY(A1L87_adder_eqn);


--cntr[4] is cntr[4] at FF_X43_Y2_N43
--register power-up is low

cntr[4] = DFFEAS(A1L86, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L90 is Add0~89 at LABCELL_X43_Y2_N39
A1L90_adder_eqn = ( cntr[3] ) + ( GND ) + ( A1L95 );
A1L90 = SUM(A1L90_adder_eqn);

--A1L91 is Add0~90 at LABCELL_X43_Y2_N39
A1L91_adder_eqn = ( cntr[3] ) + ( GND ) + ( A1L95 );
A1L91 = CARRY(A1L91_adder_eqn);


--cntr[3] is cntr[3] at FF_X43_Y2_N41
--register power-up is low

cntr[3] = DFFEAS(A1L90, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L94 is Add0~93 at LABCELL_X43_Y2_N36
A1L94_adder_eqn = ( cntr[2] ) + ( GND ) + ( A1L99 );
A1L94 = SUM(A1L94_adder_eqn);

--A1L95 is Add0~94 at LABCELL_X43_Y2_N36
A1L95_adder_eqn = ( cntr[2] ) + ( GND ) + ( A1L99 );
A1L95 = CARRY(A1L95_adder_eqn);


--cntr[2] is cntr[2] at FF_X43_Y2_N23
--register power-up is low

cntr[2] = DFFEAS( , GLOBAL(A1L108),  ,  ,  , A1L94,  , !key0_d3, VCC);


--A1L98 is Add0~97 at LABCELL_X43_Y2_N33
A1L98_adder_eqn = ( cntr[1] ) + ( GND ) + ( A1L103 );
A1L98 = SUM(A1L98_adder_eqn);

--A1L99 is Add0~98 at LABCELL_X43_Y2_N33
A1L99_adder_eqn = ( cntr[1] ) + ( GND ) + ( A1L103 );
A1L99 = CARRY(A1L99_adder_eqn);


--cntr[1] is cntr[1] at FF_X43_Y2_N8
--register power-up is low

cntr[1] = DFFEAS(A1L113, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--A1L102 is Add0~101 at LABCELL_X43_Y2_N30
A1L102_adder_eqn = ( cntr[0] ) + ( VCC ) + ( !VCC );
A1L102 = SUM(A1L102_adder_eqn);

--A1L103 is Add0~102 at LABCELL_X43_Y2_N30
A1L103_adder_eqn = ( cntr[0] ) + ( VCC ) + ( !VCC );
A1L103 = CARRY(A1L103_adder_eqn);


--cntr[0] is cntr[0] at FF_X43_Y2_N2
--register power-up is low

cntr[0] = DFFEAS(A1L111, GLOBAL(A1L108),  ,  ,  ,  ,  , !key0_d3,  );


--key0_d3 is key0_d3 at FF_X43_Y1_N50
--register power-up is low

key0_d3 = DFFEAS(A1L143, GLOBAL(A1L108),  ,  ,  ,  ,  ,  ,  );


--key0_d2 is key0_d2 at FF_X43_Y1_N53
--register power-up is low

key0_d2 = DFFEAS(A1L141, GLOBAL(A1L108),  ,  ,  ,  ,  ,  ,  );


--key0_d1 is key0_d1 at FF_X42_Y1_N25
--register power-up is low

key0_d1 = DFFEAS( , GLOBAL(A1L108),  ,  ,  , A1L145,  ,  , VCC);



--KEY[1] is KEY[1] at PIN_AA15
KEY[1] = INPUT();



--KEY[2] is KEY[2] at PIN_W15
KEY[2] = INPUT();



--KEY[3] is KEY[3] at PIN_Y16
KEY[3] = INPUT();


--A1L154 is LEDR[0]~output at IOOBUF_X52_Y0_N2
A1L154 = OUTPUT_BUFFER.O(.I(cntr[25]), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[0] is LEDR[0] at PIN_V16
LEDR[0] = OUTPUT();


--A1L156 is LEDR[1]~output at IOOBUF_X52_Y0_N19
A1L156 = OUTPUT_BUFFER.O(.I(VCC), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[1] is LEDR[1] at PIN_W16
LEDR[1] = OUTPUT();


--A1L158 is LEDR[2]~output at IOOBUF_X60_Y0_N2
A1L158 = OUTPUT_BUFFER.O(.I(VCC), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[2] is LEDR[2] at PIN_V17
LEDR[2] = OUTPUT();


--A1L160 is LEDR[3]~output at IOOBUF_X80_Y0_N2
A1L160 = OUTPUT_BUFFER.O(.I(VCC), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[3] is LEDR[3] at PIN_V18
LEDR[3] = OUTPUT();


--A1L162 is LEDR[4]~output at IOOBUF_X60_Y0_N19
A1L162 = OUTPUT_BUFFER.O(.I(VCC), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[4] is LEDR[4] at PIN_W17
LEDR[4] = OUTPUT();


--A1L164 is LEDR[5]~output at IOOBUF_X80_Y0_N19
A1L164 = OUTPUT_BUFFER.O(.I(VCC), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[5] is LEDR[5] at PIN_W19
LEDR[5] = OUTPUT();


--A1L166 is LEDR[6]~output at IOOBUF_X84_Y0_N2
A1L166 = OUTPUT_BUFFER.O(.I(GND), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[6] is LEDR[6] at PIN_Y19
LEDR[6] = OUTPUT();


--A1L168 is LEDR[7]~output at IOOBUF_X89_Y6_N5
A1L168 = OUTPUT_BUFFER.O(.I(VCC), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[7] is LEDR[7] at PIN_W20
LEDR[7] = OUTPUT();


--A1L170 is LEDR[8]~output at IOOBUF_X89_Y8_N5
A1L170 = OUTPUT_BUFFER.O(.I(GND), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[8] is LEDR[8] at PIN_W21
LEDR[8] = OUTPUT();


--A1L172 is LEDR[9]~output at IOOBUF_X89_Y6_N22
A1L172 = OUTPUT_BUFFER.O(.I(VCC), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--LEDR[9] is LEDR[9] at PIN_Y21
LEDR[9] = OUTPUT();


--A1L107 is CLOCK_50~input at IOIBUF_X32_Y0_N1
A1L107 = INPUT_BUFFER(.I(CLOCK_50), );


--CLOCK_50 is CLOCK_50 at PIN_AF14
CLOCK_50 = INPUT();


--A1L145 is KEY[0]~input at IOIBUF_X36_Y0_N1
A1L145 = INPUT_BUFFER(.I(KEY[0]), );


--KEY[0] is KEY[0] at PIN_AA14
KEY[0] = INPUT();



--A1L108 is CLOCK_50~inputCLKENA0 at CLKCTRL_G6
A1L108 = cyclonev_clkena(.INCLK = A1L107) WITH (clock_type = "Global Clock", ena_register_mode = "always enabled");


--A1L113 is cntr[1]~feeder at LABCELL_X43_Y2_N6
A1L113 = ( A1L98 );


--A1L111 is cntr[0]~feeder at LABCELL_X43_Y2_N0
A1L111 = ( A1L102 );


--A1L143 is key0_d3~feeder at LABCELL_X43_Y1_N48
A1L143 = key0_d2;


--A1L141 is key0_d2~feeder at LABCELL_X43_Y1_N51
A1L141 = ( key0_d1 );


