-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.
--cntr[25] is cntr[25]
--register power-up is low

cntr[25] = DFFEAS(A1L2, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L2 is Add0~1
A1L2_adder_eqn = ( cntr[25] ) + ( GND ) + ( A1L7 );
A1L2 = SUM(A1L2_adder_eqn);


--A1L6 is Add0~5
A1L6_adder_eqn = ( cntr[24] ) + ( GND ) + ( A1L11 );
A1L6 = SUM(A1L6_adder_eqn);

--A1L7 is Add0~6
A1L7_adder_eqn = ( cntr[24] ) + ( GND ) + ( A1L11 );
A1L7 = CARRY(A1L7_adder_eqn);


--cntr[24] is cntr[24]
--register power-up is low

cntr[24] = DFFEAS(A1L6, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L10 is Add0~9
A1L10_adder_eqn = ( cntr[23] ) + ( GND ) + ( A1L15 );
A1L10 = SUM(A1L10_adder_eqn);

--A1L11 is Add0~10
A1L11_adder_eqn = ( cntr[23] ) + ( GND ) + ( A1L15 );
A1L11 = CARRY(A1L11_adder_eqn);


--cntr[23] is cntr[23]
--register power-up is low

cntr[23] = DFFEAS(A1L10, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L14 is Add0~13
A1L14_adder_eqn = ( cntr[22] ) + ( GND ) + ( A1L19 );
A1L14 = SUM(A1L14_adder_eqn);

--A1L15 is Add0~14
A1L15_adder_eqn = ( cntr[22] ) + ( GND ) + ( A1L19 );
A1L15 = CARRY(A1L15_adder_eqn);


--cntr[22] is cntr[22]
--register power-up is low

cntr[22] = DFFEAS(A1L14, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L18 is Add0~17
A1L18_adder_eqn = ( cntr[21] ) + ( GND ) + ( A1L23 );
A1L18 = SUM(A1L18_adder_eqn);

--A1L19 is Add0~18
A1L19_adder_eqn = ( cntr[21] ) + ( GND ) + ( A1L23 );
A1L19 = CARRY(A1L19_adder_eqn);


--cntr[21] is cntr[21]
--register power-up is low

cntr[21] = DFFEAS(A1L18, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L22 is Add0~21
A1L22_adder_eqn = ( cntr[20] ) + ( GND ) + ( A1L27 );
A1L22 = SUM(A1L22_adder_eqn);

--A1L23 is Add0~22
A1L23_adder_eqn = ( cntr[20] ) + ( GND ) + ( A1L27 );
A1L23 = CARRY(A1L23_adder_eqn);


--cntr[20] is cntr[20]
--register power-up is low

cntr[20] = DFFEAS(A1L22, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L26 is Add0~25
A1L26_adder_eqn = ( cntr[19] ) + ( GND ) + ( A1L31 );
A1L26 = SUM(A1L26_adder_eqn);

--A1L27 is Add0~26
A1L27_adder_eqn = ( cntr[19] ) + ( GND ) + ( A1L31 );
A1L27 = CARRY(A1L27_adder_eqn);


--cntr[19] is cntr[19]
--register power-up is low

cntr[19] = DFFEAS(A1L26, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L30 is Add0~29
A1L30_adder_eqn = ( cntr[18] ) + ( GND ) + ( A1L35 );
A1L30 = SUM(A1L30_adder_eqn);

--A1L31 is Add0~30
A1L31_adder_eqn = ( cntr[18] ) + ( GND ) + ( A1L35 );
A1L31 = CARRY(A1L31_adder_eqn);


--cntr[18] is cntr[18]
--register power-up is low

cntr[18] = DFFEAS(A1L30, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L34 is Add0~33
A1L34_adder_eqn = ( cntr[17] ) + ( GND ) + ( A1L39 );
A1L34 = SUM(A1L34_adder_eqn);

--A1L35 is Add0~34
A1L35_adder_eqn = ( cntr[17] ) + ( GND ) + ( A1L39 );
A1L35 = CARRY(A1L35_adder_eqn);


--cntr[17] is cntr[17]
--register power-up is low

cntr[17] = DFFEAS(A1L34, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L38 is Add0~37
A1L38_adder_eqn = ( cntr[16] ) + ( GND ) + ( A1L43 );
A1L38 = SUM(A1L38_adder_eqn);

--A1L39 is Add0~38
A1L39_adder_eqn = ( cntr[16] ) + ( GND ) + ( A1L43 );
A1L39 = CARRY(A1L39_adder_eqn);


--cntr[16] is cntr[16]
--register power-up is low

cntr[16] = DFFEAS(A1L38, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L42 is Add0~41
A1L42_adder_eqn = ( cntr[15] ) + ( GND ) + ( A1L47 );
A1L42 = SUM(A1L42_adder_eqn);

--A1L43 is Add0~42
A1L43_adder_eqn = ( cntr[15] ) + ( GND ) + ( A1L47 );
A1L43 = CARRY(A1L43_adder_eqn);


--cntr[15] is cntr[15]
--register power-up is low

cntr[15] = DFFEAS(A1L42, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L46 is Add0~45
A1L46_adder_eqn = ( cntr[14] ) + ( GND ) + ( A1L51 );
A1L46 = SUM(A1L46_adder_eqn);

--A1L47 is Add0~46
A1L47_adder_eqn = ( cntr[14] ) + ( GND ) + ( A1L51 );
A1L47 = CARRY(A1L47_adder_eqn);


--cntr[14] is cntr[14]
--register power-up is low

cntr[14] = DFFEAS(A1L46, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L50 is Add0~49
A1L50_adder_eqn = ( cntr[13] ) + ( GND ) + ( A1L55 );
A1L50 = SUM(A1L50_adder_eqn);

--A1L51 is Add0~50
A1L51_adder_eqn = ( cntr[13] ) + ( GND ) + ( A1L55 );
A1L51 = CARRY(A1L51_adder_eqn);


--cntr[13] is cntr[13]
--register power-up is low

cntr[13] = DFFEAS(A1L50, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L54 is Add0~53
A1L54_adder_eqn = ( cntr[12] ) + ( GND ) + ( A1L59 );
A1L54 = SUM(A1L54_adder_eqn);

--A1L55 is Add0~54
A1L55_adder_eqn = ( cntr[12] ) + ( GND ) + ( A1L59 );
A1L55 = CARRY(A1L55_adder_eqn);


--cntr[12] is cntr[12]
--register power-up is low

cntr[12] = DFFEAS(A1L54, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L58 is Add0~57
A1L58_adder_eqn = ( cntr[11] ) + ( GND ) + ( A1L63 );
A1L58 = SUM(A1L58_adder_eqn);

--A1L59 is Add0~58
A1L59_adder_eqn = ( cntr[11] ) + ( GND ) + ( A1L63 );
A1L59 = CARRY(A1L59_adder_eqn);


--cntr[11] is cntr[11]
--register power-up is low

cntr[11] = DFFEAS(A1L58, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L62 is Add0~61
A1L62_adder_eqn = ( cntr[10] ) + ( GND ) + ( A1L67 );
A1L62 = SUM(A1L62_adder_eqn);

--A1L63 is Add0~62
A1L63_adder_eqn = ( cntr[10] ) + ( GND ) + ( A1L67 );
A1L63 = CARRY(A1L63_adder_eqn);


--cntr[10] is cntr[10]
--register power-up is low

cntr[10] = DFFEAS(A1L62, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L66 is Add0~65
A1L66_adder_eqn = ( cntr[9] ) + ( GND ) + ( A1L71 );
A1L66 = SUM(A1L66_adder_eqn);

--A1L67 is Add0~66
A1L67_adder_eqn = ( cntr[9] ) + ( GND ) + ( A1L71 );
A1L67 = CARRY(A1L67_adder_eqn);


--cntr[9] is cntr[9]
--register power-up is low

cntr[9] = DFFEAS(A1L66, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L70 is Add0~69
A1L70_adder_eqn = ( cntr[8] ) + ( GND ) + ( A1L75 );
A1L70 = SUM(A1L70_adder_eqn);

--A1L71 is Add0~70
A1L71_adder_eqn = ( cntr[8] ) + ( GND ) + ( A1L75 );
A1L71 = CARRY(A1L71_adder_eqn);


--cntr[8] is cntr[8]
--register power-up is low

cntr[8] = DFFEAS(A1L70, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L74 is Add0~73
A1L74_adder_eqn = ( cntr[7] ) + ( GND ) + ( A1L79 );
A1L74 = SUM(A1L74_adder_eqn);

--A1L75 is Add0~74
A1L75_adder_eqn = ( cntr[7] ) + ( GND ) + ( A1L79 );
A1L75 = CARRY(A1L75_adder_eqn);


--cntr[7] is cntr[7]
--register power-up is low

cntr[7] = DFFEAS(A1L74, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L78 is Add0~77
A1L78_adder_eqn = ( cntr[6] ) + ( GND ) + ( A1L83 );
A1L78 = SUM(A1L78_adder_eqn);

--A1L79 is Add0~78
A1L79_adder_eqn = ( cntr[6] ) + ( GND ) + ( A1L83 );
A1L79 = CARRY(A1L79_adder_eqn);


--cntr[6] is cntr[6]
--register power-up is low

cntr[6] = DFFEAS(A1L78, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L82 is Add0~81
A1L82_adder_eqn = ( cntr[5] ) + ( GND ) + ( A1L87 );
A1L82 = SUM(A1L82_adder_eqn);

--A1L83 is Add0~82
A1L83_adder_eqn = ( cntr[5] ) + ( GND ) + ( A1L87 );
A1L83 = CARRY(A1L83_adder_eqn);


--cntr[5] is cntr[5]
--register power-up is low

cntr[5] = DFFEAS(A1L82, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L86 is Add0~85
A1L86_adder_eqn = ( cntr[4] ) + ( GND ) + ( A1L91 );
A1L86 = SUM(A1L86_adder_eqn);

--A1L87 is Add0~86
A1L87_adder_eqn = ( cntr[4] ) + ( GND ) + ( A1L91 );
A1L87 = CARRY(A1L87_adder_eqn);


--cntr[4] is cntr[4]
--register power-up is low

cntr[4] = DFFEAS(A1L86, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L90 is Add0~89
A1L90_adder_eqn = ( cntr[3] ) + ( GND ) + ( A1L95 );
A1L90 = SUM(A1L90_adder_eqn);

--A1L91 is Add0~90
A1L91_adder_eqn = ( cntr[3] ) + ( GND ) + ( A1L95 );
A1L91 = CARRY(A1L91_adder_eqn);


--cntr[3] is cntr[3]
--register power-up is low

cntr[3] = DFFEAS(A1L90, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L94 is Add0~93
A1L94_adder_eqn = ( cntr[2] ) + ( GND ) + ( A1L99 );
A1L94 = SUM(A1L94_adder_eqn);

--A1L95 is Add0~94
A1L95_adder_eqn = ( cntr[2] ) + ( GND ) + ( A1L99 );
A1L95 = CARRY(A1L95_adder_eqn);


--cntr[2] is cntr[2]
--register power-up is low

cntr[2] = DFFEAS(A1L94, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L98 is Add0~97
A1L98_adder_eqn = ( cntr[1] ) + ( GND ) + ( A1L103 );
A1L98 = SUM(A1L98_adder_eqn);

--A1L99 is Add0~98
A1L99_adder_eqn = ( cntr[1] ) + ( GND ) + ( A1L103 );
A1L99 = CARRY(A1L99_adder_eqn);


--cntr[1] is cntr[1]
--register power-up is low

cntr[1] = DFFEAS(A1L98, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--A1L102 is Add0~101
A1L102_adder_eqn = ( cntr[0] ) + ( VCC ) + ( !VCC );
A1L102 = SUM(A1L102_adder_eqn);

--A1L103 is Add0~102
A1L103_adder_eqn = ( cntr[0] ) + ( VCC ) + ( !VCC );
A1L103 = CARRY(A1L103_adder_eqn);


--cntr[0] is cntr[0]
--register power-up is low

cntr[0] = DFFEAS(A1L102, CLOCK_50,  ,  ,  ,  ,  , !key0_d3,  );


--KEY[1] is KEY[1]
KEY[1] = INPUT();


--KEY[2] is KEY[2]
KEY[2] = INPUT();


--KEY[3] is KEY[3]
KEY[3] = INPUT();


--LEDR[0] is LEDR[0]
LEDR[0] = OUTPUT(cntr[25]);


--LEDR[1] is LEDR[1]
LEDR[1] = OUTPUT(A1L153);


--LEDR[2] is LEDR[2]
LEDR[2] = OUTPUT(A1L153);


--LEDR[3] is LEDR[3]
LEDR[3] = OUTPUT(A1L153);


--LEDR[4] is LEDR[4]
LEDR[4] = OUTPUT(A1L153);


--LEDR[5] is LEDR[5]
LEDR[5] = OUTPUT(A1L153);


--LEDR[6] is LEDR[6]
LEDR[6] = OUTPUT(A1L152);


--LEDR[7] is LEDR[7]
LEDR[7] = OUTPUT(A1L153);


--LEDR[8] is LEDR[8]
LEDR[8] = OUTPUT(A1L152);


--LEDR[9] is LEDR[9]
LEDR[9] = OUTPUT(A1L153);


--CLOCK_50 is CLOCK_50
CLOCK_50 = INPUT();


--key0_d3 is key0_d3
--register power-up is low

key0_d3 = DFFEAS(key0_d2, CLOCK_50,  ,  ,  ,  ,  ,  ,  );


--key0_d2 is key0_d2
--register power-up is low

key0_d2 = DFFEAS(key0_d1, CLOCK_50,  ,  ,  ,  ,  ,  ,  );


--key0_d1 is key0_d1
--register power-up is low

key0_d1 = DFFEAS(KEY[0], CLOCK_50,  ,  ,  ,  ,  ,  ,  );


--KEY[0] is KEY[0]
KEY[0] = INPUT();


--A1L153 is ~VCC
A1L153 = VCC;


--A1L152 is ~GND
A1L152 = GND;


