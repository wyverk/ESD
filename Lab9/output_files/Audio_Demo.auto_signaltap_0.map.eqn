-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.
--W1_tdo_crc_val_shift_reg[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[0]
--register power-up is low

W1_tdo_crc_val_shift_reg[0] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[0], W1_tdo_crc_val_shift_reg[1], !W1L1512, W1L1587);


--CB6_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[0]
--register power-up is low

CB6_dffs[0] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[1], DB1_is_buffer_wrapped_once_sig, !W1_reset_all, W1_sdr);


--W1_tdo_crc_len_reg[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[0]
--register power-up is low

W1_tdo_crc_len_reg[0] = AMPP_FUNCTION(C1_raw_tck, W1L1370, W1_tdo_crc_len_reg[1], W1L1540, W1L1541, W1L1567);


--CB7_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[0]
--register power-up is low

CB7_dffs[0] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[0], CB7_dffs[1], !W1_reset_all, !X1_status_ram_shift_load);


--AB1_lfsr[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[0]
--register power-up is low

AB1_lfsr[0] = AMPP_FUNCTION(C1_raw_tck, AB1L16, W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[1]
--register power-up is low

W1_tdo_crc_val_shift_reg[1] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[1], W1_tdo_crc_val_shift_reg[2], !W1L1512, W1L1587);


--CB6_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[1]
--register power-up is low

CB6_dffs[1] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[2], DB1_last_buffer_write_address_sig[0], !W1_reset_all, W1_sdr);


--W1L1370 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~1
W1L1370 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[0]);

--W1L1371 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~2
W1L1371 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[0]);


--W1_tdo_crc_len_reg[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[1]
--register power-up is low

W1_tdo_crc_len_reg[1] = AMPP_FUNCTION(C1_raw_tck, W1L1374, W1_tdo_crc_len_reg[2], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[13]
--register power-up is low

W1_tdo_crc_len_reg[13] = AMPP_FUNCTION(C1_raw_tck, W1L1378, W1_tdo_crc_len_reg[14], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[14]
--register power-up is low

W1_tdo_crc_len_reg[14] = AMPP_FUNCTION(C1_raw_tck, W1L1382, W1_tdo_crc_len_reg[15], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[6]
--register power-up is low

W1_tdo_crc_len_reg[6] = AMPP_FUNCTION(C1_raw_tck, W1L1386, W1_tdo_crc_len_reg[7], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[7]
--register power-up is low

W1_tdo_crc_len_reg[7] = AMPP_FUNCTION(C1_raw_tck, W1L1390, W1_tdo_crc_len_reg[8], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[8]
--register power-up is low

W1_tdo_crc_len_reg[8] = AMPP_FUNCTION(C1_raw_tck, W1L1394, W1_tdo_crc_len_reg[9], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[9]
--register power-up is low

W1_tdo_crc_len_reg[9] = AMPP_FUNCTION(C1_raw_tck, W1L1398, W1_tdo_crc_len_reg[10], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[10]
--register power-up is low

W1_tdo_crc_len_reg[10] = AMPP_FUNCTION(C1_raw_tck, W1L1402, W1_tdo_crc_len_reg[11], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[11]
--register power-up is low

W1_tdo_crc_len_reg[11] = AMPP_FUNCTION(C1_raw_tck, W1L1406, W1_tdo_crc_len_reg[12], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[2]
--register power-up is low

W1_tdo_crc_len_reg[2] = AMPP_FUNCTION(C1_raw_tck, W1L1410, W1_tdo_crc_len_reg[3], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[3]
--register power-up is low

W1_tdo_crc_len_reg[3] = AMPP_FUNCTION(C1_raw_tck, W1L1414, W1_tdo_crc_len_reg[4], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[4]
--register power-up is low

W1_tdo_crc_len_reg[4] = AMPP_FUNCTION(C1_raw_tck, W1L1418, W1_tdo_crc_len_reg[5], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[5]
--register power-up is low

W1_tdo_crc_len_reg[5] = AMPP_FUNCTION(C1_raw_tck, W1L1422, W1_tdo_crc_len_reg[6], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[27]
--register power-up is low

W1_tdo_crc_len_reg[27] = AMPP_FUNCTION(C1_raw_tck, W1L1426, W1_tdo_crc_len_reg[28], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[28]
--register power-up is low

W1_tdo_crc_len_reg[28] = AMPP_FUNCTION(C1_raw_tck, W1L1430, W1_tdo_crc_len_reg[29], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[29]
--register power-up is low

W1_tdo_crc_len_reg[29] = AMPP_FUNCTION(C1_raw_tck, W1L1434, W1_tdo_crc_len_reg[30], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[30]
--register power-up is low

W1_tdo_crc_len_reg[30] = AMPP_FUNCTION(C1_raw_tck, W1L1438, W1_tdo_crc_len_reg[31], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[31]
--register power-up is low

W1_tdo_crc_len_reg[31] = AMPP_FUNCTION(C1_raw_tck, W1L1442, C1_tdi, W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[12]
--register power-up is low

W1_tdo_crc_len_reg[12] = AMPP_FUNCTION(C1_raw_tck, W1L1446, W1_tdo_crc_len_reg[13], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[15]
--register power-up is low

W1_tdo_crc_len_reg[15] = AMPP_FUNCTION(C1_raw_tck, W1L1450, W1_tdo_crc_len_reg[16], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[16]
--register power-up is low

W1_tdo_crc_len_reg[16] = AMPP_FUNCTION(C1_raw_tck, W1L1454, W1_tdo_crc_len_reg[17], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[17]
--register power-up is low

W1_tdo_crc_len_reg[17] = AMPP_FUNCTION(C1_raw_tck, W1L1458, W1_tdo_crc_len_reg[18], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[18]
--register power-up is low

W1_tdo_crc_len_reg[18] = AMPP_FUNCTION(C1_raw_tck, W1L1462, W1_tdo_crc_len_reg[19], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[19]
--register power-up is low

W1_tdo_crc_len_reg[19] = AMPP_FUNCTION(C1_raw_tck, W1L1466, W1_tdo_crc_len_reg[20], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[20]
--register power-up is low

W1_tdo_crc_len_reg[20] = AMPP_FUNCTION(C1_raw_tck, W1L1470, W1_tdo_crc_len_reg[21], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[21]
--register power-up is low

W1_tdo_crc_len_reg[21] = AMPP_FUNCTION(C1_raw_tck, W1L1474, W1_tdo_crc_len_reg[22], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[22]
--register power-up is low

W1_tdo_crc_len_reg[22] = AMPP_FUNCTION(C1_raw_tck, W1L1478, W1_tdo_crc_len_reg[23], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[23]
--register power-up is low

W1_tdo_crc_len_reg[23] = AMPP_FUNCTION(C1_raw_tck, W1L1482, W1_tdo_crc_len_reg[24], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[24]
--register power-up is low

W1_tdo_crc_len_reg[24] = AMPP_FUNCTION(C1_raw_tck, W1L1486, W1_tdo_crc_len_reg[25], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[25]
--register power-up is low

W1_tdo_crc_len_reg[25] = AMPP_FUNCTION(C1_raw_tck, W1L1490, W1_tdo_crc_len_reg[26], W1L1540, W1L1541, W1L1567);


--W1_tdo_crc_len_reg[26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[26]
--register power-up is low

W1_tdo_crc_len_reg[26] = AMPP_FUNCTION(C1_raw_tck, W1L1494, W1_tdo_crc_len_reg[27], W1L1540, W1L1541, W1L1567);


--Y1_xq[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[0]
--register power-up is low

Y1_xq[0] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][0], Y1_cells[0][0], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[1]
--register power-up is low

CB7_dffs[1] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[1], CB7_dffs[2], !W1_reset_all, !X1_status_ram_shift_load);


--JB1_counter_reg_bit[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_reg_bit[2]
--register power-up is low

JB1_counter_reg_bit[2] = AMPP_FUNCTION(C1_raw_tck, JB1_counter_comb_bita2, C1L1465, !X1_status_offload_shift_ena, JB1_cout_actual);


--JB1_counter_reg_bit[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_reg_bit[0]
--register power-up is low

JB1_counter_reg_bit[0] = AMPP_FUNCTION(C1_raw_tck, JB1_counter_comb_bita0, C1L1465, !X1_status_offload_shift_ena, JB1_cout_actual);


--JB1_counter_reg_bit[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_reg_bit[4]
--register power-up is low

JB1_counter_reg_bit[4] = AMPP_FUNCTION(C1_raw_tck, JB1_counter_comb_bita4, C1L1465, !X1_status_offload_shift_ena, JB1_cout_actual);


--JB1_counter_reg_bit[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_reg_bit[3]
--register power-up is low

JB1_counter_reg_bit[3] = AMPP_FUNCTION(C1_raw_tck, JB1_counter_comb_bita3, C1L1465, !X1_status_offload_shift_ena, JB1_cout_actual);


--JB1_counter_reg_bit[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_reg_bit[1]
--register power-up is low

JB1_counter_reg_bit[1] = AMPP_FUNCTION(C1_raw_tck, JB1_counter_comb_bita1, C1L1465, !X1_status_offload_shift_ena, JB1_cout_actual);


--AB1_lfsr[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[1]
--register power-up is low

AB1_lfsr[1] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[2], W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[2]
--register power-up is low

W1_tdo_crc_val_shift_reg[2] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[2], W1_tdo_crc_val_shift_reg[3], !W1L1512, W1L1587);


--DB1_counter[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[9]
--register power-up is low

DB1_counter[9] = AMPP_FUNCTION(C1_acq_clk, DB1L165, !W1_reset_all, DB1L161, W1_collect_data);


--DB1_counter[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[10]
--register power-up is low

DB1_counter[10] = AMPP_FUNCTION(C1_acq_clk, DB1L166, !W1_reset_all, DB1L161, W1_collect_data);


--DB1_counter[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[6]
--register power-up is low

DB1_counter[6] = AMPP_FUNCTION(C1_acq_clk, DB1L167, !W1_reset_all, DB1L161, W1_collect_data);


--DB1_counter[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[7]
--register power-up is low

DB1_counter[7] = AMPP_FUNCTION(C1_acq_clk, DB1L168, !W1_reset_all, DB1L161, W1_collect_data);


--DB1_counter[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[8]
--register power-up is low

DB1_counter[8] = AMPP_FUNCTION(C1_acq_clk, DB1L169, !W1_reset_all, DB1L161, W1_collect_data);


--DB1_counter[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[0]
--register power-up is low

DB1_counter[0] = AMPP_FUNCTION(C1_acq_clk, DB1L170, !W1_reset_all, DB1L161, W1_collect_data);


--DB1_counter[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[1]
--register power-up is low

DB1_counter[1] = AMPP_FUNCTION(C1_acq_clk, DB1L171, !W1_reset_all, DB1L161, W1_collect_data);


--DB1_counter[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[2]
--register power-up is low

DB1_counter[2] = AMPP_FUNCTION(C1_acq_clk, DB1L172, !W1_reset_all, DB1L161, W1_collect_data);


--DB1_counter[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[3]
--register power-up is low

DB1_counter[3] = AMPP_FUNCTION(C1_acq_clk, DB1L173, !W1_reset_all, DB1L161, W1_collect_data);


--DB1_counter[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[4]
--register power-up is low

DB1_counter[4] = AMPP_FUNCTION(C1_acq_clk, DB1L174, !W1_reset_all, DB1L161, W1_collect_data);


--DB1_counter[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[5]
--register power-up is low

DB1_counter[5] = AMPP_FUNCTION(C1_acq_clk, DB1L175, !W1_reset_all, DB1L161, W1_collect_data);


--CB6_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[2]
--register power-up is low

CB6_dffs[2] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[3], DB1_last_buffer_write_address_sig[1], !W1_reset_all, W1_sdr);


--DB1_last_buffer_write_address_sig[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[0]
--register power-up is low

DB1_last_buffer_write_address_sig[0] = AMPP_FUNCTION(C1_acq_clk, DB1L71, DB1L230, DB1L195);


--W1L1374 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~5
W1L1374 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[1], W1L1371);

--W1L1375 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~6
W1L1375 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[1], W1L1371);


--W1L1378 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~9
W1L1378 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[13], W1L1447);

--W1L1379 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~10
W1L1379 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[13], W1L1447);


--W1L1382 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~13
W1L1382 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[14], W1L1379);

--W1L1383 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~14
W1L1383 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[14], W1L1379);


--W1L1386 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~17
W1L1386 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[6], W1L1423);

--W1L1387 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~18
W1L1387 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[6], W1L1423);


--W1L1390 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~21
W1L1390 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[7], W1L1387);

--W1L1391 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~22
W1L1391 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[7], W1L1387);


--W1L1394 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~25
W1L1394 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[8], W1L1391);

--W1L1395 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~26
W1L1395 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[8], W1L1391);


--W1L1398 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~29
W1L1398 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[9], W1L1395);

--W1L1399 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~30
W1L1399 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[9], W1L1395);


--W1L1402 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~33
W1L1402 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[10], W1L1399);

--W1L1403 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~34
W1L1403 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[10], W1L1399);


--W1L1406 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~37
W1L1406 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[11], W1L1403);

--W1L1407 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~38
W1L1407 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[11], W1L1403);


--W1L1410 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~41
W1L1410 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[2], W1L1375);

--W1L1411 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~42
W1L1411 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[2], W1L1375);


--W1L1414 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~45
W1L1414 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[3], W1L1411);

--W1L1415 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~46
W1L1415 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[3], W1L1411);


--W1L1418 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~49
W1L1418 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[4], W1L1415);

--W1L1419 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~50
W1L1419 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[4], W1L1415);


--W1L1422 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~53
W1L1422 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[5], W1L1419);

--W1L1423 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~54
W1L1423 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[5], W1L1419);


--W1L1426 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~57
W1L1426 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[27], W1L1495);

--W1L1427 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~58
W1L1427 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[27], W1L1495);


--W1L1430 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~61
W1L1430 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[28], W1L1427);

--W1L1431 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~62
W1L1431 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[28], W1L1427);


--W1L1434 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~65
W1L1434 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[29], W1L1431);

--W1L1435 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~66
W1L1435 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[29], W1L1431);


--W1L1438 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~69
W1L1438 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[30], W1L1435);

--W1L1439 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~70
W1L1439 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[30], W1L1435);


--W1L1442 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~73
W1L1442 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[31], W1L1439);


--W1L1446 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~77
W1L1446 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[12], W1L1407);

--W1L1447 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~78
W1L1447 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[12], W1L1407);


--W1L1450 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~81
W1L1450 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[15], W1L1383);

--W1L1451 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~82
W1L1451 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[15], W1L1383);


--W1L1454 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~85
W1L1454 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[16], W1L1451);

--W1L1455 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~86
W1L1455 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[16], W1L1451);


--W1L1458 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~89
W1L1458 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[17], W1L1455);

--W1L1459 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~90
W1L1459 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[17], W1L1455);


--W1L1462 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~93
W1L1462 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[18], W1L1459);

--W1L1463 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~94
W1L1463 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[18], W1L1459);


--W1L1466 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~97
W1L1466 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[19], W1L1463);

--W1L1467 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~98
W1L1467 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[19], W1L1463);


--W1L1470 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~101
W1L1470 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[20], W1L1467);

--W1L1471 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~102
W1L1471 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[20], W1L1467);


--W1L1474 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~105
W1L1474 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[21], W1L1471);

--W1L1475 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~106
W1L1475 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[21], W1L1471);


--W1L1478 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~109
W1L1478 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[22], W1L1475);

--W1L1479 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~110
W1L1479 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[22], W1L1475);


--W1L1482 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~113
W1L1482 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[23], W1L1479);

--W1L1483 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~114
W1L1483 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[23], W1L1479);


--W1L1486 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~117
W1L1486 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[24], W1L1483);

--W1L1487 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~118
W1L1487 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[24], W1L1483);


--W1L1490 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~121
W1L1490 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[25], W1L1487);

--W1L1491 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~122
W1L1491 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[25], W1L1487);


--W1L1494 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~125
W1L1494 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[26], W1L1491);

--W1L1495 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|Add0~126
W1L1495 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[26], W1L1491);


--Y1_xq[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[1]
--register power-up is low

Y1_xq[1] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][1], Y1_cells[0][1], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[2]
--register power-up is low

CB7_dffs[2] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[2], CB7_dffs[3], !W1_reset_all, !X1_status_ram_shift_load);


--JB1_counter_comb_bita2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita2
JB1_counter_comb_bita2 = AMPP_FUNCTION(!JB1_counter_reg_bit[2], JB1L7);

--JB1L11 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita2~COUT
JB1L11 = AMPP_FUNCTION(!JB1_counter_reg_bit[2], JB1L7);


--JB1L19 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita4~1
JB1L19 = AMPP_FUNCTION(JB1L23);


--JB1_counter_comb_bita0 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita0
JB1_counter_comb_bita0 = AMPP_FUNCTION(!JB1_counter_reg_bit[0]);

--JB1L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita0~COUT
JB1L3 = AMPP_FUNCTION(!JB1_counter_reg_bit[0]);


--JB1_counter_comb_bita4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita4
JB1_counter_comb_bita4 = AMPP_FUNCTION(!JB1_counter_reg_bit[4], JB1L15);

--JB1L23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita4~COUT
JB1L23 = AMPP_FUNCTION(!JB1_counter_reg_bit[4], JB1L15);


--JB1_counter_comb_bita3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita3
JB1_counter_comb_bita3 = AMPP_FUNCTION(!JB1_counter_reg_bit[3], JB1L11);

--JB1L15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita3~COUT
JB1L15 = AMPP_FUNCTION(!JB1_counter_reg_bit[3], JB1L11);


--JB1_counter_comb_bita1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita1
JB1_counter_comb_bita1 = AMPP_FUNCTION(!JB1_counter_reg_bit[1], JB1L3);

--JB1L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|counter_comb_bita1~COUT
JB1L7 = AMPP_FUNCTION(!JB1_counter_reg_bit[1], JB1L3);


--DB1L67 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~1
DB1L67 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[6], DB1L92);

--DB1L68 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~2
DB1L68 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[6], DB1L92);


--DB1L71 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~5
DB1L71 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[0]);

--DB1L72 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~6
DB1L72 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[0]);


--DB1L75 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~9
DB1L75 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[1], DB1L72);

--DB1L76 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~10
DB1L76 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[1], DB1L72);


--DB1L79 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~13
DB1L79 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[2], DB1L76);

--DB1L80 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~14
DB1L80 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[2], DB1L76);


--DB1L83 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~17
DB1L83 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[3], DB1L80);

--DB1L84 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~18
DB1L84 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[3], DB1L80);


--DB1L87 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~21
DB1L87 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[4], DB1L84);

--DB1L88 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~22
DB1L88 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[4], DB1L84);


--DB1L91 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~25
DB1L91 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[5], DB1L88);

--DB1L92 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~26
DB1L92 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[5], DB1L88);


--DB1L95 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~29
DB1L95 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[7], DB1L68);

--DB1L96 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~30
DB1L96 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[7], DB1L68);


--DB1L99 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~33
DB1L99 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[8], DB1L96);

--DB1L100 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~34
DB1L100 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[8], DB1L96);


--DB1L103 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add2~37
DB1L103 = AMPP_FUNCTION(!DB1_\buffer_manager:next_address[9], DB1L100);


--AB1_lfsr[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[2]
--register power-up is low

AB1_lfsr[2] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[3], W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[3]
--register power-up is low

W1_tdo_crc_val_shift_reg[3] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[3], W1_tdo_crc_val_shift_reg[4], !W1L1512, W1L1587);


--DB1L27 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~1
DB1L27 = AMPP_FUNCTION(!CB4_dffs[9], DB1L44);

--DB1L28 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~2
DB1L28 = AMPP_FUNCTION(!CB4_dffs[9], DB1L44);


--DB1L107 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~1
DB1L107 = AMPP_FUNCTION(!DB1_counter[9], DB1L124);

--DB1L108 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~2
DB1L108 = AMPP_FUNCTION(!DB1_counter[9], DB1L124);


--DB1L31 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~5
DB1L31 = AMPP_FUNCTION(DB1L28);


--DB1L111 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~5
DB1L111 = AMPP_FUNCTION(!DB1_counter[10], DB1L108);


--DB1L35 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~9
DB1L35 = AMPP_FUNCTION(!CB4_dffs[6], DB1L64);

--DB1L36 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~10
DB1L36 = AMPP_FUNCTION(!CB4_dffs[6], DB1L64);


--DB1L115 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~9
DB1L115 = AMPP_FUNCTION(!DB1_counter[6], DB1L148);

--DB1L116 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~10
DB1L116 = AMPP_FUNCTION(!DB1_counter[6], DB1L148);


--DB1L39 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~13
DB1L39 = AMPP_FUNCTION(!CB4_dffs[7], DB1L36);

--DB1L40 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~14
DB1L40 = AMPP_FUNCTION(!CB4_dffs[7], DB1L36);


--DB1L119 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~13
DB1L119 = AMPP_FUNCTION(!DB1_counter[7], DB1L116);

--DB1L120 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~14
DB1L120 = AMPP_FUNCTION(!DB1_counter[7], DB1L116);


--DB1L43 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~17
DB1L43 = AMPP_FUNCTION(!CB4_dffs[8], DB1L40);

--DB1L44 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~18
DB1L44 = AMPP_FUNCTION(!CB4_dffs[8], DB1L40);


--DB1L123 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~17
DB1L123 = AMPP_FUNCTION(!DB1_counter[8], DB1L120);

--DB1L124 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~18
DB1L124 = AMPP_FUNCTION(!DB1_counter[8], DB1L120);


--DB1L127 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~21
DB1L127 = AMPP_FUNCTION(!DB1_counter[0]);

--DB1L128 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~22
DB1L128 = AMPP_FUNCTION(!DB1_counter[0]);


--DB1L47 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~21
DB1L47 = AMPP_FUNCTION(!CB4_dffs[0], !CB4_dffs[1]);

--DB1L48 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~22
DB1L48 = AMPP_FUNCTION(!CB4_dffs[0], !CB4_dffs[1]);


--DB1L131 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~25
DB1L131 = AMPP_FUNCTION(!DB1_counter[1], DB1L128);

--DB1L132 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~26
DB1L132 = AMPP_FUNCTION(!DB1_counter[1], DB1L128);


--DB1L51 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~25
DB1L51 = AMPP_FUNCTION(!CB4_dffs[2], DB1L48);

--DB1L52 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~26
DB1L52 = AMPP_FUNCTION(!CB4_dffs[2], DB1L48);


--DB1L135 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~29
DB1L135 = AMPP_FUNCTION(!DB1_counter[2], DB1L132);

--DB1L136 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~30
DB1L136 = AMPP_FUNCTION(!DB1_counter[2], DB1L132);


--DB1L55 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~29
DB1L55 = AMPP_FUNCTION(!CB4_dffs[3], DB1L52);

--DB1L56 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~30
DB1L56 = AMPP_FUNCTION(!CB4_dffs[3], DB1L52);


--DB1L139 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~33
DB1L139 = AMPP_FUNCTION(!DB1_counter[3], DB1L136);

--DB1L140 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~34
DB1L140 = AMPP_FUNCTION(!DB1_counter[3], DB1L136);


--DB1L59 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~33
DB1L59 = AMPP_FUNCTION(!CB4_dffs[4], DB1L56);

--DB1L60 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~34
DB1L60 = AMPP_FUNCTION(!CB4_dffs[4], DB1L56);


--DB1L143 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~37
DB1L143 = AMPP_FUNCTION(!DB1_counter[4], DB1L140);

--DB1L144 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~38
DB1L144 = AMPP_FUNCTION(!DB1_counter[4], DB1L140);


--DB1L63 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~37
DB1L63 = AMPP_FUNCTION(!CB4_dffs[5], DB1L60);

--DB1L64 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add0~38
DB1L64 = AMPP_FUNCTION(!CB4_dffs[5], DB1L60);


--DB1L147 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~41
DB1L147 = AMPP_FUNCTION(!DB1_counter[5], DB1L144);

--DB1L148 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Add3~42
DB1L148 = AMPP_FUNCTION(!DB1_counter[5], DB1L144);


--CB6_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[3]
--register power-up is low

CB6_dffs[3] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[4], DB1_last_buffer_write_address_sig[2], !W1_reset_all, W1_sdr);


--DB1_last_buffer_write_address_sig[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[1]
--register power-up is low

DB1_last_buffer_write_address_sig[1] = AMPP_FUNCTION(C1_acq_clk, DB1L75, DB1L230, DB1L195);


--LB1_counter_reg_bit[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_read_pointer_counter|cntr_kri:auto_generated|counter_reg_bit[0]
--register power-up is low

LB1_counter_reg_bit[0] = AMPP_FUNCTION(C1_raw_tck, LB1_counter_comb_bita0, C1L1465, X1_status_buf_read_reset, LB1_cout_actual, X1L5);


--Y1_xq[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[2]
--register power-up is low

Y1_xq[2] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][2], Y1_cells[0][2], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[3]
--register power-up is low

CB7_dffs[3] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[3], CB7_dffs[4], !W1_reset_all, !X1_status_ram_shift_load);


--DB1_\buffer_manager:next_address[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[6]
--register power-up is low

DB1_\buffer_manager:next_address[6] = AMPP_FUNCTION(C1_acq_clk, DB1L67, !W1_reset_all, DB1L230, W1_collect_data);


--DB1_\buffer_manager:next_address[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[0]
--register power-up is low

DB1_\buffer_manager:next_address[0] = AMPP_FUNCTION(C1_acq_clk, DB1L71, !W1_reset_all, DB1L230, W1_collect_data);


--DB1_\buffer_manager:next_address[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[1]
--register power-up is low

DB1_\buffer_manager:next_address[1] = AMPP_FUNCTION(C1_acq_clk, DB1L75, !W1_reset_all, DB1L230, W1_collect_data);


--DB1_\buffer_manager:next_address[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[2]
--register power-up is low

DB1_\buffer_manager:next_address[2] = AMPP_FUNCTION(C1_acq_clk, DB1L79, !W1_reset_all, DB1L230, W1_collect_data);


--DB1_\buffer_manager:next_address[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[3]
--register power-up is low

DB1_\buffer_manager:next_address[3] = AMPP_FUNCTION(C1_acq_clk, DB1L83, !W1_reset_all, DB1L230, W1_collect_data);


--DB1_\buffer_manager:next_address[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[4]
--register power-up is low

DB1_\buffer_manager:next_address[4] = AMPP_FUNCTION(C1_acq_clk, DB1L87, !W1_reset_all, DB1L230, W1_collect_data);


--DB1_\buffer_manager:next_address[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[5]
--register power-up is low

DB1_\buffer_manager:next_address[5] = AMPP_FUNCTION(C1_acq_clk, DB1L91, !W1_reset_all, DB1L230, W1_collect_data);


--DB1_\buffer_manager:next_address[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[7]
--register power-up is low

DB1_\buffer_manager:next_address[7] = AMPP_FUNCTION(C1_acq_clk, DB1L95, !W1_reset_all, DB1L230, W1_collect_data);


--DB1_\buffer_manager:next_address[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[8]
--register power-up is low

DB1_\buffer_manager:next_address[8] = AMPP_FUNCTION(C1_acq_clk, DB1L99, !W1_reset_all, DB1L230, W1_collect_data);


--DB1_\buffer_manager:next_address[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:next_address[9]
--register power-up is low

DB1_\buffer_manager:next_address[9] = AMPP_FUNCTION(C1_acq_clk, DB1L103, !W1_reset_all, DB1L230, W1_collect_data);


--AB1_lfsr[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[3]
--register power-up is low

AB1_lfsr[3] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[4], W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[4]
--register power-up is low

W1_tdo_crc_val_shift_reg[4] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[4], W1_tdo_crc_val_shift_reg[5], !W1L1512, W1L1587);


--CB6_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[4]
--register power-up is low

CB6_dffs[4] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[5], DB1_last_buffer_write_address_sig[3], !W1_reset_all, W1_sdr);


--DB1_last_buffer_write_address_sig[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[2]
--register power-up is low

DB1_last_buffer_write_address_sig[2] = AMPP_FUNCTION(C1_acq_clk, DB1L79, DB1L230, DB1L195);


--LB1_counter_comb_bita0 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_read_pointer_counter|cntr_kri:auto_generated|counter_comb_bita0
LB1_counter_comb_bita0 = AMPP_FUNCTION(!LB1_counter_reg_bit[0]);

--LB1L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_read_pointer_counter|cntr_kri:auto_generated|counter_comb_bita0~COUT
LB1L7 = AMPP_FUNCTION(!LB1_counter_reg_bit[0]);


--LB1L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_read_pointer_counter|cntr_kri:auto_generated|counter_comb_bita0~1
LB1L3 = AMPP_FUNCTION(LB1L7);


--Y1_xq[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[3]
--register power-up is low

Y1_xq[3] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][3], Y1_cells[0][3], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[4]
--register power-up is low

CB7_dffs[4] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[4], CB7_dffs[5], !W1_reset_all, !X1_status_ram_shift_load);


--AB1_lfsr[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[4]
--register power-up is low

AB1_lfsr[4] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[5], W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[5]
--register power-up is low

W1_tdo_crc_val_shift_reg[5] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[5], W1_tdo_crc_val_shift_reg[6], !W1L1512, W1L1587);


--CB6_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[5]
--register power-up is low

CB6_dffs[5] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[6], DB1_last_buffer_write_address_sig[4], !W1_reset_all, W1_sdr);


--DB1_last_buffer_write_address_sig[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[3]
--register power-up is low

DB1_last_buffer_write_address_sig[3] = AMPP_FUNCTION(C1_acq_clk, DB1L83, DB1L230, DB1L195);


--DB1_\buffer_manager:last_trigger_address_var[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[0]
--register power-up is low

DB1_\buffer_manager:last_trigger_address_var[0] = AMPP_FUNCTION(C1_acq_clk, DB1L71, !W1_reset_all, DB1L230, DB1L186);


--Y1_xq[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[4]
--register power-up is low

Y1_xq[4] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][4], Y1_cells[0][4], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[5]
--register power-up is low

CB7_dffs[5] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[5], CB7_dffs[6], !W1_reset_all, !X1_status_ram_shift_load);


--AB1_lfsr[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[5]
--register power-up is low

AB1_lfsr[5] = AMPP_FUNCTION(C1_raw_tck, AB1L17, W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[6]
--register power-up is low

W1_tdo_crc_val_shift_reg[6] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[6], W1_tdo_crc_val_shift_reg[7], !W1L1512, W1L1587);


--CB6_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[6]
--register power-up is low

CB6_dffs[6] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[7], DB1_last_buffer_write_address_sig[5], !W1_reset_all, W1_sdr);


--DB1_last_buffer_write_address_sig[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[4]
--register power-up is low

DB1_last_buffer_write_address_sig[4] = AMPP_FUNCTION(C1_acq_clk, DB1L87, DB1L230, DB1L195);


--DB1_\buffer_manager:last_trigger_address_var[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[1]
--register power-up is low

DB1_\buffer_manager:last_trigger_address_var[1] = AMPP_FUNCTION(C1_acq_clk, DB1L75, !W1_reset_all, DB1L230, DB1L186);


--Y1_xq[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[5]
--register power-up is low

Y1_xq[5] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][5], Y1_cells[0][5], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[6]
--register power-up is low

CB7_dffs[6] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[6], CB7_dffs[7], !W1_reset_all, !X1_status_ram_shift_load);


--AB1_lfsr[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[6]
--register power-up is low

AB1_lfsr[6] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[7], W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[7]
--register power-up is low

W1_tdo_crc_val_shift_reg[7] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[7], W1_tdo_crc_val_shift_reg[8], !W1L1512, W1L1587);


--CB6_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[7]
--register power-up is low

CB6_dffs[7] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[8], DB1_last_buffer_write_address_sig[6], !W1_reset_all, W1_sdr);


--DB1_last_buffer_write_address_sig[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[5]
--register power-up is low

DB1_last_buffer_write_address_sig[5] = AMPP_FUNCTION(C1_acq_clk, DB1L91, DB1L230, DB1L195);


--DB1_\buffer_manager:last_trigger_address_var[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[2]
--register power-up is low

DB1_\buffer_manager:last_trigger_address_var[2] = AMPP_FUNCTION(C1_acq_clk, DB1L79, !W1_reset_all, DB1L230, DB1L186);


--Y1_xq[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[6]
--register power-up is low

Y1_xq[6] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][6], Y1_cells[0][6], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[7]
--register power-up is low

CB7_dffs[7] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[7], CB7_dffs[8], !W1_reset_all, !X1_status_ram_shift_load);


--AB1_lfsr[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[7]
--register power-up is low

AB1_lfsr[7] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[8], W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[8]
--register power-up is low

W1_tdo_crc_val_shift_reg[8] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[8], W1_tdo_crc_val_shift_reg[9], !W1L1512, W1L1587);


--CB6_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[8]
--register power-up is low

CB6_dffs[8] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[9], DB1_last_buffer_write_address_sig[7], !W1_reset_all, W1_sdr);


--DB1_last_buffer_write_address_sig[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[6]
--register power-up is low

DB1_last_buffer_write_address_sig[6] = AMPP_FUNCTION(C1_acq_clk, DB1L67, DB1L230, DB1L195);


--DB1_\buffer_manager:last_trigger_address_var[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[3]
--register power-up is low

DB1_\buffer_manager:last_trigger_address_var[3] = AMPP_FUNCTION(C1_acq_clk, DB1L83, !W1_reset_all, DB1L230, DB1L186);


--Y1_xq[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[7]
--register power-up is low

Y1_xq[7] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][7], Y1_cells[0][7], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[8]
--register power-up is low

CB7_dffs[8] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[8], CB7_dffs[9], !W1_reset_all, !X1_status_ram_shift_load);


--AB1_lfsr[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[8]
--register power-up is low

AB1_lfsr[8] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[9], W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[9]
--register power-up is low

W1_tdo_crc_val_shift_reg[9] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[9], W1_tdo_crc_val_shift_reg[10], !W1L1512, W1L1587);


--CB6_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[9]
--register power-up is low

CB6_dffs[9] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[10], DB1_last_buffer_write_address_sig[8], !W1_reset_all, W1_sdr);


--DB1_last_buffer_write_address_sig[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[7]
--register power-up is low

DB1_last_buffer_write_address_sig[7] = AMPP_FUNCTION(C1_acq_clk, DB1L95, DB1L230, DB1L195);


--DB1_\buffer_manager:last_trigger_address_var[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[4]
--register power-up is low

DB1_\buffer_manager:last_trigger_address_var[4] = AMPP_FUNCTION(C1_acq_clk, DB1L87, !W1_reset_all, DB1L230, DB1L186);


--Y1_xq[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[8]
--register power-up is low

Y1_xq[8] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][8], Y1_cells[0][8], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[9]
--register power-up is low

CB7_dffs[9] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[9], CB7_dffs[10], !W1_reset_all, !X1_status_ram_shift_load);


--AB1_lfsr[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[9]
--register power-up is low

AB1_lfsr[9] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[10], W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[10]
--register power-up is low

W1_tdo_crc_val_shift_reg[10] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[10], W1_tdo_crc_val_shift_reg[11], !W1L1512, W1L1587);


--CB6_dffs[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[10]
--register power-up is low

CB6_dffs[10] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[11], DB1_last_buffer_write_address_sig[9], !W1_reset_all, W1_sdr);


--DB1_last_buffer_write_address_sig[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[8]
--register power-up is low

DB1_last_buffer_write_address_sig[8] = AMPP_FUNCTION(C1_acq_clk, DB1L99, DB1L230, DB1L195);


--DB1_\buffer_manager:last_trigger_address_var[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[5]
--register power-up is low

DB1_\buffer_manager:last_trigger_address_var[5] = AMPP_FUNCTION(C1_acq_clk, DB1L91, !W1_reset_all, DB1L230, DB1L186);


--Y1_xq[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[9]
--register power-up is low

Y1_xq[9] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][9], Y1_cells[0][9], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[10]
--register power-up is low

CB7_dffs[10] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[10], CB7_dffs[11], !W1_reset_all, !X1_status_ram_shift_load);


--AB1_lfsr[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[10]
--register power-up is low

AB1_lfsr[10] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[11], W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[11]
--register power-up is low

W1_tdo_crc_val_shift_reg[11] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[11], W1_tdo_crc_val_shift_reg[12], !W1L1512, W1L1587);


--CB6_dffs[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[11]
--register power-up is low

CB6_dffs[11] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[12], DB1_\buffer_manager:last_trigger_address_var[0], !W1_reset_all, W1_sdr);


--DB1_last_buffer_write_address_sig[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[9]
--register power-up is low

DB1_last_buffer_write_address_sig[9] = AMPP_FUNCTION(C1_acq_clk, DB1L103, DB1L230, DB1L195);


--DB1_\buffer_manager:last_trigger_address_var[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[6]
--register power-up is low

DB1_\buffer_manager:last_trigger_address_var[6] = AMPP_FUNCTION(C1_acq_clk, DB1L67, !W1_reset_all, DB1L230, DB1L186);


--Y1_xq[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[10]
--register power-up is low

Y1_xq[10] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][10], Y1_cells[0][10], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[11]
--register power-up is low

CB7_dffs[11] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[11], CB7_dffs[12], !W1_reset_all, !X1_status_ram_shift_load);


--AB1_lfsr[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[11]
--register power-up is low

AB1_lfsr[11] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[12], W1_tdo_crc_val_calc_reset, !AB1L12);


--W1_tdo_crc_val_shift_reg[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[12]
--register power-up is low

W1_tdo_crc_val_shift_reg[12] = AMPP_FUNCTION(C1_raw_tck, AB1_lfsr[12], W1_tdo_crc_val_shift_reg[13], !W1L1512, W1L1587);


--CB6_dffs[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[12]
--register power-up is low

CB6_dffs[12] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[13], DB1_\buffer_manager:last_trigger_address_var[1], !W1_reset_all, W1_sdr);


--DB1_\buffer_manager:last_trigger_address_var[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[7]
--register power-up is low

DB1_\buffer_manager:last_trigger_address_var[7] = AMPP_FUNCTION(C1_acq_clk, DB1L95, !W1_reset_all, DB1L230, DB1L186);


--Y1_xq[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[11]
--register power-up is low

Y1_xq[11] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][11], Y1_cells[0][11], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[12]
--register power-up is low

CB7_dffs[12] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[12], CB7_dffs[13], !W1_reset_all, !X1_status_ram_shift_load);


--AB1_lfsr[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[12]
--register power-up is low

AB1_lfsr[12] = AMPP_FUNCTION(C1_raw_tck, AB1L18, W1_tdo_crc_val_calc_reset, !AB1L12);


--CB6_dffs[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[13]
--register power-up is low

CB6_dffs[13] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[14], DB1_\buffer_manager:last_trigger_address_var[2], !W1_reset_all, W1_sdr);


--DB1_\buffer_manager:last_trigger_address_var[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[8]
--register power-up is low

DB1_\buffer_manager:last_trigger_address_var[8] = AMPP_FUNCTION(C1_acq_clk, DB1L99, !W1_reset_all, DB1L230, DB1L186);


--Y1_xq[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[12]
--register power-up is low

Y1_xq[12] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][12], Y1_cells[0][12], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[13]
--register power-up is low

CB7_dffs[13] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[13], CB7_dffs[14], !W1_reset_all, !X1_status_ram_shift_load);


--CB6_dffs[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[14]
--register power-up is low

CB6_dffs[14] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[15], DB1_\buffer_manager:last_trigger_address_var[3], !W1_reset_all, W1_sdr);


--DB1_\buffer_manager:last_trigger_address_var[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:last_trigger_address_var[9]
--register power-up is low

DB1_\buffer_manager:last_trigger_address_var[9] = AMPP_FUNCTION(C1_acq_clk, DB1L103, !W1_reset_all, DB1L230, DB1L186);


--Y1_xq[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[13]
--register power-up is low

Y1_xq[13] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][13], Y1_cells[0][13], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[14]
--register power-up is low

CB7_dffs[14] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[14], CB7_dffs[15], !W1_reset_all, !X1_status_ram_shift_load);


--CB6_dffs[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[15]
--register power-up is low

CB6_dffs[15] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[16], DB1_\buffer_manager:last_trigger_address_var[4], !W1_reset_all, W1_sdr);


--Y1_xq[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[14]
--register power-up is low

Y1_xq[14] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][14], Y1_cells[0][14], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[15]
--register power-up is low

CB7_dffs[15] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[15], CB7_dffs[16], !W1_reset_all, !X1_status_ram_shift_load);


--CB6_dffs[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[16]
--register power-up is low

CB6_dffs[16] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[17], DB1_\buffer_manager:last_trigger_address_var[5], !W1_reset_all, W1_sdr);


--Y1_xq[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[15]
--register power-up is low

Y1_xq[15] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][15], Y1_cells[0][15], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[16]
--register power-up is low

CB7_dffs[16] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[16], CB7_dffs[17], !W1_reset_all, !X1_status_ram_shift_load);


--CB6_dffs[17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[17]
--register power-up is low

CB6_dffs[17] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[18], DB1_\buffer_manager:last_trigger_address_var[6], !W1_reset_all, W1_sdr);


--Y1_xq[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[16]
--register power-up is low

Y1_xq[16] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][16], Y1_cells[0][16], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[17]
--register power-up is low

CB7_dffs[17] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[17], CB7_dffs[18], !W1_reset_all, !X1_status_ram_shift_load);


--CB6_dffs[18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[18]
--register power-up is low

CB6_dffs[18] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[19], DB1_\buffer_manager:last_trigger_address_var[7], !W1_reset_all, W1_sdr);


--Y1_xq[17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[17]
--register power-up is low

Y1_xq[17] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][17], Y1_cells[0][17], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[18]
--register power-up is low

CB7_dffs[18] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[18], CB7_dffs[19], !W1_reset_all, !X1_status_ram_shift_load);


--CB6_dffs[19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[19]
--register power-up is low

CB6_dffs[19] = AMPP_FUNCTION(C1_raw_tck, CB6_dffs[20], DB1_\buffer_manager:last_trigger_address_var[8], !W1_reset_all, W1_sdr);


--Y1_xq[18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[18]
--register power-up is low

Y1_xq[18] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][18], Y1_cells[0][18], !Y1_xraddr[0], C1_ir_in[7]);


--CB7_dffs[19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[19]
--register power-up is low

CB7_dffs[19] = AMPP_FUNCTION(C1_raw_tck, Y1_xq[19], CB7_dffs[20], !W1_reset_all, !X1_status_ram_shift_load);


--CB6_dffs[20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:info_data_shift_out|dffs[20]
--register power-up is low

CB6_dffs[20] = AMPP_FUNCTION(C1_raw_tck, CB5_dffs[0], DB1_\buffer_manager:last_trigger_address_var[9], !W1_reset_all, W1_sdr);


--Y1_xq[19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[19]
--register power-up is low

Y1_xq[19] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][19], Y1_cells[0][19], !Y1_xraddr[0], C1_ir_in[7]);


--CB5_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[0]
--register power-up is low

CB5_dffs[0] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a0, CB5_dffs[1], !W1_reset_all, !X1_ram_shift_load);


--Y1_xq[20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xq[20]
--register power-up is low

Y1_xq[20] = AMPP_FUNCTION(C1_raw_tck, Y1_cells[1][20], Y1_cells[0][20], !Y1_xraddr[0], C1_ir_in[7]);


--SB1_ram_block1a0 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a0
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a0 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][0], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[1]
--register power-up is low

CB5_dffs[1] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a1, CB5_dffs[2], !W1_reset_all, !X1_ram_shift_load);


--FB1_counter_reg_bit[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_reg_bit[8]
--register power-up is low

FB1_counter_reg_bit[8] = AMPP_FUNCTION(C1_raw_tck, FB1_counter_comb_bita8, C1L1465, !X1_offload_shift_ena, FB1_cout_actual);


--FB1_counter_reg_bit[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_reg_bit[7]
--register power-up is low

FB1_counter_reg_bit[7] = AMPP_FUNCTION(C1_raw_tck, FB1_counter_comb_bita7, C1L1465, !X1_offload_shift_ena, FB1_cout_actual);


--FB1_counter_reg_bit[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_reg_bit[6]
--register power-up is low

FB1_counter_reg_bit[6] = AMPP_FUNCTION(C1_raw_tck, FB1_counter_comb_bita6, C1L1465, !X1_offload_shift_ena, FB1_cout_actual);


--FB1_counter_reg_bit[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_reg_bit[5]
--register power-up is low

FB1_counter_reg_bit[5] = AMPP_FUNCTION(C1_raw_tck, FB1_counter_comb_bita5, C1L1465, !X1_offload_shift_ena, FB1_cout_actual);


--FB1_counter_reg_bit[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_reg_bit[4]
--register power-up is low

FB1_counter_reg_bit[4] = AMPP_FUNCTION(C1_raw_tck, FB1_counter_comb_bita4, C1L1465, !X1_offload_shift_ena, FB1_cout_actual);


--FB1_counter_reg_bit[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_reg_bit[3]
--register power-up is low

FB1_counter_reg_bit[3] = AMPP_FUNCTION(C1_raw_tck, FB1_counter_comb_bita3, C1L1465, !X1_offload_shift_ena, FB1_cout_actual);


--FB1_counter_reg_bit[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_reg_bit[2]
--register power-up is low

FB1_counter_reg_bit[2] = AMPP_FUNCTION(C1_raw_tck, FB1_counter_comb_bita2, C1L1465, !X1_offload_shift_ena, FB1_cout_actual);


--FB1_counter_reg_bit[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_reg_bit[1]
--register power-up is low

FB1_counter_reg_bit[1] = AMPP_FUNCTION(C1_raw_tck, FB1_counter_comb_bita1, C1L1465, !X1_offload_shift_ena, FB1_cout_actual);


--FB1_counter_reg_bit[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_reg_bit[0]
--register power-up is low

FB1_counter_reg_bit[0] = AMPP_FUNCTION(C1_raw_tck, FB1_counter_comb_bita0, C1L1465, !X1_offload_shift_ena, FB1_cout_actual);


--HB1_counter_reg_bit[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_reg_bit[0]
--register power-up is low

HB1_counter_reg_bit[0] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita0, X1_acq_buf_read_reset, X1_read_pointer_counter_clk_ena);


--HB1_counter_reg_bit[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_reg_bit[1]
--register power-up is low

HB1_counter_reg_bit[1] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita1, X1_acq_buf_read_reset, X1_read_pointer_counter_clk_ena);


--HB1_counter_reg_bit[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_reg_bit[2]
--register power-up is low

HB1_counter_reg_bit[2] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita2, X1_acq_buf_read_reset, X1_read_pointer_counter_clk_ena);


--HB1_counter_reg_bit[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_reg_bit[3]
--register power-up is low

HB1_counter_reg_bit[3] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita3, X1_acq_buf_read_reset, X1_read_pointer_counter_clk_ena);


--HB1_counter_reg_bit[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_reg_bit[4]
--register power-up is low

HB1_counter_reg_bit[4] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita4, X1_acq_buf_read_reset, X1_read_pointer_counter_clk_ena);


--HB1_counter_reg_bit[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_reg_bit[5]
--register power-up is low

HB1_counter_reg_bit[5] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita5, X1_acq_buf_read_reset, X1_read_pointer_counter_clk_ena);


--HB1_counter_reg_bit[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_reg_bit[6]
--register power-up is low

HB1_counter_reg_bit[6] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita6, X1_acq_buf_read_reset, X1_read_pointer_counter_clk_ena);


--HB1_counter_reg_bit[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_reg_bit[7]
--register power-up is low

HB1_counter_reg_bit[7] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita7, X1_acq_buf_read_reset, X1_read_pointer_counter_clk_ena);


--HB1_counter_reg_bit[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_reg_bit[8]
--register power-up is low

HB1_counter_reg_bit[8] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita8, X1_acq_buf_read_reset, X1_read_pointer_counter_clk_ena);


--HB1_counter_reg_bit[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_reg_bit[9]
--register power-up is low

HB1_counter_reg_bit[9] = AMPP_FUNCTION(C1_raw_tck, HB1_counter_comb_bita9, X1_acq_buf_read_reset, X1_read_pointer_counter_clk_ena);


--SB1_ram_block1a1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a1
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a1 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][1], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[2]
--register power-up is low

CB5_dffs[2] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a2, CB5_dffs[3], !W1_reset_all, !X1_ram_shift_load);


--FB1_counter_comb_bita8 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita8
FB1_counter_comb_bita8 = AMPP_FUNCTION(!FB1_counter_reg_bit[8], FB1L31);

--FB1L39 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita8~COUT
FB1L39 = AMPP_FUNCTION(!FB1_counter_reg_bit[8], FB1L31);


--FB1L35 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita8~1
FB1L35 = AMPP_FUNCTION(FB1L39);


--FB1_counter_comb_bita7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita7
FB1_counter_comb_bita7 = AMPP_FUNCTION(!FB1_counter_reg_bit[7], FB1L27);

--FB1L31 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita7~COUT
FB1L31 = AMPP_FUNCTION(!FB1_counter_reg_bit[7], FB1L27);


--FB1_counter_comb_bita6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita6
FB1_counter_comb_bita6 = AMPP_FUNCTION(!FB1_counter_reg_bit[6], FB1L23);

--FB1L27 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita6~COUT
FB1L27 = AMPP_FUNCTION(!FB1_counter_reg_bit[6], FB1L23);


--FB1_counter_comb_bita5 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita5
FB1_counter_comb_bita5 = AMPP_FUNCTION(!FB1_counter_reg_bit[5], FB1L19);

--FB1L23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita5~COUT
FB1L23 = AMPP_FUNCTION(!FB1_counter_reg_bit[5], FB1L19);


--FB1_counter_comb_bita4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita4
FB1_counter_comb_bita4 = AMPP_FUNCTION(!FB1_counter_reg_bit[4], FB1L15);

--FB1L19 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita4~COUT
FB1L19 = AMPP_FUNCTION(!FB1_counter_reg_bit[4], FB1L15);


--FB1_counter_comb_bita3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita3
FB1_counter_comb_bita3 = AMPP_FUNCTION(!FB1_counter_reg_bit[3], FB1L11);

--FB1L15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita3~COUT
FB1L15 = AMPP_FUNCTION(!FB1_counter_reg_bit[3], FB1L11);


--FB1_counter_comb_bita2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita2
FB1_counter_comb_bita2 = AMPP_FUNCTION(!FB1_counter_reg_bit[2], FB1L7);

--FB1L11 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita2~COUT
FB1L11 = AMPP_FUNCTION(!FB1_counter_reg_bit[2], FB1L7);


--FB1_counter_comb_bita1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita1
FB1_counter_comb_bita1 = AMPP_FUNCTION(!FB1_counter_reg_bit[1], FB1L3);

--FB1L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita1~COUT
FB1L7 = AMPP_FUNCTION(!FB1_counter_reg_bit[1], FB1L3);


--FB1_counter_comb_bita0 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita0
FB1_counter_comb_bita0 = AMPP_FUNCTION(!FB1_counter_reg_bit[0]);

--FB1L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|counter_comb_bita0~COUT
FB1L3 = AMPP_FUNCTION(!FB1_counter_reg_bit[0]);


--HB1_counter_comb_bita0 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita0
HB1_counter_comb_bita0 = AMPP_FUNCTION(!HB1_counter_reg_bit[0]);

--HB1L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita0~COUT
HB1L3 = AMPP_FUNCTION(!HB1_counter_reg_bit[0]);


--HB1_counter_comb_bita1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita1
HB1_counter_comb_bita1 = AMPP_FUNCTION(!HB1_counter_reg_bit[1], HB1L3);

--HB1L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita1~COUT
HB1L7 = AMPP_FUNCTION(!HB1_counter_reg_bit[1], HB1L3);


--HB1_counter_comb_bita2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita2
HB1_counter_comb_bita2 = AMPP_FUNCTION(!HB1_counter_reg_bit[2], HB1L7);

--HB1L11 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita2~COUT
HB1L11 = AMPP_FUNCTION(!HB1_counter_reg_bit[2], HB1L7);


--HB1_counter_comb_bita3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita3
HB1_counter_comb_bita3 = AMPP_FUNCTION(!HB1_counter_reg_bit[3], HB1L11);

--HB1L15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita3~COUT
HB1L15 = AMPP_FUNCTION(!HB1_counter_reg_bit[3], HB1L11);


--HB1_counter_comb_bita4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita4
HB1_counter_comb_bita4 = AMPP_FUNCTION(!HB1_counter_reg_bit[4], HB1L15);

--HB1L19 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita4~COUT
HB1L19 = AMPP_FUNCTION(!HB1_counter_reg_bit[4], HB1L15);


--HB1_counter_comb_bita5 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita5
HB1_counter_comb_bita5 = AMPP_FUNCTION(!HB1_counter_reg_bit[5], HB1L19);

--HB1L23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita5~COUT
HB1L23 = AMPP_FUNCTION(!HB1_counter_reg_bit[5], HB1L19);


--HB1_counter_comb_bita6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita6
HB1_counter_comb_bita6 = AMPP_FUNCTION(!HB1_counter_reg_bit[6], HB1L23);

--HB1L27 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita6~COUT
HB1L27 = AMPP_FUNCTION(!HB1_counter_reg_bit[6], HB1L23);


--HB1_counter_comb_bita7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita7
HB1_counter_comb_bita7 = AMPP_FUNCTION(!HB1_counter_reg_bit[7], HB1L27);

--HB1L31 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita7~COUT
HB1L31 = AMPP_FUNCTION(!HB1_counter_reg_bit[7], HB1L27);


--HB1_counter_comb_bita8 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita8
HB1_counter_comb_bita8 = AMPP_FUNCTION(!HB1_counter_reg_bit[8], HB1L31);

--HB1L35 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita8~COUT
HB1L35 = AMPP_FUNCTION(!HB1_counter_reg_bit[8], HB1L31);


--HB1_counter_comb_bita9 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:read_pointer_counter|cntr_q1j:auto_generated|counter_comb_bita9
HB1_counter_comb_bita9 = AMPP_FUNCTION(!HB1_counter_reg_bit[9], HB1L35);


--SB1_ram_block1a2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a2
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a2 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][2], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[3]
--register power-up is low

CB5_dffs[3] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a3, CB5_dffs[4], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a3
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a3 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][3], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[4]
--register power-up is low

CB5_dffs[4] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a4, CB5_dffs[5], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a4
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a4 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][4], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[5]
--register power-up is low

CB5_dffs[5] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a5, CB5_dffs[6], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a5 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a5
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a5 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][5], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[6]
--register power-up is low

CB5_dffs[6] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a6, CB5_dffs[7], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a6
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a6 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][6], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[7]
--register power-up is low

CB5_dffs[7] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a7, CB5_dffs[8], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a7
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a7 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][7], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[8]
--register power-up is low

CB5_dffs[8] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a8, CB5_dffs[9], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a8 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a8
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a8 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][8], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[9]
--register power-up is low

CB5_dffs[9] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a9, CB5_dffs[10], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a9 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a9
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a9 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][9], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[10]
--register power-up is low

CB5_dffs[10] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a10, CB5_dffs[11], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a10 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a10
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a10 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][10], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[11]
--register power-up is low

CB5_dffs[11] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a11, CB5_dffs[12], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a11 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a11
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a11 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][11], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[12]
--register power-up is low

CB5_dffs[12] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a12, CB5_dffs[13], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a12 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a12
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a12 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][12], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[13]
--register power-up is low

CB5_dffs[13] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a13, CB5_dffs[14], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a13 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a13
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a13 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][13], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[14]
--register power-up is low

CB5_dffs[14] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a14, CB5_dffs[15], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a14 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a14
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a14 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][14], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[15]
--register power-up is low

CB5_dffs[15] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a15, CB5_dffs[16], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a15
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a15 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][15], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[16]
--register power-up is low

CB5_dffs[16] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a16, CB5_dffs[17], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a16 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a16
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a16 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][16], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[17]
--register power-up is low

CB5_dffs[17] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a17, CB5_dffs[18], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a17 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a17
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a17 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][17], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[18]
--register power-up is low

CB5_dffs[18] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a18, CB5_dffs[19], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a18 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a18
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a18 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][18], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[19]
--register power-up is low

CB5_dffs[19] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a19, CB5_dffs[20], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a19 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a19
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a19 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][19], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[20]
--register power-up is low

CB5_dffs[20] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a20, CB5_dffs[21], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a20 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a20
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a20 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][20], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[21]
--register power-up is low

CB5_dffs[21] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a21, CB5_dffs[22], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a21 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a21
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a21 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][21], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[22]
--register power-up is low

CB5_dffs[22] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a22, CB5_dffs[23], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a22 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a22
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a22 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][22], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[23]
--register power-up is low

CB5_dffs[23] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a23, CB5_dffs[24], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a23
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a23 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][23], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[24]
--register power-up is low

CB5_dffs[24] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a24, CB5_dffs[25], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a24 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a24
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a24 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][24], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[25]
--register power-up is low

CB5_dffs[25] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a25, CB5_dffs[26], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a25 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a25
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a25 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][25], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[26]
--register power-up is low

CB5_dffs[26] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a26, CB5_dffs[27], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a26 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a26
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a26 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][26], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[27]
--register power-up is low

CB5_dffs[27] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a27, CB5_dffs[28], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a27 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a27
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a27 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][27], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[28]
--register power-up is low

CB5_dffs[28] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a28, CB5_dffs[29], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a28 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a28
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a28 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][28], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[29]
--register power-up is low

CB5_dffs[29] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a29, CB5_dffs[30], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a29 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a29
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a29 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][29], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[30]
--register power-up is low

CB5_dffs[30] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a30, CB5_dffs[31], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a30 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a30
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a30 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][30], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[31]
--register power-up is low

CB5_dffs[31] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a31, CB5_dffs[32], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a31 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a31
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a31 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][31], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[32] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[32]
--register power-up is low

CB5_dffs[32] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a32, CB5_dffs[33], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a32 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a32
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a32 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][32], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[33] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[33]
--register power-up is low

CB5_dffs[33] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a33, CB5_dffs[34], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a33 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a33
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a33 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][33], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[34] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[34]
--register power-up is low

CB5_dffs[34] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a34, CB5_dffs[35], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a34 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a34
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a34 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][34], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[35] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[35]
--register power-up is low

CB5_dffs[35] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a35, CB5_dffs[36], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a35 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a35
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a35 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][35], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[36] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[36]
--register power-up is low

CB5_dffs[36] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a36, CB5_dffs[37], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a36 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a36
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a36 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][36], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[37] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[37]
--register power-up is low

CB5_dffs[37] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a37, CB5_dffs[38], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a37 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a37
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a37 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][37], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[38] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[38]
--register power-up is low

CB5_dffs[38] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a38, CB5_dffs[39], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a38 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a38
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a38 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][38], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[39] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[39]
--register power-up is low

CB5_dffs[39] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a39, CB5_dffs[40], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a39 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a39
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a39 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][39], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[40] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[40]
--register power-up is low

CB5_dffs[40] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a40, CB5_dffs[41], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a40 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a40
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a40 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][40], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[41] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[41]
--register power-up is low

CB5_dffs[41] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a41, CB5_dffs[42], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a41 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a41
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a41 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][41], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[42] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[42]
--register power-up is low

CB5_dffs[42] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a42, CB5_dffs[43], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a42 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a42
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a42 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][42], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[43] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[43]
--register power-up is low

CB5_dffs[43] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a43, CB5_dffs[44], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a43 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a43
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a43 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][43], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[44] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[44]
--register power-up is low

CB5_dffs[44] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a44, CB5_dffs[45], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a44 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a44
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a44 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][44], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[45] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[45]
--register power-up is low

CB5_dffs[45] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a45, CB5_dffs[46], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a45 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a45
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a45 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][45], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[46] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[46]
--register power-up is low

CB5_dffs[46] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a46, CB5_dffs[47], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a46 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a46
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a46 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][46], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[47] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[47]
--register power-up is low

CB5_dffs[47] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a47, CB5_dffs[48], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a47 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a47
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a47 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][47], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[48] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[48]
--register power-up is low

CB5_dffs[48] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a48, CB5_dffs[49], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a48 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a48
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a48 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][48], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[49] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[49]
--register power-up is low

CB5_dffs[49] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a49, CB5_dffs[50], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a49 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a49
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a49 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][49], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[50] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[50]
--register power-up is low

CB5_dffs[50] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a50, CB5_dffs[51], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a50 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a50
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a50 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][50], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[51] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[51]
--register power-up is low

CB5_dffs[51] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a51, CB5_dffs[52], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a51 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a51
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a51 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][51], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[52] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[52]
--register power-up is low

CB5_dffs[52] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a52, CB5_dffs[53], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a52 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a52
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a52 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][52], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[53] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[53]
--register power-up is low

CB5_dffs[53] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a53, CB5_dffs[54], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a53 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a53
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a53 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][53], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[54] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[54]
--register power-up is low

CB5_dffs[54] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a54, CB5_dffs[55], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a54 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a54
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a54 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][54], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[55] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[55]
--register power-up is low

CB5_dffs[55] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a55, CB5_dffs[56], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a55 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a55
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a55 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][55], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[56] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[56]
--register power-up is low

CB5_dffs[56] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a56, CB5_dffs[57], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a56 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a56
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a56 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][56], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[57] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[57]
--register power-up is low

CB5_dffs[57] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a57, CB5_dffs[58], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a57 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a57
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a57 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][57], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[58] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[58]
--register power-up is low

CB5_dffs[58] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a58, CB5_dffs[59], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a58 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a58
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a58 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][58], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[59] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[59]
--register power-up is low

CB5_dffs[59] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a59, CB5_dffs[60], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a59 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a59
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a59 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][59], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[60] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[60]
--register power-up is low

CB5_dffs[60] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a60, CB5_dffs[61], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a60 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a60
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a60 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][60], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[61] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[61]
--register power-up is low

CB5_dffs[61] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a61, CB5_dffs[62], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a61 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a61
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a61 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][61], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[62] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[62]
--register power-up is low

CB5_dffs[62] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a62, CB5_dffs[63], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a62 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a62
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a62 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][62], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[63] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[63]
--register power-up is low

CB5_dffs[63] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a63, CB5_dffs[64], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a63 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a63
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a63 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][63], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[64] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[64]
--register power-up is low

CB5_dffs[64] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a64, CB5_dffs[65], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a64 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a64
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a64 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][64], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[65] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[65]
--register power-up is low

CB5_dffs[65] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a65, CB5_dffs[66], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a65 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a65
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a65 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][65], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[66] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[66]
--register power-up is low

CB5_dffs[66] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a66, CB5_dffs[67], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a66 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a66
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a66 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][66], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[67] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[67]
--register power-up is low

CB5_dffs[67] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a67, CB5_dffs[68], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a67 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a67
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a67 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][67], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[68] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[68]
--register power-up is low

CB5_dffs[68] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a68, CB5_dffs[69], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a68 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a68
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a68 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][68], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[69] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[69]
--register power-up is low

CB5_dffs[69] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a69, CB5_dffs[70], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a69 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a69
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a69 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][69], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[70] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[70]
--register power-up is low

CB5_dffs[70] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a70, CB5_dffs[71], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a70 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a70
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a70 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][70], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[71] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[71]
--register power-up is low

CB5_dffs[71] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a71, CB5_dffs[72], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a71 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a71
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a71 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][71], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[72] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[72]
--register power-up is low

CB5_dffs[72] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a72, CB5_dffs[73], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a72 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a72
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a72 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][72], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[73] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[73]
--register power-up is low

CB5_dffs[73] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a73, CB5_dffs[74], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a73 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a73
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a73 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][73], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[74] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[74]
--register power-up is low

CB5_dffs[74] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a74, CB5_dffs[75], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a74 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a74
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a74 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][74], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[75] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[75]
--register power-up is low

CB5_dffs[75] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a75, CB5_dffs[76], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a75 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a75
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a75 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][75], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[76] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[76]
--register power-up is low

CB5_dffs[76] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a76, CB5_dffs[77], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a76 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a76
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a76 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][76], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[77] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[77]
--register power-up is low

CB5_dffs[77] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a77, CB5_dffs[78], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a77 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a77
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a77 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][77], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[78] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[78]
--register power-up is low

CB5_dffs[78] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a78, CB5_dffs[79], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a78 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a78
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a78 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][78], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[79] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[79]
--register power-up is low

CB5_dffs[79] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a79, CB5_dffs[80], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a79 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a79
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a79 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][79], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[80] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[80]
--register power-up is low

CB5_dffs[80] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a80, CB5_dffs[81], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a80 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a80
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a80 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][80], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[81] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[81]
--register power-up is low

CB5_dffs[81] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a81, CB5_dffs[82], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a81 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a81
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a81 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][81], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[82] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[82]
--register power-up is low

CB5_dffs[82] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a82, CB5_dffs[83], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a82 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a82
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a82 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][82], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[83] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[83]
--register power-up is low

CB5_dffs[83] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a83, CB5_dffs[84], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a83 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a83
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a83 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][83], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[84] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[84]
--register power-up is low

CB5_dffs[84] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a84, CB5_dffs[85], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a84 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a84
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a84 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][84], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[85] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[85]
--register power-up is low

CB5_dffs[85] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a85, CB5_dffs[86], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a85 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a85
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a85 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][85], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[86] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[86]
--register power-up is low

CB5_dffs[86] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a86, CB5_dffs[87], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a86 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a86
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a86 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][86], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[87] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[87]
--register power-up is low

CB5_dffs[87] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a87, CB5_dffs[88], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a87 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a87
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a87 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][87], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[88] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[88]
--register power-up is low

CB5_dffs[88] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a88, CB5_dffs[89], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a88 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a88
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a88 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][88], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[89] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[89]
--register power-up is low

CB5_dffs[89] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a89, CB5_dffs[90], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a89 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a89
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a89 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][89], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[90] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[90]
--register power-up is low

CB5_dffs[90] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a90, CB5_dffs[91], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a90 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a90
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a90 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][90], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[91] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[91]
--register power-up is low

CB5_dffs[91] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a91, CB5_dffs[92], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a91 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a91
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a91 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][91], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[92] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[92]
--register power-up is low

CB5_dffs[92] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a92, CB5_dffs[93], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a92 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a92
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a92 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][92], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[93] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[93]
--register power-up is low

CB5_dffs[93] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a93, CB5_dffs[94], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a93 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a93
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a93 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][93], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[94] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[94]
--register power-up is low

CB5_dffs[94] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a94, CB5_dffs[95], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a94 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a94
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a94 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][94], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[95] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[95]
--register power-up is low

CB5_dffs[95] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a95, CB5_dffs[96], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a95 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a95
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a95 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][95], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[96] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[96]
--register power-up is low

CB5_dffs[96] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a96, CB5_dffs[97], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a96 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a96
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a96 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][96], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[97] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[97]
--register power-up is low

CB5_dffs[97] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a97, CB5_dffs[98], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a97 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a97
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a97 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][97], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[98] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[98]
--register power-up is low

CB5_dffs[98] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a98, CB5_dffs[99], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a98 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a98
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a98 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][98], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[99] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[99]
--register power-up is low

CB5_dffs[99] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a99, CB5_dffs[100], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a99 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a99
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a99 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][99], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[100] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[100]
--register power-up is low

CB5_dffs[100] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a100, CB5_dffs[101], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a100 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a100
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a100 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][100], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[101] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[101]
--register power-up is low

CB5_dffs[101] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a101, CB5_dffs[102], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a101 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a101
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a101 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][101], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[102] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[102]
--register power-up is low

CB5_dffs[102] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a102, CB5_dffs[103], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a102 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a102
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a102 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][102], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[103] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[103]
--register power-up is low

CB5_dffs[103] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a103, CB5_dffs[104], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a103 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a103
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a103 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][103], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[104] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[104]
--register power-up is low

CB5_dffs[104] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a104, CB5_dffs[105], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a104 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a104
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a104 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][104], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[105] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[105]
--register power-up is low

CB5_dffs[105] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a105, CB5_dffs[106], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a105 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a105
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a105 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][105], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[106] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[106]
--register power-up is low

CB5_dffs[106] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a106, CB5_dffs[107], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a106 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a106
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a106 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][106], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[107] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[107]
--register power-up is low

CB5_dffs[107] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a107, CB5_dffs[108], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a107 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a107
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a107 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][107], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[108] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[108]
--register power-up is low

CB5_dffs[108] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a108, CB5_dffs[109], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a108 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a108
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a108 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][108], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[109] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[109]
--register power-up is low

CB5_dffs[109] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a109, CB5_dffs[110], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a109 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a109
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a109 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][109], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[110] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[110]
--register power-up is low

CB5_dffs[110] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a110, CB5_dffs[111], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a110 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a110
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a110 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][110], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[111] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[111]
--register power-up is low

CB5_dffs[111] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a111, CB5_dffs[112], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a111 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a111
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a111 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][111], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[112] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[112]
--register power-up is low

CB5_dffs[112] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a112, CB5_dffs[113], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a112 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a112
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a112 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][112], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[113] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[113]
--register power-up is low

CB5_dffs[113] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a113, CB5_dffs[114], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a113 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a113
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a113 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][113], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[114] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[114]
--register power-up is low

CB5_dffs[114] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a114, CB5_dffs[115], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a114 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a114
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a114 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][114], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[115] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[115]
--register power-up is low

CB5_dffs[115] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a115, CB5_dffs[116], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a115 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a115
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a115 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][115], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[116] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[116]
--register power-up is low

CB5_dffs[116] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a116, CB5_dffs[117], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a116 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a116
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a116 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][116], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[117] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[117]
--register power-up is low

CB5_dffs[117] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a117, CB5_dffs[118], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a117 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a117
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a117 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][117], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[118] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[118]
--register power-up is low

CB5_dffs[118] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a118, CB5_dffs[119], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a118 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a118
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a118 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][118], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[119] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[119]
--register power-up is low

CB5_dffs[119] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a119, CB5_dffs[120], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a119 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a119
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a119 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][119], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[120] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[120]
--register power-up is low

CB5_dffs[120] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a120, CB5_dffs[121], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a120 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a120
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a120 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][120], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[121] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[121]
--register power-up is low

CB5_dffs[121] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a121, CB5_dffs[122], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a121 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a121
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a121 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][121], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[122] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[122]
--register power-up is low

CB5_dffs[122] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a122, CB5_dffs[123], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a122 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a122
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a122 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][122], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[123] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[123]
--register power-up is low

CB5_dffs[123] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a123, CB5_dffs[124], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a123 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a123
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a123 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][123], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[124] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[124]
--register power-up is low

CB5_dffs[124] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a124, CB5_dffs[125], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a124 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a124
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a124 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][124], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[125] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[125]
--register power-up is low

CB5_dffs[125] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a125, CB5_dffs[126], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a125 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a125
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a125 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][125], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[126] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[126]
--register power-up is low

CB5_dffs[126] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a126, CB5_dffs[127], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a126 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a126
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a126 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][126], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[127] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[127]
--register power-up is low

CB5_dffs[127] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a127, CB5_dffs[128], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a127 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a127
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a127 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][127], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[128] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[128]
--register power-up is low

CB5_dffs[128] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a128, CB5_dffs[129], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a128 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a128
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a128 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][128], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[129] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[129]
--register power-up is low

CB5_dffs[129] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a129, CB5_dffs[130], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a129 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a129
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a129 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][129], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[130] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[130]
--register power-up is low

CB5_dffs[130] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a130, CB5_dffs[131], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a130 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a130
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a130 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][130], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[131] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[131]
--register power-up is low

CB5_dffs[131] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a131, CB5_dffs[132], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a131 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a131
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a131 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][131], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[132] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[132]
--register power-up is low

CB5_dffs[132] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a132, CB5_dffs[133], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a132 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a132
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a132 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][132], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[133] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[133]
--register power-up is low

CB5_dffs[133] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a133, CB5_dffs[134], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a133 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a133
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a133 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][133], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[134] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[134]
--register power-up is low

CB5_dffs[134] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a134, CB5_dffs[135], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a134 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a134
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a134 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][134], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[135] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[135]
--register power-up is low

CB5_dffs[135] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a135, CB5_dffs[136], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a135 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a135
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a135 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][135], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[136] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[136]
--register power-up is low

CB5_dffs[136] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a136, CB5_dffs[137], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a136 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a136
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a136 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][136], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[137] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[137]
--register power-up is low

CB5_dffs[137] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a137, CB5_dffs[138], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a137 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a137
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a137 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][137], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[138] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[138]
--register power-up is low

CB5_dffs[138] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a138, CB5_dffs[139], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a138 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a138
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a138 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][138], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[139] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[139]
--register power-up is low

CB5_dffs[139] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a139, CB5_dffs[140], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a139 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a139
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a139 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][139], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[140] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[140]
--register power-up is low

CB5_dffs[140] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a140, CB5_dffs[141], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a140 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a140
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a140 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][140], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[141] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[141]
--register power-up is low

CB5_dffs[141] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a141, CB5_dffs[142], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a141 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a141
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a141 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][141], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[142] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[142]
--register power-up is low

CB5_dffs[142] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a142, CB5_dffs[143], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a142 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a142
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a142 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][142], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[143] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[143]
--register power-up is low

CB5_dffs[143] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a143, CB5_dffs[144], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a143 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a143
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a143 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][143], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[144] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[144]
--register power-up is low

CB5_dffs[144] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a144, CB5_dffs[145], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a144 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a144
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a144 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][144], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[145] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[145]
--register power-up is low

CB5_dffs[145] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a145, CB5_dffs[146], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a145 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a145
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a145 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][145], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[146] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[146]
--register power-up is low

CB5_dffs[146] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a146, CB5_dffs[147], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a146 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a146
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a146 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][146], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[147] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[147]
--register power-up is low

CB5_dffs[147] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a147, CB5_dffs[148], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a147 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a147
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a147 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][147], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[148] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[148]
--register power-up is low

CB5_dffs[148] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a148, CB5_dffs[149], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a148 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a148
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a148 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][148], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[149] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[149]
--register power-up is low

CB5_dffs[149] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a149, CB5_dffs[150], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a149 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a149
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a149 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][149], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[150] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[150]
--register power-up is low

CB5_dffs[150] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a150, CB5_dffs[151], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a150 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a150
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a150 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][150], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[151] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[151]
--register power-up is low

CB5_dffs[151] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a151, CB5_dffs[152], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a151 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a151
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a151 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][151], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[152] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[152]
--register power-up is low

CB5_dffs[152] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a152, CB5_dffs[153], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a152 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a152
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a152 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][152], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[153] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[153]
--register power-up is low

CB5_dffs[153] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a153, CB5_dffs[154], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a153 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a153
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a153 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][153], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[154] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[154]
--register power-up is low

CB5_dffs[154] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a154, CB5_dffs[155], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a154 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a154
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a154 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][154], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[155] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[155]
--register power-up is low

CB5_dffs[155] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a155, CB5_dffs[156], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a155 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a155
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a155 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][155], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[156] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[156]
--register power-up is low

CB5_dffs[156] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a156, CB5_dffs[157], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a156 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a156
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a156 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][156], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[157] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[157]
--register power-up is low

CB5_dffs[157] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a157, CB5_dffs[158], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a157 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a157
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a157 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][157], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[158] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[158]
--register power-up is low

CB5_dffs[158] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a158, CB5_dffs[159], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a158 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a158
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a158 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][158], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[159] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[159]
--register power-up is low

CB5_dffs[159] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a159, CB5_dffs[160], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a159 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a159
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a159 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][159], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[160] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[160]
--register power-up is low

CB5_dffs[160] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a160, CB5_dffs[161], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a160 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a160
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a160 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][160], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[161] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[161]
--register power-up is low

CB5_dffs[161] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a161, CB5_dffs[162], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a161 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a161
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a161 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][161], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[162] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[162]
--register power-up is low

CB5_dffs[162] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a162, CB5_dffs[163], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a162 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a162
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a162 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][162], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[163] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[163]
--register power-up is low

CB5_dffs[163] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a163, CB5_dffs[164], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a163 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a163
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a163 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][163], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[164] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[164]
--register power-up is low

CB5_dffs[164] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a164, CB5_dffs[165], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a164 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a164
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a164 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][164], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[165] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[165]
--register power-up is low

CB5_dffs[165] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a165, CB5_dffs[166], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a165 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a165
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a165 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][165], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[166] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[166]
--register power-up is low

CB5_dffs[166] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a166, CB5_dffs[167], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a166 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a166
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a166 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][166], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[167] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[167]
--register power-up is low

CB5_dffs[167] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a167, CB5_dffs[168], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a167 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a167
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a167 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][167], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[168] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[168]
--register power-up is low

CB5_dffs[168] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a168, CB5_dffs[169], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a168 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a168
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a168 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][168], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[169] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[169]
--register power-up is low

CB5_dffs[169] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a169, CB5_dffs[170], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a169 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a169
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a169 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][169], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[170] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[170]
--register power-up is low

CB5_dffs[170] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a170, CB5_dffs[171], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a170 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a170
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a170 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][170], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[171] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[171]
--register power-up is low

CB5_dffs[171] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a171, CB5_dffs[172], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a171 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a171
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a171 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][171], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[172] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[172]
--register power-up is low

CB5_dffs[172] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a172, CB5_dffs[173], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a172 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a172
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a172 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][172], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[173] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[173]
--register power-up is low

CB5_dffs[173] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a173, CB5_dffs[174], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a173 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a173
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a173 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][173], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[174] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[174]
--register power-up is low

CB5_dffs[174] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a174, CB5_dffs[175], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a174 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a174
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a174 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][174], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[175] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[175]
--register power-up is low

CB5_dffs[175] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a175, CB5_dffs[176], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a175 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a175
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a175 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][175], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[176] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[176]
--register power-up is low

CB5_dffs[176] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a176, CB5_dffs[177], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a176 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a176
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a176 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][176], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[177] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[177]
--register power-up is low

CB5_dffs[177] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a177, CB5_dffs[178], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a177 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a177
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a177 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][177], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[178] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[178]
--register power-up is low

CB5_dffs[178] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a178, CB5_dffs[179], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a178 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a178
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a178 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][178], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[179] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[179]
--register power-up is low

CB5_dffs[179] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a179, CB5_dffs[180], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a179 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a179
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a179 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][179], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[180] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[180]
--register power-up is low

CB5_dffs[180] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a180, CB5_dffs[181], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a180 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a180
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a180 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][180], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[181] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[181]
--register power-up is low

CB5_dffs[181] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a181, CB5_dffs[182], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a181 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a181
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a181 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][181], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[182] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[182]
--register power-up is low

CB5_dffs[182] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a182, CB5_dffs[183], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a182 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a182
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a182 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][182], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[183] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[183]
--register power-up is low

CB5_dffs[183] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a183, CB5_dffs[184], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a183 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a183
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a183 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][183], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[184] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[184]
--register power-up is low

CB5_dffs[184] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a184, CB5_dffs[185], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a184 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a184
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a184 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][184], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[185] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[185]
--register power-up is low

CB5_dffs[185] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a185, CB5_dffs[186], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a185 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a185
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a185 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][185], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[186] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[186]
--register power-up is low

CB5_dffs[186] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a186, CB5_dffs[187], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a186 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a186
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a186 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][186], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[187] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[187]
--register power-up is low

CB5_dffs[187] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a187, CB5_dffs[188], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a187 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a187
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a187 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][187], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[188] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[188]
--register power-up is low

CB5_dffs[188] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a188, CB5_dffs[189], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a188 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a188
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a188 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][188], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[189] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[189]
--register power-up is low

CB5_dffs[189] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a189, CB5_dffs[190], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a189 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a189
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a189 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][189], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[190] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[190]
--register power-up is low

CB5_dffs[190] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a190, CB5_dffs[191], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a190 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a190
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a190 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][190], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[191] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[191]
--register power-up is low

CB5_dffs[191] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a191, CB5_dffs[192], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a191 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a191
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a191 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][191], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[192] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[192]
--register power-up is low

CB5_dffs[192] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a192, CB5_dffs[193], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a192 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a192
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a192 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][192], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[193] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[193]
--register power-up is low

CB5_dffs[193] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a193, CB5_dffs[194], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a193 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a193
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a193 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][193], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[194] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[194]
--register power-up is low

CB5_dffs[194] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a194, CB5_dffs[195], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a194 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a194
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a194 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][194], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[195] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[195]
--register power-up is low

CB5_dffs[195] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a195, CB5_dffs[196], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a195 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a195
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a195 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][195], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[196] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[196]
--register power-up is low

CB5_dffs[196] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a196, CB5_dffs[197], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a196 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a196
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a196 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][196], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[197] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[197]
--register power-up is low

CB5_dffs[197] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a197, CB5_dffs[198], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a197 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a197
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a197 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][197], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[198] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[198]
--register power-up is low

CB5_dffs[198] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a198, CB5_dffs[199], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a198 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a198
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a198 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][198], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[199] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[199]
--register power-up is low

CB5_dffs[199] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a199, CB5_dffs[200], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a199 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a199
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a199 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][199], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[200] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[200]
--register power-up is low

CB5_dffs[200] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a200, CB5_dffs[201], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a200 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a200
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a200 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][200], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[201] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[201]
--register power-up is low

CB5_dffs[201] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a201, CB5_dffs[202], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a201 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a201
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a201 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][201], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[202] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[202]
--register power-up is low

CB5_dffs[202] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a202, CB5_dffs[203], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a202 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a202
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a202 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][202], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[203] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[203]
--register power-up is low

CB5_dffs[203] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a203, CB5_dffs[204], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a203 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a203
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a203 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][203], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[204] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[204]
--register power-up is low

CB5_dffs[204] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a204, CB5_dffs[205], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a204 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a204
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a204 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][204], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[205] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[205]
--register power-up is low

CB5_dffs[205] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a205, CB5_dffs[206], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a205 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a205
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a205 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][205], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[206] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[206]
--register power-up is low

CB5_dffs[206] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a206, CB5_dffs[207], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a206 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a206
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a206 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][206], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[207] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[207]
--register power-up is low

CB5_dffs[207] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a207, CB5_dffs[208], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a207 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a207
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a207 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][207], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[208] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[208]
--register power-up is low

CB5_dffs[208] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a208, CB5_dffs[209], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a208 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a208
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a208 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][208], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[209] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[209]
--register power-up is low

CB5_dffs[209] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a209, CB5_dffs[210], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a209 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a209
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a209 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][209], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[210] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[210]
--register power-up is low

CB5_dffs[210] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a210, CB5_dffs[211], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a210 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a210
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a210 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][210], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[211] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[211]
--register power-up is low

CB5_dffs[211] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a211, CB5_dffs[212], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a211 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a211
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a211 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][211], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[212] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[212]
--register power-up is low

CB5_dffs[212] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a212, CB5_dffs[213], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a212 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a212
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a212 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][212], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[213] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[213]
--register power-up is low

CB5_dffs[213] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a213, CB5_dffs[214], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a213 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a213
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a213 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][213], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[214] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[214]
--register power-up is low

CB5_dffs[214] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a214, CB5_dffs[215], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a214 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a214
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a214 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][214], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[215] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[215]
--register power-up is low

CB5_dffs[215] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a215, CB5_dffs[216], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a215 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a215
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a215 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][215], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[216] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[216]
--register power-up is low

CB5_dffs[216] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a216, CB5_dffs[217], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a216 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a216
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a216 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][216], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[217] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[217]
--register power-up is low

CB5_dffs[217] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a217, CB5_dffs[218], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a217 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a217
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a217 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][217], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[218] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[218]
--register power-up is low

CB5_dffs[218] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a218, CB5_dffs[219], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a218 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a218
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a218 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][218], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[219] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[219]
--register power-up is low

CB5_dffs[219] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a219, CB5_dffs[220], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a219 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a219
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a219 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][219], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[220] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[220]
--register power-up is low

CB5_dffs[220] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a220, CB5_dffs[221], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a220 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a220
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a220 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][220], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[221] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[221]
--register power-up is low

CB5_dffs[221] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a221, CB5_dffs[222], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a221 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a221
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a221 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][221], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[222] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[222]
--register power-up is low

CB5_dffs[222] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a222, CB5_dffs[223], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a222 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a222
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a222 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][222], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[223] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[223]
--register power-up is low

CB5_dffs[223] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a223, CB5_dffs[224], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a223 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a223
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a223 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][223], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[224] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[224]
--register power-up is low

CB5_dffs[224] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a224, CB5_dffs[225], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a224 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a224
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a224 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][224], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[225] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[225]
--register power-up is low

CB5_dffs[225] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a225, CB5_dffs[226], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a225 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a225
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a225 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][225], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[226] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[226]
--register power-up is low

CB5_dffs[226] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a226, CB5_dffs[227], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a226 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a226
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a226 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][226], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[227] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[227]
--register power-up is low

CB5_dffs[227] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a227, CB5_dffs[228], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a227 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a227
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a227 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][227], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[228] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[228]
--register power-up is low

CB5_dffs[228] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a228, CB5_dffs[229], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a228 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a228
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a228 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][228], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[229] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[229]
--register power-up is low

CB5_dffs[229] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a229, CB5_dffs[230], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a229 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a229
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a229 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][229], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[230] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[230]
--register power-up is low

CB5_dffs[230] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a230, CB5_dffs[231], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a230 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a230
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a230 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][230], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[231] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[231]
--register power-up is low

CB5_dffs[231] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a231, CB5_dffs[232], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a231 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a231
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a231 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][231], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[232] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[232]
--register power-up is low

CB5_dffs[232] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a232, CB5_dffs[233], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a232 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a232
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a232 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][232], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[233] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[233]
--register power-up is low

CB5_dffs[233] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a233, CB5_dffs[234], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a233 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a233
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a233 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][233], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[234] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[234]
--register power-up is low

CB5_dffs[234] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a234, CB5_dffs[235], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a234 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a234
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a234 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][234], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[235] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[235]
--register power-up is low

CB5_dffs[235] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a235, CB5_dffs[236], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a235 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a235
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a235 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][235], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[236] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[236]
--register power-up is low

CB5_dffs[236] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a236, CB5_dffs[237], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a236 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a236
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a236 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][236], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[237] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[237]
--register power-up is low

CB5_dffs[237] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a237, CB5_dffs[238], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a237 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a237
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a237 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][237], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[238] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[238]
--register power-up is low

CB5_dffs[238] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a238, CB5_dffs[239], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a238 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a238
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a238 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][238], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[239] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[239]
--register power-up is low

CB5_dffs[239] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a239, CB5_dffs[240], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a239 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a239
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a239 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][239], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[240] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[240]
--register power-up is low

CB5_dffs[240] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a240, CB5_dffs[241], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a240 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a240
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a240 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][240], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[241] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[241]
--register power-up is low

CB5_dffs[241] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a241, CB5_dffs[242], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a241 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a241
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a241 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][241], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[242] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[242]
--register power-up is low

CB5_dffs[242] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a242, CB5_dffs[243], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a242 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a242
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a242 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][242], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[243] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[243]
--register power-up is low

CB5_dffs[243] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a243, CB5_dffs[244], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a243 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a243
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a243 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][243], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[244] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[244]
--register power-up is low

CB5_dffs[244] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a244, CB5_dffs[245], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a244 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a244
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a244 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][244], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[245] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[245]
--register power-up is low

CB5_dffs[245] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a245, CB5_dffs[246], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a245 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a245
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a245 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][245], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[246] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[246]
--register power-up is low

CB5_dffs[246] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a246, CB5_dffs[247], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a246 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a246
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a246 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][246], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[247] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[247]
--register power-up is low

CB5_dffs[247] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a247, CB5_dffs[248], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a247 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a247
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a247 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][247], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[248] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[248]
--register power-up is low

CB5_dffs[248] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a248, CB5_dffs[249], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a248 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a248
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a248 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][248], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[249] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[249]
--register power-up is low

CB5_dffs[249] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a249, CB5_dffs[250], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a249 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a249
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a249 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][249], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[250] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[250]
--register power-up is low

CB5_dffs[250] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a250, CB5_dffs[251], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a250 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a250
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a250 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][250], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[251] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[251]
--register power-up is low

CB5_dffs[251] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a251, CB5_dffs[252], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a251 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a251
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a251 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][251], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[252] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[252]
--register power-up is low

CB5_dffs[252] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a252, CB5_dffs[253], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a252 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a252
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a252 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][252], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[253] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[253]
--register power-up is low

CB5_dffs[253] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a253, CB5_dffs[254], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a253 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a253
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a253 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][253], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[254] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[254]
--register power-up is low

CB5_dffs[254] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a254, CB5_dffs[255], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a254 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a254
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a254 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][254], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[255] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[255]
--register power-up is low

CB5_dffs[255] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a255, CB5_dffs[256], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a255 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a255
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a255 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][255], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[256] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[256]
--register power-up is low

CB5_dffs[256] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a256, CB5_dffs[257], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a256 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a256
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a256 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][256], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[257] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[257]
--register power-up is low

CB5_dffs[257] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a257, CB5_dffs[258], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a257 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a257
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a257 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][257], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[258] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[258]
--register power-up is low

CB5_dffs[258] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a258, CB5_dffs[259], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a258 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a258
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a258 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][258], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[259] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[259]
--register power-up is low

CB5_dffs[259] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a259, CB5_dffs[260], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a259 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a259
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a259 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][259], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[260] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[260]
--register power-up is low

CB5_dffs[260] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a260, CB5_dffs[261], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a260 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a260
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a260 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][260], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[261] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[261]
--register power-up is low

CB5_dffs[261] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a261, CB5_dffs[262], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a261 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a261
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a261 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][261], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[262] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[262]
--register power-up is low

CB5_dffs[262] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a262, CB5_dffs[263], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a262 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a262
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a262 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][262], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[263] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[263]
--register power-up is low

CB5_dffs[263] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a263, CB5_dffs[264], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a263 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a263
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a263 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][263], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[264] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[264]
--register power-up is low

CB5_dffs[264] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a264, CB5_dffs[265], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a264 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a264
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a264 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][264], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[265] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[265]
--register power-up is low

CB5_dffs[265] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a265, CB5_dffs[266], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a265 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a265
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a265 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][265], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[266] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[266]
--register power-up is low

CB5_dffs[266] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a266, CB5_dffs[267], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a266 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a266
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a266 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][266], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[267] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[267]
--register power-up is low

CB5_dffs[267] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a267, CB5_dffs[268], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a267 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a267
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a267 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][267], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[268] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[268]
--register power-up is low

CB5_dffs[268] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a268, CB5_dffs[269], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a268 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a268
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a268 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][268], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[269] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[269]
--register power-up is low

CB5_dffs[269] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a269, CB5_dffs[270], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a269 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a269
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a269 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][269], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[270] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[270]
--register power-up is low

CB5_dffs[270] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a270, CB5_dffs[271], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a270 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a270
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a270 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][270], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[271] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[271]
--register power-up is low

CB5_dffs[271] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a271, CB5_dffs[272], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a271 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a271
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a271 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][271], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[272] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[272]
--register power-up is low

CB5_dffs[272] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a272, CB5_dffs[273], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a272 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a272
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a272 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][272], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[273] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[273]
--register power-up is low

CB5_dffs[273] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a273, CB5_dffs[274], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a273 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a273
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a273 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][273], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[274] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[274]
--register power-up is low

CB5_dffs[274] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a274, CB5_dffs[275], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a274 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a274
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a274 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][274], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[275] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[275]
--register power-up is low

CB5_dffs[275] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a275, CB5_dffs[276], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a275 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a275
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a275 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][275], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[276] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[276]
--register power-up is low

CB5_dffs[276] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a276, CB5_dffs[277], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a276 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a276
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a276 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][276], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[277] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[277]
--register power-up is low

CB5_dffs[277] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a277, CB5_dffs[278], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a277 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a277
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a277 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][277], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[278] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[278]
--register power-up is low

CB5_dffs[278] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a278, CB5_dffs[279], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a278 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a278
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a278 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][278], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[279] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[279]
--register power-up is low

CB5_dffs[279] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a279, CB5_dffs[280], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a279 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a279
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a279 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][279], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[280] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[280]
--register power-up is low

CB5_dffs[280] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a280, CB5_dffs[281], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a280 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a280
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a280 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][280], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[281] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[281]
--register power-up is low

CB5_dffs[281] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a281, CB5_dffs[282], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a281 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a281
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a281 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][281], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[282] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[282]
--register power-up is low

CB5_dffs[282] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a282, CB5_dffs[283], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a282 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a282
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a282 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][282], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[283] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[283]
--register power-up is low

CB5_dffs[283] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a283, CB5_dffs[284], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a283 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a283
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a283 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][283], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[284] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[284]
--register power-up is low

CB5_dffs[284] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a284, CB5_dffs[285], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a284 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a284
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a284 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][284], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[285] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[285]
--register power-up is low

CB5_dffs[285] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a285, CB5_dffs[286], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a285 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a285
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a285 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][285], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[286] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[286]
--register power-up is low

CB5_dffs[286] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a286, CB5_dffs[287], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a286 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a286
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a286 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][286], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[287] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[287]
--register power-up is low

CB5_dffs[287] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a287, CB5_dffs[288], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a287 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a287
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a287 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][287], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[288] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[288]
--register power-up is low

CB5_dffs[288] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a288, CB5_dffs[289], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a288 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a288
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a288 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][288], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[289] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[289]
--register power-up is low

CB5_dffs[289] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a289, CB5_dffs[290], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a289 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a289
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a289 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][289], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[290] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[290]
--register power-up is low

CB5_dffs[290] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a290, CB5_dffs[291], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a290 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a290
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a290 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][290], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[291] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[291]
--register power-up is low

CB5_dffs[291] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a291, CB5_dffs[292], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a291 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a291
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a291 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][291], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[292] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[292]
--register power-up is low

CB5_dffs[292] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a292, CB5_dffs[293], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a292 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a292
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a292 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][292], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[293] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[293]
--register power-up is low

CB5_dffs[293] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a293, CB5_dffs[294], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a293 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a293
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a293 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][293], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[294] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[294]
--register power-up is low

CB5_dffs[294] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a294, CB5_dffs[295], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a294 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a294
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a294 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][294], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[295] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[295]
--register power-up is low

CB5_dffs[295] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a295, CB5_dffs[296], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a295 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a295
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a295 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][295], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[296] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[296]
--register power-up is low

CB5_dffs[296] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a296, CB5_dffs[297], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a296 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a296
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a296 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][296], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[297] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[297]
--register power-up is low

CB5_dffs[297] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a297, CB5_dffs[298], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a297 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a297
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a297 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][297], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[298] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[298]
--register power-up is low

CB5_dffs[298] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a298, CB5_dffs[299], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a298 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a298
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a298 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][298], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[299] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[299]
--register power-up is low

CB5_dffs[299] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a299, CB5_dffs[300], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a299 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a299
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a299 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][299], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[300] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[300]
--register power-up is low

CB5_dffs[300] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a300, CB5_dffs[301], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a300 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a300
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a300 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][300], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[301] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[301]
--register power-up is low

CB5_dffs[301] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a301, CB5_dffs[302], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a301 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a301
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a301 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][301], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[302] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[302]
--register power-up is low

CB5_dffs[302] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a302, CB5_dffs[303], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a302 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a302
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a302 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][302], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[303] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[303]
--register power-up is low

CB5_dffs[303] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a303, CB5_dffs[304], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a303 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a303
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a303 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][303], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[304] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[304]
--register power-up is low

CB5_dffs[304] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a304, CB5_dffs[305], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a304 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a304
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a304 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][304], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[305] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[305]
--register power-up is low

CB5_dffs[305] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a305, CB5_dffs[306], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a305 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a305
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a305 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][305], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[306] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[306]
--register power-up is low

CB5_dffs[306] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a306, CB5_dffs[307], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a306 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a306
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a306 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][306], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[307] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[307]
--register power-up is low

CB5_dffs[307] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a307, CB5_dffs[308], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a307 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a307
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a307 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][307], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[308] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[308]
--register power-up is low

CB5_dffs[308] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a308, CB5_dffs[309], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a308 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a308
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a308 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][308], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[309] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[309]
--register power-up is low

CB5_dffs[309] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a309, CB5_dffs[310], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a309 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a309
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a309 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][309], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[310] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[310]
--register power-up is low

CB5_dffs[310] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a310, CB5_dffs[311], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a310 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a310
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a310 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][310], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[311] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[311]
--register power-up is low

CB5_dffs[311] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a311, CB5_dffs[312], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a311 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a311
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a311 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][311], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[312] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[312]
--register power-up is low

CB5_dffs[312] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a312, CB5_dffs[313], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a312 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a312
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a312 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][312], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[313] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[313]
--register power-up is low

CB5_dffs[313] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a313, CB5_dffs[314], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a313 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a313
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a313 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][313], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[314] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[314]
--register power-up is low

CB5_dffs[314] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a314, CB5_dffs[315], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a314 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a314
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a314 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][314], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[315] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[315]
--register power-up is low

CB5_dffs[315] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a315, CB5_dffs[316], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a315 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a315
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a315 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][315], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[316] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[316]
--register power-up is low

CB5_dffs[316] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a316, CB5_dffs[317], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a316 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a316
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a316 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][316], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[317] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[317]
--register power-up is low

CB5_dffs[317] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a317, CB5_dffs[318], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a317 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a317
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a317 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][317], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[318] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[318]
--register power-up is low

CB5_dffs[318] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a318, CB5_dffs[319], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a318 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a318
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a318 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][318], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[319] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[319]
--register power-up is low

CB5_dffs[319] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a319, CB5_dffs[320], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a319 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a319
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a319 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][319], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[320] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[320]
--register power-up is low

CB5_dffs[320] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a320, CB5_dffs[321], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a320 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a320
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a320 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][320], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[321] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[321]
--register power-up is low

CB5_dffs[321] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a321, CB5_dffs[322], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a321 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a321
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a321 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][321], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[322] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[322]
--register power-up is low

CB5_dffs[322] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a322, CB5_dffs[323], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a322 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a322
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a322 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][322], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[323] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[323]
--register power-up is low

CB5_dffs[323] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a323, CB5_dffs[324], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a323 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a323
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a323 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][323], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[324] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[324]
--register power-up is low

CB5_dffs[324] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a324, CB5_dffs[325], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a324 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a324
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a324 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][324], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[325] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[325]
--register power-up is low

CB5_dffs[325] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a325, CB5_dffs[326], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a325 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a325
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a325 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][325], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[326] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[326]
--register power-up is low

CB5_dffs[326] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a326, CB5_dffs[327], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a326 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a326
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a326 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][326], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[327] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[327]
--register power-up is low

CB5_dffs[327] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a327, CB5_dffs[328], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a327 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a327
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a327 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][327], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[328] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[328]
--register power-up is low

CB5_dffs[328] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a328, CB5_dffs[329], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a328 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a328
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a328 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][328], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[329] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[329]
--register power-up is low

CB5_dffs[329] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a329, CB5_dffs[330], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a329 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a329
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a329 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][329], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[330] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[330]
--register power-up is low

CB5_dffs[330] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a330, CB5_dffs[331], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a330 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a330
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a330 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][330], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[331] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[331]
--register power-up is low

CB5_dffs[331] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a331, CB5_dffs[332], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a331 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a331
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a331 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][331], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[332] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[332]
--register power-up is low

CB5_dffs[332] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a332, CB5_dffs[333], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a332 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a332
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a332 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][332], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[333] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[333]
--register power-up is low

CB5_dffs[333] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a333, CB5_dffs[334], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a333 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a333
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a333 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][333], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[334] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[334]
--register power-up is low

CB5_dffs[334] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a334, CB5_dffs[335], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a334 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a334
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a334 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][334], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[335] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[335]
--register power-up is low

CB5_dffs[335] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a335, CB5_dffs[336], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a335 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a335
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a335 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][335], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[336] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[336]
--register power-up is low

CB5_dffs[336] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a336, CB5_dffs[337], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a336 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a336
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a336 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][336], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[337] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[337]
--register power-up is low

CB5_dffs[337] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a337, CB5_dffs[338], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a337 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a337
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a337 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][337], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[338] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[338]
--register power-up is low

CB5_dffs[338] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a338, CB5_dffs[339], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a338 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a338
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a338 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][338], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--CB5_dffs[339] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[339]
--register power-up is low

CB5_dffs[339] = AMPP_FUNCTION(C1_raw_tck, SB1_ram_block1a339, CB5_dffs[340], !W1_reset_all, !X1_ram_shift_load);


--SB1_ram_block1a339 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a339
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a339 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][339], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--SB1_ram_block1a340 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altsyncram:\stp_non_zero_ram_gen:stp_buffer_ram|altsyncram_2k84:auto_generated|ram_block1a340
--RAM Block Operation Mode: Simple Dual-Port
--Port A Depth: 1024, Port A Width: 1, Port B Depth: 1024, Port B Width: 1
--Port A Logical Depth: 1024, Port A Logical Width: 341, Port B Logical Depth: 1024, Port B Logical Width: 341
--Port A Input: Registered, Port B Input: Registered, Port B Output: Un-registered
SB1_ram_block1a340 = AMPP_FUNCTION(W1_buffer_write_enable_delayed, GND, C1_acq_clk, C1_raw_tck, W1_buffer_write_enable_delayed, C1_ir_in[4], W1_acq_data_in_pipe_reg[3][340], W1_buffer_write_address_delayed[0], W1_buffer_write_address_delayed[1], W1_buffer_write_address_delayed[2], W1_buffer_write_address_delayed[3], W1_buffer_write_address_delayed[4], W1_buffer_write_address_delayed[5], W1_buffer_write_address_delayed[6], W1_buffer_write_address_delayed[7], W1_buffer_write_address_delayed[8], W1_buffer_write_address_delayed[9], HB1_counter_reg_bit[0], HB1_counter_reg_bit[1], HB1_counter_reg_bit[2], HB1_counter_reg_bit[3], HB1_counter_reg_bit[4], HB1_counter_reg_bit[5], HB1_counter_reg_bit[6], HB1_counter_reg_bit[7], HB1_counter_reg_bit[8], HB1_counter_reg_bit[9]);


--C1_acq_storage_qualifier_in[0] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[0]
C1_acq_storage_qualifier_in[0] = INPUT();


--C1_acq_storage_qualifier_in[1] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[1]
C1_acq_storage_qualifier_in[1] = INPUT();


--C1_acq_storage_qualifier_in[2] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[2]
C1_acq_storage_qualifier_in[2] = INPUT();


--C1_acq_storage_qualifier_in[3] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[3]
C1_acq_storage_qualifier_in[3] = INPUT();


--C1_acq_storage_qualifier_in[4] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[4]
C1_acq_storage_qualifier_in[4] = INPUT();


--C1_acq_storage_qualifier_in[5] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[5]
C1_acq_storage_qualifier_in[5] = INPUT();


--C1_acq_storage_qualifier_in[6] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[6]
C1_acq_storage_qualifier_in[6] = INPUT();


--C1_acq_storage_qualifier_in[7] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[7]
C1_acq_storage_qualifier_in[7] = INPUT();


--C1_acq_storage_qualifier_in[8] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[8]
C1_acq_storage_qualifier_in[8] = INPUT();


--C1_acq_storage_qualifier_in[9] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[9]
C1_acq_storage_qualifier_in[9] = INPUT();


--C1_acq_storage_qualifier_in[10] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[10]
C1_acq_storage_qualifier_in[10] = INPUT();


--C1_acq_storage_qualifier_in[11] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[11]
C1_acq_storage_qualifier_in[11] = INPUT();


--C1_acq_storage_qualifier_in[12] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[12]
C1_acq_storage_qualifier_in[12] = INPUT();


--C1_acq_storage_qualifier_in[13] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[13]
C1_acq_storage_qualifier_in[13] = INPUT();


--C1_acq_storage_qualifier_in[14] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[14]
C1_acq_storage_qualifier_in[14] = INPUT();


--C1_acq_storage_qualifier_in[15] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[15]
C1_acq_storage_qualifier_in[15] = INPUT();


--C1_acq_storage_qualifier_in[16] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[16]
C1_acq_storage_qualifier_in[16] = INPUT();


--C1_acq_storage_qualifier_in[17] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[17]
C1_acq_storage_qualifier_in[17] = INPUT();


--C1_acq_storage_qualifier_in[18] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[18]
C1_acq_storage_qualifier_in[18] = INPUT();


--C1_acq_storage_qualifier_in[19] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[19]
C1_acq_storage_qualifier_in[19] = INPUT();


--C1_acq_storage_qualifier_in[20] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[20]
C1_acq_storage_qualifier_in[20] = INPUT();


--C1_acq_storage_qualifier_in[21] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[21]
C1_acq_storage_qualifier_in[21] = INPUT();


--C1_acq_storage_qualifier_in[22] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[22]
C1_acq_storage_qualifier_in[22] = INPUT();


--C1_acq_storage_qualifier_in[23] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[23]
C1_acq_storage_qualifier_in[23] = INPUT();


--C1_acq_storage_qualifier_in[24] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[24]
C1_acq_storage_qualifier_in[24] = INPUT();


--C1_acq_storage_qualifier_in[25] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[25]
C1_acq_storage_qualifier_in[25] = INPUT();


--C1_acq_storage_qualifier_in[26] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[26]
C1_acq_storage_qualifier_in[26] = INPUT();


--C1_acq_storage_qualifier_in[27] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[27]
C1_acq_storage_qualifier_in[27] = INPUT();


--C1_acq_storage_qualifier_in[28] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[28]
C1_acq_storage_qualifier_in[28] = INPUT();


--C1_acq_storage_qualifier_in[29] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[29]
C1_acq_storage_qualifier_in[29] = INPUT();


--C1_acq_storage_qualifier_in[30] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[30]
C1_acq_storage_qualifier_in[30] = INPUT();


--C1_acq_storage_qualifier_in[31] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[31]
C1_acq_storage_qualifier_in[31] = INPUT();


--C1_acq_storage_qualifier_in[32] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[32]
C1_acq_storage_qualifier_in[32] = INPUT();


--C1_acq_storage_qualifier_in[33] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[33]
C1_acq_storage_qualifier_in[33] = INPUT();


--C1_acq_storage_qualifier_in[34] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[34]
C1_acq_storage_qualifier_in[34] = INPUT();


--C1_acq_storage_qualifier_in[35] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[35]
C1_acq_storage_qualifier_in[35] = INPUT();


--C1_acq_storage_qualifier_in[36] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[36]
C1_acq_storage_qualifier_in[36] = INPUT();


--C1_acq_storage_qualifier_in[37] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[37]
C1_acq_storage_qualifier_in[37] = INPUT();


--C1_acq_storage_qualifier_in[38] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[38]
C1_acq_storage_qualifier_in[38] = INPUT();


--C1_acq_storage_qualifier_in[39] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[39]
C1_acq_storage_qualifier_in[39] = INPUT();


--C1_acq_storage_qualifier_in[40] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[40]
C1_acq_storage_qualifier_in[40] = INPUT();


--C1_acq_storage_qualifier_in[41] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[41]
C1_acq_storage_qualifier_in[41] = INPUT();


--C1_acq_storage_qualifier_in[42] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[42]
C1_acq_storage_qualifier_in[42] = INPUT();


--C1_acq_storage_qualifier_in[43] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[43]
C1_acq_storage_qualifier_in[43] = INPUT();


--C1_acq_storage_qualifier_in[44] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[44]
C1_acq_storage_qualifier_in[44] = INPUT();


--C1_acq_storage_qualifier_in[45] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[45]
C1_acq_storage_qualifier_in[45] = INPUT();


--C1_acq_storage_qualifier_in[46] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[46]
C1_acq_storage_qualifier_in[46] = INPUT();


--C1_acq_storage_qualifier_in[47] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[47]
C1_acq_storage_qualifier_in[47] = INPUT();


--C1_acq_storage_qualifier_in[48] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[48]
C1_acq_storage_qualifier_in[48] = INPUT();


--C1_acq_storage_qualifier_in[49] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[49]
C1_acq_storage_qualifier_in[49] = INPUT();


--C1_acq_storage_qualifier_in[50] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[50]
C1_acq_storage_qualifier_in[50] = INPUT();


--C1_acq_storage_qualifier_in[51] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[51]
C1_acq_storage_qualifier_in[51] = INPUT();


--C1_acq_storage_qualifier_in[52] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[52]
C1_acq_storage_qualifier_in[52] = INPUT();


--C1_acq_storage_qualifier_in[53] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[53]
C1_acq_storage_qualifier_in[53] = INPUT();


--C1_acq_storage_qualifier_in[54] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[54]
C1_acq_storage_qualifier_in[54] = INPUT();


--C1_acq_storage_qualifier_in[55] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[55]
C1_acq_storage_qualifier_in[55] = INPUT();


--C1_acq_storage_qualifier_in[56] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[56]
C1_acq_storage_qualifier_in[56] = INPUT();


--C1_acq_storage_qualifier_in[57] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[57]
C1_acq_storage_qualifier_in[57] = INPUT();


--C1_acq_storage_qualifier_in[58] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[58]
C1_acq_storage_qualifier_in[58] = INPUT();


--C1_acq_storage_qualifier_in[59] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[59]
C1_acq_storage_qualifier_in[59] = INPUT();


--C1_acq_storage_qualifier_in[60] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[60]
C1_acq_storage_qualifier_in[60] = INPUT();


--C1_acq_storage_qualifier_in[61] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[61]
C1_acq_storage_qualifier_in[61] = INPUT();


--C1_acq_storage_qualifier_in[62] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[62]
C1_acq_storage_qualifier_in[62] = INPUT();


--C1_acq_storage_qualifier_in[63] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[63]
C1_acq_storage_qualifier_in[63] = INPUT();


--C1_acq_storage_qualifier_in[64] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[64]
C1_acq_storage_qualifier_in[64] = INPUT();


--C1_acq_storage_qualifier_in[65] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[65]
C1_acq_storage_qualifier_in[65] = INPUT();


--C1_acq_storage_qualifier_in[66] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[66]
C1_acq_storage_qualifier_in[66] = INPUT();


--C1_acq_storage_qualifier_in[67] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[67]
C1_acq_storage_qualifier_in[67] = INPUT();


--C1_acq_storage_qualifier_in[68] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[68]
C1_acq_storage_qualifier_in[68] = INPUT();


--C1_acq_storage_qualifier_in[69] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[69]
C1_acq_storage_qualifier_in[69] = INPUT();


--C1_acq_storage_qualifier_in[70] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[70]
C1_acq_storage_qualifier_in[70] = INPUT();


--C1_acq_storage_qualifier_in[71] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[71]
C1_acq_storage_qualifier_in[71] = INPUT();


--C1_acq_storage_qualifier_in[72] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[72]
C1_acq_storage_qualifier_in[72] = INPUT();


--C1_acq_storage_qualifier_in[73] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[73]
C1_acq_storage_qualifier_in[73] = INPUT();


--C1_acq_storage_qualifier_in[74] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[74]
C1_acq_storage_qualifier_in[74] = INPUT();


--C1_acq_storage_qualifier_in[75] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[75]
C1_acq_storage_qualifier_in[75] = INPUT();


--C1_acq_storage_qualifier_in[76] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[76]
C1_acq_storage_qualifier_in[76] = INPUT();


--C1_acq_storage_qualifier_in[77] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[77]
C1_acq_storage_qualifier_in[77] = INPUT();


--C1_acq_storage_qualifier_in[78] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[78]
C1_acq_storage_qualifier_in[78] = INPUT();


--C1_acq_storage_qualifier_in[79] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[79]
C1_acq_storage_qualifier_in[79] = INPUT();


--C1_acq_storage_qualifier_in[80] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[80]
C1_acq_storage_qualifier_in[80] = INPUT();


--C1_acq_storage_qualifier_in[81] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[81]
C1_acq_storage_qualifier_in[81] = INPUT();


--C1_acq_storage_qualifier_in[82] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[82]
C1_acq_storage_qualifier_in[82] = INPUT();


--C1_acq_storage_qualifier_in[83] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[83]
C1_acq_storage_qualifier_in[83] = INPUT();


--C1_acq_storage_qualifier_in[84] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[84]
C1_acq_storage_qualifier_in[84] = INPUT();


--C1_acq_storage_qualifier_in[85] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[85]
C1_acq_storage_qualifier_in[85] = INPUT();


--C1_acq_storage_qualifier_in[86] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[86]
C1_acq_storage_qualifier_in[86] = INPUT();


--C1_acq_storage_qualifier_in[87] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[87]
C1_acq_storage_qualifier_in[87] = INPUT();


--C1_acq_storage_qualifier_in[88] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[88]
C1_acq_storage_qualifier_in[88] = INPUT();


--C1_acq_storage_qualifier_in[89] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[89]
C1_acq_storage_qualifier_in[89] = INPUT();


--C1_acq_storage_qualifier_in[90] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[90]
C1_acq_storage_qualifier_in[90] = INPUT();


--C1_acq_storage_qualifier_in[91] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[91]
C1_acq_storage_qualifier_in[91] = INPUT();


--C1_acq_storage_qualifier_in[92] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[92]
C1_acq_storage_qualifier_in[92] = INPUT();


--C1_acq_storage_qualifier_in[93] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[93]
C1_acq_storage_qualifier_in[93] = INPUT();


--C1_acq_storage_qualifier_in[94] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[94]
C1_acq_storage_qualifier_in[94] = INPUT();


--C1_acq_storage_qualifier_in[95] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[95]
C1_acq_storage_qualifier_in[95] = INPUT();


--C1_acq_storage_qualifier_in[96] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[96]
C1_acq_storage_qualifier_in[96] = INPUT();


--C1_acq_storage_qualifier_in[97] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[97]
C1_acq_storage_qualifier_in[97] = INPUT();


--C1_acq_storage_qualifier_in[98] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[98]
C1_acq_storage_qualifier_in[98] = INPUT();


--C1_acq_storage_qualifier_in[99] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[99]
C1_acq_storage_qualifier_in[99] = INPUT();


--C1_acq_storage_qualifier_in[100] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[100]
C1_acq_storage_qualifier_in[100] = INPUT();


--C1_acq_storage_qualifier_in[101] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[101]
C1_acq_storage_qualifier_in[101] = INPUT();


--C1_acq_storage_qualifier_in[102] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[102]
C1_acq_storage_qualifier_in[102] = INPUT();


--C1_acq_storage_qualifier_in[103] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[103]
C1_acq_storage_qualifier_in[103] = INPUT();


--C1_acq_storage_qualifier_in[104] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[104]
C1_acq_storage_qualifier_in[104] = INPUT();


--C1_acq_storage_qualifier_in[105] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[105]
C1_acq_storage_qualifier_in[105] = INPUT();


--C1_acq_storage_qualifier_in[106] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[106]
C1_acq_storage_qualifier_in[106] = INPUT();


--C1_acq_storage_qualifier_in[107] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[107]
C1_acq_storage_qualifier_in[107] = INPUT();


--C1_acq_storage_qualifier_in[108] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[108]
C1_acq_storage_qualifier_in[108] = INPUT();


--C1_acq_storage_qualifier_in[109] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[109]
C1_acq_storage_qualifier_in[109] = INPUT();


--C1_acq_storage_qualifier_in[110] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[110]
C1_acq_storage_qualifier_in[110] = INPUT();


--C1_acq_storage_qualifier_in[111] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[111]
C1_acq_storage_qualifier_in[111] = INPUT();


--C1_acq_storage_qualifier_in[112] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[112]
C1_acq_storage_qualifier_in[112] = INPUT();


--C1_acq_storage_qualifier_in[113] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[113]
C1_acq_storage_qualifier_in[113] = INPUT();


--C1_acq_storage_qualifier_in[114] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[114]
C1_acq_storage_qualifier_in[114] = INPUT();


--C1_acq_storage_qualifier_in[115] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[115]
C1_acq_storage_qualifier_in[115] = INPUT();


--C1_acq_storage_qualifier_in[116] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[116]
C1_acq_storage_qualifier_in[116] = INPUT();


--C1_acq_storage_qualifier_in[117] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[117]
C1_acq_storage_qualifier_in[117] = INPUT();


--C1_acq_storage_qualifier_in[118] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[118]
C1_acq_storage_qualifier_in[118] = INPUT();


--C1_acq_storage_qualifier_in[119] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[119]
C1_acq_storage_qualifier_in[119] = INPUT();


--C1_acq_storage_qualifier_in[120] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[120]
C1_acq_storage_qualifier_in[120] = INPUT();


--C1_acq_storage_qualifier_in[121] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[121]
C1_acq_storage_qualifier_in[121] = INPUT();


--C1_acq_storage_qualifier_in[122] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[122]
C1_acq_storage_qualifier_in[122] = INPUT();


--C1_acq_storage_qualifier_in[123] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[123]
C1_acq_storage_qualifier_in[123] = INPUT();


--C1_acq_storage_qualifier_in[124] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[124]
C1_acq_storage_qualifier_in[124] = INPUT();


--C1_acq_storage_qualifier_in[125] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[125]
C1_acq_storage_qualifier_in[125] = INPUT();


--C1_acq_storage_qualifier_in[126] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[126]
C1_acq_storage_qualifier_in[126] = INPUT();


--C1_acq_storage_qualifier_in[127] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[127]
C1_acq_storage_qualifier_in[127] = INPUT();


--C1_acq_storage_qualifier_in[128] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[128]
C1_acq_storage_qualifier_in[128] = INPUT();


--C1_acq_storage_qualifier_in[129] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[129]
C1_acq_storage_qualifier_in[129] = INPUT();


--C1_acq_storage_qualifier_in[130] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[130]
C1_acq_storage_qualifier_in[130] = INPUT();


--C1_acq_storage_qualifier_in[131] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[131]
C1_acq_storage_qualifier_in[131] = INPUT();


--C1_acq_storage_qualifier_in[132] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[132]
C1_acq_storage_qualifier_in[132] = INPUT();


--C1_acq_storage_qualifier_in[133] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[133]
C1_acq_storage_qualifier_in[133] = INPUT();


--C1_acq_storage_qualifier_in[134] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[134]
C1_acq_storage_qualifier_in[134] = INPUT();


--C1_acq_storage_qualifier_in[135] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[135]
C1_acq_storage_qualifier_in[135] = INPUT();


--C1_acq_storage_qualifier_in[136] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[136]
C1_acq_storage_qualifier_in[136] = INPUT();


--C1_acq_storage_qualifier_in[137] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[137]
C1_acq_storage_qualifier_in[137] = INPUT();


--C1_acq_storage_qualifier_in[138] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[138]
C1_acq_storage_qualifier_in[138] = INPUT();


--C1_acq_storage_qualifier_in[139] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[139]
C1_acq_storage_qualifier_in[139] = INPUT();


--C1_acq_storage_qualifier_in[140] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[140]
C1_acq_storage_qualifier_in[140] = INPUT();


--C1_acq_storage_qualifier_in[141] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[141]
C1_acq_storage_qualifier_in[141] = INPUT();


--C1_acq_storage_qualifier_in[142] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[142]
C1_acq_storage_qualifier_in[142] = INPUT();


--C1_acq_storage_qualifier_in[143] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[143]
C1_acq_storage_qualifier_in[143] = INPUT();


--C1_acq_storage_qualifier_in[144] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[144]
C1_acq_storage_qualifier_in[144] = INPUT();


--C1_acq_storage_qualifier_in[145] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[145]
C1_acq_storage_qualifier_in[145] = INPUT();


--C1_acq_storage_qualifier_in[146] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[146]
C1_acq_storage_qualifier_in[146] = INPUT();


--C1_acq_storage_qualifier_in[147] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[147]
C1_acq_storage_qualifier_in[147] = INPUT();


--C1_acq_storage_qualifier_in[148] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[148]
C1_acq_storage_qualifier_in[148] = INPUT();


--C1_acq_storage_qualifier_in[149] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[149]
C1_acq_storage_qualifier_in[149] = INPUT();


--C1_acq_storage_qualifier_in[150] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[150]
C1_acq_storage_qualifier_in[150] = INPUT();


--C1_acq_storage_qualifier_in[151] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[151]
C1_acq_storage_qualifier_in[151] = INPUT();


--C1_acq_storage_qualifier_in[152] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[152]
C1_acq_storage_qualifier_in[152] = INPUT();


--C1_acq_storage_qualifier_in[153] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[153]
C1_acq_storage_qualifier_in[153] = INPUT();


--C1_acq_storage_qualifier_in[154] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[154]
C1_acq_storage_qualifier_in[154] = INPUT();


--C1_acq_storage_qualifier_in[155] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[155]
C1_acq_storage_qualifier_in[155] = INPUT();


--C1_acq_storage_qualifier_in[156] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[156]
C1_acq_storage_qualifier_in[156] = INPUT();


--C1_acq_storage_qualifier_in[157] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[157]
C1_acq_storage_qualifier_in[157] = INPUT();


--C1_acq_storage_qualifier_in[158] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[158]
C1_acq_storage_qualifier_in[158] = INPUT();


--C1_acq_storage_qualifier_in[159] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[159]
C1_acq_storage_qualifier_in[159] = INPUT();


--C1_acq_storage_qualifier_in[160] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[160]
C1_acq_storage_qualifier_in[160] = INPUT();


--C1_acq_storage_qualifier_in[161] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[161]
C1_acq_storage_qualifier_in[161] = INPUT();


--C1_acq_storage_qualifier_in[162] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[162]
C1_acq_storage_qualifier_in[162] = INPUT();


--C1_acq_storage_qualifier_in[163] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[163]
C1_acq_storage_qualifier_in[163] = INPUT();


--C1_acq_storage_qualifier_in[164] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[164]
C1_acq_storage_qualifier_in[164] = INPUT();


--C1_acq_storage_qualifier_in[165] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[165]
C1_acq_storage_qualifier_in[165] = INPUT();


--C1_acq_storage_qualifier_in[166] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[166]
C1_acq_storage_qualifier_in[166] = INPUT();


--C1_acq_storage_qualifier_in[167] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[167]
C1_acq_storage_qualifier_in[167] = INPUT();


--C1_acq_storage_qualifier_in[168] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[168]
C1_acq_storage_qualifier_in[168] = INPUT();


--C1_acq_storage_qualifier_in[169] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[169]
C1_acq_storage_qualifier_in[169] = INPUT();


--C1_acq_storage_qualifier_in[170] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[170]
C1_acq_storage_qualifier_in[170] = INPUT();


--C1_acq_storage_qualifier_in[171] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[171]
C1_acq_storage_qualifier_in[171] = INPUT();


--C1_acq_storage_qualifier_in[172] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[172]
C1_acq_storage_qualifier_in[172] = INPUT();


--C1_acq_storage_qualifier_in[173] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[173]
C1_acq_storage_qualifier_in[173] = INPUT();


--C1_acq_storage_qualifier_in[174] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[174]
C1_acq_storage_qualifier_in[174] = INPUT();


--C1_acq_storage_qualifier_in[175] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[175]
C1_acq_storage_qualifier_in[175] = INPUT();


--C1_acq_storage_qualifier_in[176] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[176]
C1_acq_storage_qualifier_in[176] = INPUT();


--C1_acq_storage_qualifier_in[177] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[177]
C1_acq_storage_qualifier_in[177] = INPUT();


--C1_acq_storage_qualifier_in[178] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[178]
C1_acq_storage_qualifier_in[178] = INPUT();


--C1_acq_storage_qualifier_in[179] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[179]
C1_acq_storage_qualifier_in[179] = INPUT();


--C1_acq_storage_qualifier_in[180] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[180]
C1_acq_storage_qualifier_in[180] = INPUT();


--C1_acq_storage_qualifier_in[181] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[181]
C1_acq_storage_qualifier_in[181] = INPUT();


--C1_acq_storage_qualifier_in[182] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[182]
C1_acq_storage_qualifier_in[182] = INPUT();


--C1_acq_storage_qualifier_in[183] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[183]
C1_acq_storage_qualifier_in[183] = INPUT();


--C1_acq_storage_qualifier_in[184] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[184]
C1_acq_storage_qualifier_in[184] = INPUT();


--C1_acq_storage_qualifier_in[185] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[185]
C1_acq_storage_qualifier_in[185] = INPUT();


--C1_acq_storage_qualifier_in[186] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[186]
C1_acq_storage_qualifier_in[186] = INPUT();


--C1_acq_storage_qualifier_in[187] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[187]
C1_acq_storage_qualifier_in[187] = INPUT();


--C1_acq_storage_qualifier_in[188] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[188]
C1_acq_storage_qualifier_in[188] = INPUT();


--C1_acq_storage_qualifier_in[189] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[189]
C1_acq_storage_qualifier_in[189] = INPUT();


--C1_acq_storage_qualifier_in[190] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[190]
C1_acq_storage_qualifier_in[190] = INPUT();


--C1_acq_storage_qualifier_in[191] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[191]
C1_acq_storage_qualifier_in[191] = INPUT();


--C1_acq_storage_qualifier_in[192] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[192]
C1_acq_storage_qualifier_in[192] = INPUT();


--C1_acq_storage_qualifier_in[193] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[193]
C1_acq_storage_qualifier_in[193] = INPUT();


--C1_acq_storage_qualifier_in[194] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[194]
C1_acq_storage_qualifier_in[194] = INPUT();


--C1_acq_storage_qualifier_in[195] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[195]
C1_acq_storage_qualifier_in[195] = INPUT();


--C1_acq_storage_qualifier_in[196] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[196]
C1_acq_storage_qualifier_in[196] = INPUT();


--C1_acq_storage_qualifier_in[197] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[197]
C1_acq_storage_qualifier_in[197] = INPUT();


--C1_acq_storage_qualifier_in[198] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[198]
C1_acq_storage_qualifier_in[198] = INPUT();


--C1_acq_storage_qualifier_in[199] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[199]
C1_acq_storage_qualifier_in[199] = INPUT();


--C1_acq_storage_qualifier_in[200] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[200]
C1_acq_storage_qualifier_in[200] = INPUT();


--C1_acq_storage_qualifier_in[201] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[201]
C1_acq_storage_qualifier_in[201] = INPUT();


--C1_acq_storage_qualifier_in[202] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[202]
C1_acq_storage_qualifier_in[202] = INPUT();


--C1_acq_storage_qualifier_in[203] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[203]
C1_acq_storage_qualifier_in[203] = INPUT();


--C1_acq_storage_qualifier_in[204] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[204]
C1_acq_storage_qualifier_in[204] = INPUT();


--C1_acq_storage_qualifier_in[205] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[205]
C1_acq_storage_qualifier_in[205] = INPUT();


--C1_acq_storage_qualifier_in[206] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[206]
C1_acq_storage_qualifier_in[206] = INPUT();


--C1_acq_storage_qualifier_in[207] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[207]
C1_acq_storage_qualifier_in[207] = INPUT();


--C1_acq_storage_qualifier_in[208] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[208]
C1_acq_storage_qualifier_in[208] = INPUT();


--C1_acq_storage_qualifier_in[209] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[209]
C1_acq_storage_qualifier_in[209] = INPUT();


--C1_acq_storage_qualifier_in[210] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[210]
C1_acq_storage_qualifier_in[210] = INPUT();


--C1_acq_storage_qualifier_in[211] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[211]
C1_acq_storage_qualifier_in[211] = INPUT();


--C1_acq_storage_qualifier_in[212] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[212]
C1_acq_storage_qualifier_in[212] = INPUT();


--C1_acq_storage_qualifier_in[213] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[213]
C1_acq_storage_qualifier_in[213] = INPUT();


--C1_acq_storage_qualifier_in[214] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[214]
C1_acq_storage_qualifier_in[214] = INPUT();


--C1_acq_storage_qualifier_in[215] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[215]
C1_acq_storage_qualifier_in[215] = INPUT();


--C1_acq_storage_qualifier_in[216] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[216]
C1_acq_storage_qualifier_in[216] = INPUT();


--C1_acq_storage_qualifier_in[217] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[217]
C1_acq_storage_qualifier_in[217] = INPUT();


--C1_acq_storage_qualifier_in[218] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[218]
C1_acq_storage_qualifier_in[218] = INPUT();


--C1_acq_storage_qualifier_in[219] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[219]
C1_acq_storage_qualifier_in[219] = INPUT();


--C1_acq_storage_qualifier_in[220] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[220]
C1_acq_storage_qualifier_in[220] = INPUT();


--C1_acq_storage_qualifier_in[221] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[221]
C1_acq_storage_qualifier_in[221] = INPUT();


--C1_acq_storage_qualifier_in[222] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[222]
C1_acq_storage_qualifier_in[222] = INPUT();


--C1_acq_storage_qualifier_in[223] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[223]
C1_acq_storage_qualifier_in[223] = INPUT();


--C1_acq_storage_qualifier_in[224] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[224]
C1_acq_storage_qualifier_in[224] = INPUT();


--C1_acq_storage_qualifier_in[225] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[225]
C1_acq_storage_qualifier_in[225] = INPUT();


--C1_acq_storage_qualifier_in[226] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[226]
C1_acq_storage_qualifier_in[226] = INPUT();


--C1_acq_storage_qualifier_in[227] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[227]
C1_acq_storage_qualifier_in[227] = INPUT();


--C1_acq_storage_qualifier_in[228] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[228]
C1_acq_storage_qualifier_in[228] = INPUT();


--C1_acq_storage_qualifier_in[229] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[229]
C1_acq_storage_qualifier_in[229] = INPUT();


--C1_acq_storage_qualifier_in[230] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[230]
C1_acq_storage_qualifier_in[230] = INPUT();


--C1_acq_storage_qualifier_in[231] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[231]
C1_acq_storage_qualifier_in[231] = INPUT();


--C1_acq_storage_qualifier_in[232] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[232]
C1_acq_storage_qualifier_in[232] = INPUT();


--C1_acq_storage_qualifier_in[233] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[233]
C1_acq_storage_qualifier_in[233] = INPUT();


--C1_acq_storage_qualifier_in[234] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[234]
C1_acq_storage_qualifier_in[234] = INPUT();


--C1_acq_storage_qualifier_in[235] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[235]
C1_acq_storage_qualifier_in[235] = INPUT();


--C1_acq_storage_qualifier_in[236] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[236]
C1_acq_storage_qualifier_in[236] = INPUT();


--C1_acq_storage_qualifier_in[237] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[237]
C1_acq_storage_qualifier_in[237] = INPUT();


--C1_acq_storage_qualifier_in[238] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[238]
C1_acq_storage_qualifier_in[238] = INPUT();


--C1_acq_storage_qualifier_in[239] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[239]
C1_acq_storage_qualifier_in[239] = INPUT();


--C1_acq_storage_qualifier_in[240] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[240]
C1_acq_storage_qualifier_in[240] = INPUT();


--C1_acq_storage_qualifier_in[241] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[241]
C1_acq_storage_qualifier_in[241] = INPUT();


--C1_acq_storage_qualifier_in[242] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[242]
C1_acq_storage_qualifier_in[242] = INPUT();


--C1_acq_storage_qualifier_in[243] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[243]
C1_acq_storage_qualifier_in[243] = INPUT();


--C1_acq_storage_qualifier_in[244] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[244]
C1_acq_storage_qualifier_in[244] = INPUT();


--C1_acq_storage_qualifier_in[245] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[245]
C1_acq_storage_qualifier_in[245] = INPUT();


--C1_acq_storage_qualifier_in[246] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[246]
C1_acq_storage_qualifier_in[246] = INPUT();


--C1_acq_storage_qualifier_in[247] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[247]
C1_acq_storage_qualifier_in[247] = INPUT();


--C1_acq_storage_qualifier_in[248] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[248]
C1_acq_storage_qualifier_in[248] = INPUT();


--C1_acq_storage_qualifier_in[249] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[249]
C1_acq_storage_qualifier_in[249] = INPUT();


--C1_acq_storage_qualifier_in[250] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[250]
C1_acq_storage_qualifier_in[250] = INPUT();


--C1_acq_storage_qualifier_in[251] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[251]
C1_acq_storage_qualifier_in[251] = INPUT();


--C1_acq_storage_qualifier_in[252] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[252]
C1_acq_storage_qualifier_in[252] = INPUT();


--C1_acq_storage_qualifier_in[253] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[253]
C1_acq_storage_qualifier_in[253] = INPUT();


--C1_acq_storage_qualifier_in[254] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[254]
C1_acq_storage_qualifier_in[254] = INPUT();


--C1_acq_storage_qualifier_in[255] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[255]
C1_acq_storage_qualifier_in[255] = INPUT();


--C1_acq_storage_qualifier_in[256] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[256]
C1_acq_storage_qualifier_in[256] = INPUT();


--C1_acq_storage_qualifier_in[257] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[257]
C1_acq_storage_qualifier_in[257] = INPUT();


--C1_acq_storage_qualifier_in[258] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[258]
C1_acq_storage_qualifier_in[258] = INPUT();


--C1_acq_storage_qualifier_in[259] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[259]
C1_acq_storage_qualifier_in[259] = INPUT();


--C1_acq_storage_qualifier_in[260] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[260]
C1_acq_storage_qualifier_in[260] = INPUT();


--C1_acq_storage_qualifier_in[261] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[261]
C1_acq_storage_qualifier_in[261] = INPUT();


--C1_acq_storage_qualifier_in[262] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[262]
C1_acq_storage_qualifier_in[262] = INPUT();


--C1_acq_storage_qualifier_in[263] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[263]
C1_acq_storage_qualifier_in[263] = INPUT();


--C1_acq_storage_qualifier_in[264] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[264]
C1_acq_storage_qualifier_in[264] = INPUT();


--C1_acq_storage_qualifier_in[265] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[265]
C1_acq_storage_qualifier_in[265] = INPUT();


--C1_acq_storage_qualifier_in[266] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[266]
C1_acq_storage_qualifier_in[266] = INPUT();


--C1_acq_storage_qualifier_in[267] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[267]
C1_acq_storage_qualifier_in[267] = INPUT();


--C1_acq_storage_qualifier_in[268] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[268]
C1_acq_storage_qualifier_in[268] = INPUT();


--C1_acq_storage_qualifier_in[269] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[269]
C1_acq_storage_qualifier_in[269] = INPUT();


--C1_acq_storage_qualifier_in[270] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[270]
C1_acq_storage_qualifier_in[270] = INPUT();


--C1_acq_storage_qualifier_in[271] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[271]
C1_acq_storage_qualifier_in[271] = INPUT();


--C1_acq_storage_qualifier_in[272] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[272]
C1_acq_storage_qualifier_in[272] = INPUT();


--C1_acq_storage_qualifier_in[273] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[273]
C1_acq_storage_qualifier_in[273] = INPUT();


--C1_acq_storage_qualifier_in[274] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[274]
C1_acq_storage_qualifier_in[274] = INPUT();


--C1_acq_storage_qualifier_in[275] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[275]
C1_acq_storage_qualifier_in[275] = INPUT();


--C1_acq_storage_qualifier_in[276] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[276]
C1_acq_storage_qualifier_in[276] = INPUT();


--C1_acq_storage_qualifier_in[277] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[277]
C1_acq_storage_qualifier_in[277] = INPUT();


--C1_acq_storage_qualifier_in[278] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[278]
C1_acq_storage_qualifier_in[278] = INPUT();


--C1_acq_storage_qualifier_in[279] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[279]
C1_acq_storage_qualifier_in[279] = INPUT();


--C1_acq_storage_qualifier_in[280] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[280]
C1_acq_storage_qualifier_in[280] = INPUT();


--C1_acq_storage_qualifier_in[281] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[281]
C1_acq_storage_qualifier_in[281] = INPUT();


--C1_acq_storage_qualifier_in[282] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[282]
C1_acq_storage_qualifier_in[282] = INPUT();


--C1_acq_storage_qualifier_in[283] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[283]
C1_acq_storage_qualifier_in[283] = INPUT();


--C1_acq_storage_qualifier_in[284] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[284]
C1_acq_storage_qualifier_in[284] = INPUT();


--C1_acq_storage_qualifier_in[285] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[285]
C1_acq_storage_qualifier_in[285] = INPUT();


--C1_acq_storage_qualifier_in[286] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[286]
C1_acq_storage_qualifier_in[286] = INPUT();


--C1_acq_storage_qualifier_in[287] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[287]
C1_acq_storage_qualifier_in[287] = INPUT();


--C1_acq_storage_qualifier_in[288] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[288]
C1_acq_storage_qualifier_in[288] = INPUT();


--C1_acq_storage_qualifier_in[289] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[289]
C1_acq_storage_qualifier_in[289] = INPUT();


--C1_acq_storage_qualifier_in[290] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[290]
C1_acq_storage_qualifier_in[290] = INPUT();


--C1_acq_storage_qualifier_in[291] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[291]
C1_acq_storage_qualifier_in[291] = INPUT();


--C1_acq_storage_qualifier_in[292] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[292]
C1_acq_storage_qualifier_in[292] = INPUT();


--C1_acq_storage_qualifier_in[293] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[293]
C1_acq_storage_qualifier_in[293] = INPUT();


--C1_acq_storage_qualifier_in[294] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[294]
C1_acq_storage_qualifier_in[294] = INPUT();


--C1_acq_storage_qualifier_in[295] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[295]
C1_acq_storage_qualifier_in[295] = INPUT();


--C1_acq_storage_qualifier_in[296] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[296]
C1_acq_storage_qualifier_in[296] = INPUT();


--C1_acq_storage_qualifier_in[297] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[297]
C1_acq_storage_qualifier_in[297] = INPUT();


--C1_acq_storage_qualifier_in[298] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[298]
C1_acq_storage_qualifier_in[298] = INPUT();


--C1_acq_storage_qualifier_in[299] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[299]
C1_acq_storage_qualifier_in[299] = INPUT();


--C1_acq_storage_qualifier_in[300] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[300]
C1_acq_storage_qualifier_in[300] = INPUT();


--C1_acq_storage_qualifier_in[301] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[301]
C1_acq_storage_qualifier_in[301] = INPUT();


--C1_acq_storage_qualifier_in[302] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[302]
C1_acq_storage_qualifier_in[302] = INPUT();


--C1_acq_storage_qualifier_in[303] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[303]
C1_acq_storage_qualifier_in[303] = INPUT();


--C1_acq_storage_qualifier_in[304] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[304]
C1_acq_storage_qualifier_in[304] = INPUT();


--C1_acq_storage_qualifier_in[305] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[305]
C1_acq_storage_qualifier_in[305] = INPUT();


--C1_acq_storage_qualifier_in[306] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[306]
C1_acq_storage_qualifier_in[306] = INPUT();


--C1_acq_storage_qualifier_in[307] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[307]
C1_acq_storage_qualifier_in[307] = INPUT();


--C1_acq_storage_qualifier_in[308] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[308]
C1_acq_storage_qualifier_in[308] = INPUT();


--C1_acq_storage_qualifier_in[309] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[309]
C1_acq_storage_qualifier_in[309] = INPUT();


--C1_acq_storage_qualifier_in[310] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[310]
C1_acq_storage_qualifier_in[310] = INPUT();


--C1_acq_storage_qualifier_in[311] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[311]
C1_acq_storage_qualifier_in[311] = INPUT();


--C1_acq_storage_qualifier_in[312] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[312]
C1_acq_storage_qualifier_in[312] = INPUT();


--C1_acq_storage_qualifier_in[313] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[313]
C1_acq_storage_qualifier_in[313] = INPUT();


--C1_acq_storage_qualifier_in[314] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[314]
C1_acq_storage_qualifier_in[314] = INPUT();


--C1_acq_storage_qualifier_in[315] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[315]
C1_acq_storage_qualifier_in[315] = INPUT();


--C1_acq_storage_qualifier_in[316] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[316]
C1_acq_storage_qualifier_in[316] = INPUT();


--C1_acq_storage_qualifier_in[317] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[317]
C1_acq_storage_qualifier_in[317] = INPUT();


--C1_acq_storage_qualifier_in[318] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[318]
C1_acq_storage_qualifier_in[318] = INPUT();


--C1_acq_storage_qualifier_in[319] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[319]
C1_acq_storage_qualifier_in[319] = INPUT();


--C1_acq_storage_qualifier_in[320] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[320]
C1_acq_storage_qualifier_in[320] = INPUT();


--C1_acq_storage_qualifier_in[321] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[321]
C1_acq_storage_qualifier_in[321] = INPUT();


--C1_acq_storage_qualifier_in[322] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[322]
C1_acq_storage_qualifier_in[322] = INPUT();


--C1_acq_storage_qualifier_in[323] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[323]
C1_acq_storage_qualifier_in[323] = INPUT();


--C1_acq_storage_qualifier_in[324] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[324]
C1_acq_storage_qualifier_in[324] = INPUT();


--C1_acq_storage_qualifier_in[325] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[325]
C1_acq_storage_qualifier_in[325] = INPUT();


--C1_acq_storage_qualifier_in[326] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[326]
C1_acq_storage_qualifier_in[326] = INPUT();


--C1_acq_storage_qualifier_in[327] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[327]
C1_acq_storage_qualifier_in[327] = INPUT();


--C1_acq_storage_qualifier_in[328] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[328]
C1_acq_storage_qualifier_in[328] = INPUT();


--C1_acq_storage_qualifier_in[329] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[329]
C1_acq_storage_qualifier_in[329] = INPUT();


--C1_acq_storage_qualifier_in[330] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[330]
C1_acq_storage_qualifier_in[330] = INPUT();


--C1_acq_storage_qualifier_in[331] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[331]
C1_acq_storage_qualifier_in[331] = INPUT();


--C1_acq_storage_qualifier_in[332] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[332]
C1_acq_storage_qualifier_in[332] = INPUT();


--C1_acq_storage_qualifier_in[333] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[333]
C1_acq_storage_qualifier_in[333] = INPUT();


--C1_acq_storage_qualifier_in[334] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[334]
C1_acq_storage_qualifier_in[334] = INPUT();


--C1_acq_storage_qualifier_in[335] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[335]
C1_acq_storage_qualifier_in[335] = INPUT();


--C1_acq_storage_qualifier_in[336] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[336]
C1_acq_storage_qualifier_in[336] = INPUT();


--C1_acq_storage_qualifier_in[337] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[337]
C1_acq_storage_qualifier_in[337] = INPUT();


--C1_acq_storage_qualifier_in[338] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[338]
C1_acq_storage_qualifier_in[338] = INPUT();


--C1_acq_storage_qualifier_in[339] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[339]
C1_acq_storage_qualifier_in[339] = INPUT();


--C1_acq_storage_qualifier_in[340] is sld_signaltap:auto_signaltap_0|acq_storage_qualifier_in[340]
C1_acq_storage_qualifier_in[340] = INPUT();


--C1_trigger_in is sld_signaltap:auto_signaltap_0|trigger_in
C1_trigger_in = INPUT();


--C1_storage_enable is sld_signaltap:auto_signaltap_0|storage_enable
C1_storage_enable = INPUT();


--C1_jtag_state_e1dr is sld_signaltap:auto_signaltap_0|jtag_state_e1dr
C1_jtag_state_e1dr = INPUT();


--C1_jtag_state_uir is sld_signaltap:auto_signaltap_0|jtag_state_uir
C1_jtag_state_uir = INPUT();


--C1_jtag_state_tlr is sld_signaltap:auto_signaltap_0|jtag_state_tlr
C1_jtag_state_tlr = INPUT();


--C1_jtag_state_rti is sld_signaltap:auto_signaltap_0|jtag_state_rti
C1_jtag_state_rti = INPUT();


--C1_jtag_state_sdrs is sld_signaltap:auto_signaltap_0|jtag_state_sdrs
C1_jtag_state_sdrs = INPUT();


--C1_jtag_state_pdr is sld_signaltap:auto_signaltap_0|jtag_state_pdr
C1_jtag_state_pdr = INPUT();


--C1_jtag_state_e2dr is sld_signaltap:auto_signaltap_0|jtag_state_e2dr
C1_jtag_state_e2dr = INPUT();


--C1_jtag_state_sirs is sld_signaltap:auto_signaltap_0|jtag_state_sirs
C1_jtag_state_sirs = INPUT();


--C1_jtag_state_cir is sld_signaltap:auto_signaltap_0|jtag_state_cir
C1_jtag_state_cir = INPUT();


--C1_jtag_state_sir is sld_signaltap:auto_signaltap_0|jtag_state_sir
C1_jtag_state_sir = INPUT();


--C1_jtag_state_e1ir is sld_signaltap:auto_signaltap_0|jtag_state_e1ir
C1_jtag_state_e1ir = INPUT();


--C1_jtag_state_pir is sld_signaltap:auto_signaltap_0|jtag_state_pir
C1_jtag_state_pir = INPUT();


--C1_jtag_state_e2ir is sld_signaltap:auto_signaltap_0|jtag_state_e2ir
C1_jtag_state_e2ir = INPUT();


--C1_tms is sld_signaltap:auto_signaltap_0|tms
C1_tms = INPUT();


--C1_clrn is sld_signaltap:auto_signaltap_0|clrn
C1_clrn = INPUT();


--C1_irq is sld_signaltap:auto_signaltap_0|irq
C1_irq = OUTPUT(C1L1465);


--C1_vir_tdi is sld_signaltap:auto_signaltap_0|vir_tdi
C1_vir_tdi = INPUT();


--C1_vcc is sld_signaltap:auto_signaltap_0|vcc
C1_vcc = OUTPUT(C1L1466);


--C1_gnd is sld_signaltap:auto_signaltap_0|gnd
C1_gnd = OUTPUT(C1L1465);


--C1_ir_out[0] is sld_signaltap:auto_signaltap_0|ir_out[0]
C1_ir_out[0] = OUTPUT(C1_ir_in[0]);


--C1_ir_out[1] is sld_signaltap:auto_signaltap_0|ir_out[1]
C1_ir_out[1] = OUTPUT(C1_ir_in[1]);


--C1_ir_out[2] is sld_signaltap:auto_signaltap_0|ir_out[2]
C1_ir_out[2] = OUTPUT(C1_ir_in[2]);


--C1_ir_out[3] is sld_signaltap:auto_signaltap_0|ir_out[3]
C1_ir_out[3] = OUTPUT(C1_ir_in[3]);


--C1_ir_out[4] is sld_signaltap:auto_signaltap_0|ir_out[4]
C1_ir_out[4] = OUTPUT(C1_ir_in[4]);


--C1_ir_out[5] is sld_signaltap:auto_signaltap_0|ir_out[5]
C1_ir_out[5] = OUTPUT(C1_ir_in[5]);


--C1_ir_out[6] is sld_signaltap:auto_signaltap_0|ir_out[6]
C1_ir_out[6] = OUTPUT(C1_ir_in[6]);


--C1_ir_out[7] is sld_signaltap:auto_signaltap_0|ir_out[7]
C1_ir_out[7] = OUTPUT(C1_ir_in[7]);


--C1_ir_out[8] is sld_signaltap:auto_signaltap_0|ir_out[8]
C1_ir_out[8] = OUTPUT(C1_ir_in[8]);


--C1_ir_out[9] is sld_signaltap:auto_signaltap_0|ir_out[9]
C1_ir_out[9] = OUTPUT(C1_ir_in[9]);


--C1_tdo is sld_signaltap:auto_signaltap_0|tdo
C1_tdo = OUTPUT(W1L1611);


--C1_acq_data_out[0] is sld_signaltap:auto_signaltap_0|acq_data_out[0]
C1_acq_data_out[0] = OUTPUT(C1_acq_data_in_reg[0]);


--C1_acq_data_out[1] is sld_signaltap:auto_signaltap_0|acq_data_out[1]
C1_acq_data_out[1] = OUTPUT(C1_acq_data_in_reg[1]);


--C1_acq_data_out[2] is sld_signaltap:auto_signaltap_0|acq_data_out[2]
C1_acq_data_out[2] = OUTPUT(C1_acq_data_in_reg[2]);


--C1_acq_data_out[3] is sld_signaltap:auto_signaltap_0|acq_data_out[3]
C1_acq_data_out[3] = OUTPUT(C1_acq_data_in_reg[3]);


--C1_acq_data_out[4] is sld_signaltap:auto_signaltap_0|acq_data_out[4]
C1_acq_data_out[4] = OUTPUT(C1_acq_data_in_reg[4]);


--C1_acq_data_out[5] is sld_signaltap:auto_signaltap_0|acq_data_out[5]
C1_acq_data_out[5] = OUTPUT(C1_acq_data_in_reg[5]);


--C1_acq_data_out[6] is sld_signaltap:auto_signaltap_0|acq_data_out[6]
C1_acq_data_out[6] = OUTPUT(C1_acq_data_in_reg[6]);


--C1_acq_data_out[7] is sld_signaltap:auto_signaltap_0|acq_data_out[7]
C1_acq_data_out[7] = OUTPUT(C1_acq_data_in_reg[7]);


--C1_acq_data_out[8] is sld_signaltap:auto_signaltap_0|acq_data_out[8]
C1_acq_data_out[8] = OUTPUT(C1_acq_data_in_reg[8]);


--C1_acq_data_out[9] is sld_signaltap:auto_signaltap_0|acq_data_out[9]
C1_acq_data_out[9] = OUTPUT(C1_acq_data_in_reg[9]);


--C1_acq_data_out[10] is sld_signaltap:auto_signaltap_0|acq_data_out[10]
C1_acq_data_out[10] = OUTPUT(C1_acq_data_in_reg[10]);


--C1_acq_data_out[11] is sld_signaltap:auto_signaltap_0|acq_data_out[11]
C1_acq_data_out[11] = OUTPUT(C1_acq_data_in_reg[11]);


--C1_acq_data_out[12] is sld_signaltap:auto_signaltap_0|acq_data_out[12]
C1_acq_data_out[12] = OUTPUT(C1_acq_data_in_reg[12]);


--C1_acq_data_out[13] is sld_signaltap:auto_signaltap_0|acq_data_out[13]
C1_acq_data_out[13] = OUTPUT(C1_acq_data_in_reg[13]);


--C1_acq_data_out[14] is sld_signaltap:auto_signaltap_0|acq_data_out[14]
C1_acq_data_out[14] = OUTPUT(C1_acq_data_in_reg[14]);


--C1_acq_data_out[15] is sld_signaltap:auto_signaltap_0|acq_data_out[15]
C1_acq_data_out[15] = OUTPUT(C1_acq_data_in_reg[15]);


--C1_acq_data_out[16] is sld_signaltap:auto_signaltap_0|acq_data_out[16]
C1_acq_data_out[16] = OUTPUT(C1_acq_data_in_reg[16]);


--C1_acq_data_out[17] is sld_signaltap:auto_signaltap_0|acq_data_out[17]
C1_acq_data_out[17] = OUTPUT(C1_acq_data_in_reg[17]);


--C1_acq_data_out[18] is sld_signaltap:auto_signaltap_0|acq_data_out[18]
C1_acq_data_out[18] = OUTPUT(C1_acq_data_in_reg[18]);


--C1_acq_data_out[19] is sld_signaltap:auto_signaltap_0|acq_data_out[19]
C1_acq_data_out[19] = OUTPUT(C1_acq_data_in_reg[19]);


--C1_acq_data_out[20] is sld_signaltap:auto_signaltap_0|acq_data_out[20]
C1_acq_data_out[20] = OUTPUT(C1_acq_data_in_reg[20]);


--C1_acq_data_out[21] is sld_signaltap:auto_signaltap_0|acq_data_out[21]
C1_acq_data_out[21] = OUTPUT(C1_acq_data_in_reg[21]);


--C1_acq_data_out[22] is sld_signaltap:auto_signaltap_0|acq_data_out[22]
C1_acq_data_out[22] = OUTPUT(C1_acq_data_in_reg[22]);


--C1_acq_data_out[23] is sld_signaltap:auto_signaltap_0|acq_data_out[23]
C1_acq_data_out[23] = OUTPUT(C1_acq_data_in_reg[23]);


--C1_acq_data_out[24] is sld_signaltap:auto_signaltap_0|acq_data_out[24]
C1_acq_data_out[24] = OUTPUT(C1_acq_data_in_reg[24]);


--C1_acq_data_out[25] is sld_signaltap:auto_signaltap_0|acq_data_out[25]
C1_acq_data_out[25] = OUTPUT(C1_acq_data_in_reg[25]);


--C1_acq_data_out[26] is sld_signaltap:auto_signaltap_0|acq_data_out[26]
C1_acq_data_out[26] = OUTPUT(C1_acq_data_in_reg[26]);


--C1_acq_data_out[27] is sld_signaltap:auto_signaltap_0|acq_data_out[27]
C1_acq_data_out[27] = OUTPUT(C1_acq_data_in_reg[27]);


--C1_acq_data_out[28] is sld_signaltap:auto_signaltap_0|acq_data_out[28]
C1_acq_data_out[28] = OUTPUT(C1_acq_data_in_reg[28]);


--C1_acq_data_out[29] is sld_signaltap:auto_signaltap_0|acq_data_out[29]
C1_acq_data_out[29] = OUTPUT(C1_acq_data_in_reg[29]);


--C1_acq_data_out[30] is sld_signaltap:auto_signaltap_0|acq_data_out[30]
C1_acq_data_out[30] = OUTPUT(C1_acq_data_in_reg[30]);


--C1_acq_data_out[31] is sld_signaltap:auto_signaltap_0|acq_data_out[31]
C1_acq_data_out[31] = OUTPUT(C1_acq_data_in_reg[31]);


--C1_acq_data_out[32] is sld_signaltap:auto_signaltap_0|acq_data_out[32]
C1_acq_data_out[32] = OUTPUT(C1_acq_data_in_reg[32]);


--C1_acq_data_out[33] is sld_signaltap:auto_signaltap_0|acq_data_out[33]
C1_acq_data_out[33] = OUTPUT(C1_acq_data_in_reg[33]);


--C1_acq_data_out[34] is sld_signaltap:auto_signaltap_0|acq_data_out[34]
C1_acq_data_out[34] = OUTPUT(C1_acq_data_in_reg[34]);


--C1_acq_data_out[35] is sld_signaltap:auto_signaltap_0|acq_data_out[35]
C1_acq_data_out[35] = OUTPUT(C1_acq_data_in_reg[35]);


--C1_acq_data_out[36] is sld_signaltap:auto_signaltap_0|acq_data_out[36]
C1_acq_data_out[36] = OUTPUT(C1_acq_data_in_reg[36]);


--C1_acq_data_out[37] is sld_signaltap:auto_signaltap_0|acq_data_out[37]
C1_acq_data_out[37] = OUTPUT(C1_acq_data_in_reg[37]);


--C1_acq_data_out[38] is sld_signaltap:auto_signaltap_0|acq_data_out[38]
C1_acq_data_out[38] = OUTPUT(C1_acq_data_in_reg[38]);


--C1_acq_data_out[39] is sld_signaltap:auto_signaltap_0|acq_data_out[39]
C1_acq_data_out[39] = OUTPUT(C1_acq_data_in_reg[39]);


--C1_acq_data_out[40] is sld_signaltap:auto_signaltap_0|acq_data_out[40]
C1_acq_data_out[40] = OUTPUT(C1_acq_data_in_reg[40]);


--C1_acq_data_out[41] is sld_signaltap:auto_signaltap_0|acq_data_out[41]
C1_acq_data_out[41] = OUTPUT(C1_acq_data_in_reg[41]);


--C1_acq_data_out[42] is sld_signaltap:auto_signaltap_0|acq_data_out[42]
C1_acq_data_out[42] = OUTPUT(C1_acq_data_in_reg[42]);


--C1_acq_data_out[43] is sld_signaltap:auto_signaltap_0|acq_data_out[43]
C1_acq_data_out[43] = OUTPUT(C1_acq_data_in_reg[43]);


--C1_acq_data_out[44] is sld_signaltap:auto_signaltap_0|acq_data_out[44]
C1_acq_data_out[44] = OUTPUT(C1_acq_data_in_reg[44]);


--C1_acq_data_out[45] is sld_signaltap:auto_signaltap_0|acq_data_out[45]
C1_acq_data_out[45] = OUTPUT(C1_acq_data_in_reg[45]);


--C1_acq_data_out[46] is sld_signaltap:auto_signaltap_0|acq_data_out[46]
C1_acq_data_out[46] = OUTPUT(C1_acq_data_in_reg[46]);


--C1_acq_data_out[47] is sld_signaltap:auto_signaltap_0|acq_data_out[47]
C1_acq_data_out[47] = OUTPUT(C1_acq_data_in_reg[47]);


--C1_acq_data_out[48] is sld_signaltap:auto_signaltap_0|acq_data_out[48]
C1_acq_data_out[48] = OUTPUT(C1_acq_data_in_reg[48]);


--C1_acq_data_out[49] is sld_signaltap:auto_signaltap_0|acq_data_out[49]
C1_acq_data_out[49] = OUTPUT(C1_acq_data_in_reg[49]);


--C1_acq_data_out[50] is sld_signaltap:auto_signaltap_0|acq_data_out[50]
C1_acq_data_out[50] = OUTPUT(C1_acq_data_in_reg[50]);


--C1_acq_data_out[51] is sld_signaltap:auto_signaltap_0|acq_data_out[51]
C1_acq_data_out[51] = OUTPUT(C1_acq_data_in_reg[51]);


--C1_acq_data_out[52] is sld_signaltap:auto_signaltap_0|acq_data_out[52]
C1_acq_data_out[52] = OUTPUT(C1_acq_data_in_reg[52]);


--C1_acq_data_out[53] is sld_signaltap:auto_signaltap_0|acq_data_out[53]
C1_acq_data_out[53] = OUTPUT(C1_acq_data_in_reg[53]);


--C1_acq_data_out[54] is sld_signaltap:auto_signaltap_0|acq_data_out[54]
C1_acq_data_out[54] = OUTPUT(C1_acq_data_in_reg[54]);


--C1_acq_data_out[55] is sld_signaltap:auto_signaltap_0|acq_data_out[55]
C1_acq_data_out[55] = OUTPUT(C1_acq_data_in_reg[55]);


--C1_acq_data_out[56] is sld_signaltap:auto_signaltap_0|acq_data_out[56]
C1_acq_data_out[56] = OUTPUT(C1_acq_data_in_reg[56]);


--C1_acq_data_out[57] is sld_signaltap:auto_signaltap_0|acq_data_out[57]
C1_acq_data_out[57] = OUTPUT(C1_acq_data_in_reg[57]);


--C1_acq_data_out[58] is sld_signaltap:auto_signaltap_0|acq_data_out[58]
C1_acq_data_out[58] = OUTPUT(C1_acq_data_in_reg[58]);


--C1_acq_data_out[59] is sld_signaltap:auto_signaltap_0|acq_data_out[59]
C1_acq_data_out[59] = OUTPUT(C1_acq_data_in_reg[59]);


--C1_acq_data_out[60] is sld_signaltap:auto_signaltap_0|acq_data_out[60]
C1_acq_data_out[60] = OUTPUT(C1_acq_data_in_reg[60]);


--C1_acq_data_out[61] is sld_signaltap:auto_signaltap_0|acq_data_out[61]
C1_acq_data_out[61] = OUTPUT(C1_acq_data_in_reg[61]);


--C1_acq_data_out[62] is sld_signaltap:auto_signaltap_0|acq_data_out[62]
C1_acq_data_out[62] = OUTPUT(C1_acq_data_in_reg[62]);


--C1_acq_data_out[63] is sld_signaltap:auto_signaltap_0|acq_data_out[63]
C1_acq_data_out[63] = OUTPUT(C1_acq_data_in_reg[63]);


--C1_acq_data_out[64] is sld_signaltap:auto_signaltap_0|acq_data_out[64]
C1_acq_data_out[64] = OUTPUT(C1_acq_data_in_reg[64]);


--C1_acq_data_out[65] is sld_signaltap:auto_signaltap_0|acq_data_out[65]
C1_acq_data_out[65] = OUTPUT(C1_acq_data_in_reg[65]);


--C1_acq_data_out[66] is sld_signaltap:auto_signaltap_0|acq_data_out[66]
C1_acq_data_out[66] = OUTPUT(C1_acq_data_in_reg[66]);


--C1_acq_data_out[67] is sld_signaltap:auto_signaltap_0|acq_data_out[67]
C1_acq_data_out[67] = OUTPUT(C1_acq_data_in_reg[67]);


--C1_acq_data_out[68] is sld_signaltap:auto_signaltap_0|acq_data_out[68]
C1_acq_data_out[68] = OUTPUT(C1_acq_data_in_reg[68]);


--C1_acq_data_out[69] is sld_signaltap:auto_signaltap_0|acq_data_out[69]
C1_acq_data_out[69] = OUTPUT(C1_acq_data_in_reg[69]);


--C1_acq_data_out[70] is sld_signaltap:auto_signaltap_0|acq_data_out[70]
C1_acq_data_out[70] = OUTPUT(C1_acq_data_in_reg[70]);


--C1_acq_data_out[71] is sld_signaltap:auto_signaltap_0|acq_data_out[71]
C1_acq_data_out[71] = OUTPUT(C1_acq_data_in_reg[71]);


--C1_acq_data_out[72] is sld_signaltap:auto_signaltap_0|acq_data_out[72]
C1_acq_data_out[72] = OUTPUT(C1_acq_data_in_reg[72]);


--C1_acq_data_out[73] is sld_signaltap:auto_signaltap_0|acq_data_out[73]
C1_acq_data_out[73] = OUTPUT(C1_acq_data_in_reg[73]);


--C1_acq_data_out[74] is sld_signaltap:auto_signaltap_0|acq_data_out[74]
C1_acq_data_out[74] = OUTPUT(C1_acq_data_in_reg[74]);


--C1_acq_data_out[75] is sld_signaltap:auto_signaltap_0|acq_data_out[75]
C1_acq_data_out[75] = OUTPUT(C1_acq_data_in_reg[75]);


--C1_acq_data_out[76] is sld_signaltap:auto_signaltap_0|acq_data_out[76]
C1_acq_data_out[76] = OUTPUT(C1_acq_data_in_reg[76]);


--C1_acq_data_out[77] is sld_signaltap:auto_signaltap_0|acq_data_out[77]
C1_acq_data_out[77] = OUTPUT(C1_acq_data_in_reg[77]);


--C1_acq_data_out[78] is sld_signaltap:auto_signaltap_0|acq_data_out[78]
C1_acq_data_out[78] = OUTPUT(C1_acq_data_in_reg[78]);


--C1_acq_data_out[79] is sld_signaltap:auto_signaltap_0|acq_data_out[79]
C1_acq_data_out[79] = OUTPUT(C1_acq_data_in_reg[79]);


--C1_acq_data_out[80] is sld_signaltap:auto_signaltap_0|acq_data_out[80]
C1_acq_data_out[80] = OUTPUT(C1_acq_data_in_reg[80]);


--C1_acq_data_out[81] is sld_signaltap:auto_signaltap_0|acq_data_out[81]
C1_acq_data_out[81] = OUTPUT(C1_acq_data_in_reg[81]);


--C1_acq_data_out[82] is sld_signaltap:auto_signaltap_0|acq_data_out[82]
C1_acq_data_out[82] = OUTPUT(C1_acq_data_in_reg[82]);


--C1_acq_data_out[83] is sld_signaltap:auto_signaltap_0|acq_data_out[83]
C1_acq_data_out[83] = OUTPUT(C1_acq_data_in_reg[83]);


--C1_acq_data_out[84] is sld_signaltap:auto_signaltap_0|acq_data_out[84]
C1_acq_data_out[84] = OUTPUT(C1_acq_data_in_reg[84]);


--C1_acq_data_out[85] is sld_signaltap:auto_signaltap_0|acq_data_out[85]
C1_acq_data_out[85] = OUTPUT(C1_acq_data_in_reg[85]);


--C1_acq_data_out[86] is sld_signaltap:auto_signaltap_0|acq_data_out[86]
C1_acq_data_out[86] = OUTPUT(C1_acq_data_in_reg[86]);


--C1_acq_data_out[87] is sld_signaltap:auto_signaltap_0|acq_data_out[87]
C1_acq_data_out[87] = OUTPUT(C1_acq_data_in_reg[87]);


--C1_acq_data_out[88] is sld_signaltap:auto_signaltap_0|acq_data_out[88]
C1_acq_data_out[88] = OUTPUT(C1_acq_data_in_reg[88]);


--C1_acq_data_out[89] is sld_signaltap:auto_signaltap_0|acq_data_out[89]
C1_acq_data_out[89] = OUTPUT(C1_acq_data_in_reg[89]);


--C1_acq_data_out[90] is sld_signaltap:auto_signaltap_0|acq_data_out[90]
C1_acq_data_out[90] = OUTPUT(C1_acq_data_in_reg[90]);


--C1_acq_data_out[91] is sld_signaltap:auto_signaltap_0|acq_data_out[91]
C1_acq_data_out[91] = OUTPUT(C1_acq_data_in_reg[91]);


--C1_acq_data_out[92] is sld_signaltap:auto_signaltap_0|acq_data_out[92]
C1_acq_data_out[92] = OUTPUT(C1_acq_data_in_reg[92]);


--C1_acq_data_out[93] is sld_signaltap:auto_signaltap_0|acq_data_out[93]
C1_acq_data_out[93] = OUTPUT(C1_acq_data_in_reg[93]);


--C1_acq_data_out[94] is sld_signaltap:auto_signaltap_0|acq_data_out[94]
C1_acq_data_out[94] = OUTPUT(C1_acq_data_in_reg[94]);


--C1_acq_data_out[95] is sld_signaltap:auto_signaltap_0|acq_data_out[95]
C1_acq_data_out[95] = OUTPUT(C1_acq_data_in_reg[95]);


--C1_acq_data_out[96] is sld_signaltap:auto_signaltap_0|acq_data_out[96]
C1_acq_data_out[96] = OUTPUT(C1_acq_data_in_reg[96]);


--C1_acq_data_out[97] is sld_signaltap:auto_signaltap_0|acq_data_out[97]
C1_acq_data_out[97] = OUTPUT(C1_acq_data_in_reg[97]);


--C1_acq_data_out[98] is sld_signaltap:auto_signaltap_0|acq_data_out[98]
C1_acq_data_out[98] = OUTPUT(C1_acq_data_in_reg[98]);


--C1_acq_data_out[99] is sld_signaltap:auto_signaltap_0|acq_data_out[99]
C1_acq_data_out[99] = OUTPUT(C1_acq_data_in_reg[99]);


--C1_acq_data_out[100] is sld_signaltap:auto_signaltap_0|acq_data_out[100]
C1_acq_data_out[100] = OUTPUT(C1_acq_data_in_reg[100]);


--C1_acq_data_out[101] is sld_signaltap:auto_signaltap_0|acq_data_out[101]
C1_acq_data_out[101] = OUTPUT(C1_acq_data_in_reg[101]);


--C1_acq_data_out[102] is sld_signaltap:auto_signaltap_0|acq_data_out[102]
C1_acq_data_out[102] = OUTPUT(C1_acq_data_in_reg[102]);


--C1_acq_data_out[103] is sld_signaltap:auto_signaltap_0|acq_data_out[103]
C1_acq_data_out[103] = OUTPUT(C1_acq_data_in_reg[103]);


--C1_acq_data_out[104] is sld_signaltap:auto_signaltap_0|acq_data_out[104]
C1_acq_data_out[104] = OUTPUT(C1_acq_data_in_reg[104]);


--C1_acq_data_out[105] is sld_signaltap:auto_signaltap_0|acq_data_out[105]
C1_acq_data_out[105] = OUTPUT(C1_acq_data_in_reg[105]);


--C1_acq_data_out[106] is sld_signaltap:auto_signaltap_0|acq_data_out[106]
C1_acq_data_out[106] = OUTPUT(C1_acq_data_in_reg[106]);


--C1_acq_data_out[107] is sld_signaltap:auto_signaltap_0|acq_data_out[107]
C1_acq_data_out[107] = OUTPUT(C1_acq_data_in_reg[107]);


--C1_acq_data_out[108] is sld_signaltap:auto_signaltap_0|acq_data_out[108]
C1_acq_data_out[108] = OUTPUT(C1_acq_data_in_reg[108]);


--C1_acq_data_out[109] is sld_signaltap:auto_signaltap_0|acq_data_out[109]
C1_acq_data_out[109] = OUTPUT(C1_acq_data_in_reg[109]);


--C1_acq_data_out[110] is sld_signaltap:auto_signaltap_0|acq_data_out[110]
C1_acq_data_out[110] = OUTPUT(C1_acq_data_in_reg[110]);


--C1_acq_data_out[111] is sld_signaltap:auto_signaltap_0|acq_data_out[111]
C1_acq_data_out[111] = OUTPUT(C1_acq_data_in_reg[111]);


--C1_acq_data_out[112] is sld_signaltap:auto_signaltap_0|acq_data_out[112]
C1_acq_data_out[112] = OUTPUT(C1_acq_data_in_reg[112]);


--C1_acq_data_out[113] is sld_signaltap:auto_signaltap_0|acq_data_out[113]
C1_acq_data_out[113] = OUTPUT(C1_acq_data_in_reg[113]);


--C1_acq_data_out[114] is sld_signaltap:auto_signaltap_0|acq_data_out[114]
C1_acq_data_out[114] = OUTPUT(C1_acq_data_in_reg[114]);


--C1_acq_data_out[115] is sld_signaltap:auto_signaltap_0|acq_data_out[115]
C1_acq_data_out[115] = OUTPUT(C1_acq_data_in_reg[115]);


--C1_acq_data_out[116] is sld_signaltap:auto_signaltap_0|acq_data_out[116]
C1_acq_data_out[116] = OUTPUT(C1_acq_data_in_reg[116]);


--C1_acq_data_out[117] is sld_signaltap:auto_signaltap_0|acq_data_out[117]
C1_acq_data_out[117] = OUTPUT(C1_acq_data_in_reg[117]);


--C1_acq_data_out[118] is sld_signaltap:auto_signaltap_0|acq_data_out[118]
C1_acq_data_out[118] = OUTPUT(C1_acq_data_in_reg[118]);


--C1_acq_data_out[119] is sld_signaltap:auto_signaltap_0|acq_data_out[119]
C1_acq_data_out[119] = OUTPUT(C1_acq_data_in_reg[119]);


--C1_acq_data_out[120] is sld_signaltap:auto_signaltap_0|acq_data_out[120]
C1_acq_data_out[120] = OUTPUT(C1_acq_data_in_reg[120]);


--C1_acq_data_out[121] is sld_signaltap:auto_signaltap_0|acq_data_out[121]
C1_acq_data_out[121] = OUTPUT(C1_acq_data_in_reg[121]);


--C1_acq_data_out[122] is sld_signaltap:auto_signaltap_0|acq_data_out[122]
C1_acq_data_out[122] = OUTPUT(C1_acq_data_in_reg[122]);


--C1_acq_data_out[123] is sld_signaltap:auto_signaltap_0|acq_data_out[123]
C1_acq_data_out[123] = OUTPUT(C1_acq_data_in_reg[123]);


--C1_acq_data_out[124] is sld_signaltap:auto_signaltap_0|acq_data_out[124]
C1_acq_data_out[124] = OUTPUT(C1_acq_data_in_reg[124]);


--C1_acq_data_out[125] is sld_signaltap:auto_signaltap_0|acq_data_out[125]
C1_acq_data_out[125] = OUTPUT(C1_acq_data_in_reg[125]);


--C1_acq_data_out[126] is sld_signaltap:auto_signaltap_0|acq_data_out[126]
C1_acq_data_out[126] = OUTPUT(C1_acq_data_in_reg[126]);


--C1_acq_data_out[127] is sld_signaltap:auto_signaltap_0|acq_data_out[127]
C1_acq_data_out[127] = OUTPUT(C1_acq_data_in_reg[127]);


--C1_acq_data_out[128] is sld_signaltap:auto_signaltap_0|acq_data_out[128]
C1_acq_data_out[128] = OUTPUT(C1_acq_data_in_reg[128]);


--C1_acq_data_out[129] is sld_signaltap:auto_signaltap_0|acq_data_out[129]
C1_acq_data_out[129] = OUTPUT(C1_acq_data_in_reg[129]);


--C1_acq_data_out[130] is sld_signaltap:auto_signaltap_0|acq_data_out[130]
C1_acq_data_out[130] = OUTPUT(C1_acq_data_in_reg[130]);


--C1_acq_data_out[131] is sld_signaltap:auto_signaltap_0|acq_data_out[131]
C1_acq_data_out[131] = OUTPUT(C1_acq_data_in_reg[131]);


--C1_acq_data_out[132] is sld_signaltap:auto_signaltap_0|acq_data_out[132]
C1_acq_data_out[132] = OUTPUT(C1_acq_data_in_reg[132]);


--C1_acq_data_out[133] is sld_signaltap:auto_signaltap_0|acq_data_out[133]
C1_acq_data_out[133] = OUTPUT(C1_acq_data_in_reg[133]);


--C1_acq_data_out[134] is sld_signaltap:auto_signaltap_0|acq_data_out[134]
C1_acq_data_out[134] = OUTPUT(C1_acq_data_in_reg[134]);


--C1_acq_data_out[135] is sld_signaltap:auto_signaltap_0|acq_data_out[135]
C1_acq_data_out[135] = OUTPUT(C1_acq_data_in_reg[135]);


--C1_acq_data_out[136] is sld_signaltap:auto_signaltap_0|acq_data_out[136]
C1_acq_data_out[136] = OUTPUT(C1_acq_data_in_reg[136]);


--C1_acq_data_out[137] is sld_signaltap:auto_signaltap_0|acq_data_out[137]
C1_acq_data_out[137] = OUTPUT(C1_acq_data_in_reg[137]);


--C1_acq_data_out[138] is sld_signaltap:auto_signaltap_0|acq_data_out[138]
C1_acq_data_out[138] = OUTPUT(C1_acq_data_in_reg[138]);


--C1_acq_data_out[139] is sld_signaltap:auto_signaltap_0|acq_data_out[139]
C1_acq_data_out[139] = OUTPUT(C1_acq_data_in_reg[139]);


--C1_acq_data_out[140] is sld_signaltap:auto_signaltap_0|acq_data_out[140]
C1_acq_data_out[140] = OUTPUT(C1_acq_data_in_reg[140]);


--C1_acq_data_out[141] is sld_signaltap:auto_signaltap_0|acq_data_out[141]
C1_acq_data_out[141] = OUTPUT(C1_acq_data_in_reg[141]);


--C1_acq_data_out[142] is sld_signaltap:auto_signaltap_0|acq_data_out[142]
C1_acq_data_out[142] = OUTPUT(C1_acq_data_in_reg[142]);


--C1_acq_data_out[143] is sld_signaltap:auto_signaltap_0|acq_data_out[143]
C1_acq_data_out[143] = OUTPUT(C1_acq_data_in_reg[143]);


--C1_acq_data_out[144] is sld_signaltap:auto_signaltap_0|acq_data_out[144]
C1_acq_data_out[144] = OUTPUT(C1_acq_data_in_reg[144]);


--C1_acq_data_out[145] is sld_signaltap:auto_signaltap_0|acq_data_out[145]
C1_acq_data_out[145] = OUTPUT(C1_acq_data_in_reg[145]);


--C1_acq_data_out[146] is sld_signaltap:auto_signaltap_0|acq_data_out[146]
C1_acq_data_out[146] = OUTPUT(C1_acq_data_in_reg[146]);


--C1_acq_data_out[147] is sld_signaltap:auto_signaltap_0|acq_data_out[147]
C1_acq_data_out[147] = OUTPUT(C1_acq_data_in_reg[147]);


--C1_acq_data_out[148] is sld_signaltap:auto_signaltap_0|acq_data_out[148]
C1_acq_data_out[148] = OUTPUT(C1_acq_data_in_reg[148]);


--C1_acq_data_out[149] is sld_signaltap:auto_signaltap_0|acq_data_out[149]
C1_acq_data_out[149] = OUTPUT(C1_acq_data_in_reg[149]);


--C1_acq_data_out[150] is sld_signaltap:auto_signaltap_0|acq_data_out[150]
C1_acq_data_out[150] = OUTPUT(C1_acq_data_in_reg[150]);


--C1_acq_data_out[151] is sld_signaltap:auto_signaltap_0|acq_data_out[151]
C1_acq_data_out[151] = OUTPUT(C1_acq_data_in_reg[151]);


--C1_acq_data_out[152] is sld_signaltap:auto_signaltap_0|acq_data_out[152]
C1_acq_data_out[152] = OUTPUT(C1_acq_data_in_reg[152]);


--C1_acq_data_out[153] is sld_signaltap:auto_signaltap_0|acq_data_out[153]
C1_acq_data_out[153] = OUTPUT(C1_acq_data_in_reg[153]);


--C1_acq_data_out[154] is sld_signaltap:auto_signaltap_0|acq_data_out[154]
C1_acq_data_out[154] = OUTPUT(C1_acq_data_in_reg[154]);


--C1_acq_data_out[155] is sld_signaltap:auto_signaltap_0|acq_data_out[155]
C1_acq_data_out[155] = OUTPUT(C1_acq_data_in_reg[155]);


--C1_acq_data_out[156] is sld_signaltap:auto_signaltap_0|acq_data_out[156]
C1_acq_data_out[156] = OUTPUT(C1_acq_data_in_reg[156]);


--C1_acq_data_out[157] is sld_signaltap:auto_signaltap_0|acq_data_out[157]
C1_acq_data_out[157] = OUTPUT(C1_acq_data_in_reg[157]);


--C1_acq_data_out[158] is sld_signaltap:auto_signaltap_0|acq_data_out[158]
C1_acq_data_out[158] = OUTPUT(C1_acq_data_in_reg[158]);


--C1_acq_data_out[159] is sld_signaltap:auto_signaltap_0|acq_data_out[159]
C1_acq_data_out[159] = OUTPUT(C1_acq_data_in_reg[159]);


--C1_acq_data_out[160] is sld_signaltap:auto_signaltap_0|acq_data_out[160]
C1_acq_data_out[160] = OUTPUT(C1_acq_data_in_reg[160]);


--C1_acq_data_out[161] is sld_signaltap:auto_signaltap_0|acq_data_out[161]
C1_acq_data_out[161] = OUTPUT(C1_acq_data_in_reg[161]);


--C1_acq_data_out[162] is sld_signaltap:auto_signaltap_0|acq_data_out[162]
C1_acq_data_out[162] = OUTPUT(C1_acq_data_in_reg[162]);


--C1_acq_data_out[163] is sld_signaltap:auto_signaltap_0|acq_data_out[163]
C1_acq_data_out[163] = OUTPUT(C1_acq_data_in_reg[163]);


--C1_acq_data_out[164] is sld_signaltap:auto_signaltap_0|acq_data_out[164]
C1_acq_data_out[164] = OUTPUT(C1_acq_data_in_reg[164]);


--C1_acq_data_out[165] is sld_signaltap:auto_signaltap_0|acq_data_out[165]
C1_acq_data_out[165] = OUTPUT(C1_acq_data_in_reg[165]);


--C1_acq_data_out[166] is sld_signaltap:auto_signaltap_0|acq_data_out[166]
C1_acq_data_out[166] = OUTPUT(C1_acq_data_in_reg[166]);


--C1_acq_data_out[167] is sld_signaltap:auto_signaltap_0|acq_data_out[167]
C1_acq_data_out[167] = OUTPUT(C1_acq_data_in_reg[167]);


--C1_acq_data_out[168] is sld_signaltap:auto_signaltap_0|acq_data_out[168]
C1_acq_data_out[168] = OUTPUT(C1_acq_data_in_reg[168]);


--C1_acq_data_out[169] is sld_signaltap:auto_signaltap_0|acq_data_out[169]
C1_acq_data_out[169] = OUTPUT(C1_acq_data_in_reg[169]);


--C1_acq_data_out[170] is sld_signaltap:auto_signaltap_0|acq_data_out[170]
C1_acq_data_out[170] = OUTPUT(C1_acq_data_in_reg[170]);


--C1_acq_data_out[171] is sld_signaltap:auto_signaltap_0|acq_data_out[171]
C1_acq_data_out[171] = OUTPUT(C1_acq_data_in_reg[171]);


--C1_acq_data_out[172] is sld_signaltap:auto_signaltap_0|acq_data_out[172]
C1_acq_data_out[172] = OUTPUT(C1_acq_data_in_reg[172]);


--C1_acq_data_out[173] is sld_signaltap:auto_signaltap_0|acq_data_out[173]
C1_acq_data_out[173] = OUTPUT(C1_acq_data_in_reg[173]);


--C1_acq_data_out[174] is sld_signaltap:auto_signaltap_0|acq_data_out[174]
C1_acq_data_out[174] = OUTPUT(C1_acq_data_in_reg[174]);


--C1_acq_data_out[175] is sld_signaltap:auto_signaltap_0|acq_data_out[175]
C1_acq_data_out[175] = OUTPUT(C1_acq_data_in_reg[175]);


--C1_acq_data_out[176] is sld_signaltap:auto_signaltap_0|acq_data_out[176]
C1_acq_data_out[176] = OUTPUT(C1_acq_data_in_reg[176]);


--C1_acq_data_out[177] is sld_signaltap:auto_signaltap_0|acq_data_out[177]
C1_acq_data_out[177] = OUTPUT(C1_acq_data_in_reg[177]);


--C1_acq_data_out[178] is sld_signaltap:auto_signaltap_0|acq_data_out[178]
C1_acq_data_out[178] = OUTPUT(C1_acq_data_in_reg[178]);


--C1_acq_data_out[179] is sld_signaltap:auto_signaltap_0|acq_data_out[179]
C1_acq_data_out[179] = OUTPUT(C1_acq_data_in_reg[179]);


--C1_acq_data_out[180] is sld_signaltap:auto_signaltap_0|acq_data_out[180]
C1_acq_data_out[180] = OUTPUT(C1_acq_data_in_reg[180]);


--C1_acq_data_out[181] is sld_signaltap:auto_signaltap_0|acq_data_out[181]
C1_acq_data_out[181] = OUTPUT(C1_acq_data_in_reg[181]);


--C1_acq_data_out[182] is sld_signaltap:auto_signaltap_0|acq_data_out[182]
C1_acq_data_out[182] = OUTPUT(C1_acq_data_in_reg[182]);


--C1_acq_data_out[183] is sld_signaltap:auto_signaltap_0|acq_data_out[183]
C1_acq_data_out[183] = OUTPUT(C1_acq_data_in_reg[183]);


--C1_acq_data_out[184] is sld_signaltap:auto_signaltap_0|acq_data_out[184]
C1_acq_data_out[184] = OUTPUT(C1_acq_data_in_reg[184]);


--C1_acq_data_out[185] is sld_signaltap:auto_signaltap_0|acq_data_out[185]
C1_acq_data_out[185] = OUTPUT(C1_acq_data_in_reg[185]);


--C1_acq_data_out[186] is sld_signaltap:auto_signaltap_0|acq_data_out[186]
C1_acq_data_out[186] = OUTPUT(C1_acq_data_in_reg[186]);


--C1_acq_data_out[187] is sld_signaltap:auto_signaltap_0|acq_data_out[187]
C1_acq_data_out[187] = OUTPUT(C1_acq_data_in_reg[187]);


--C1_acq_data_out[188] is sld_signaltap:auto_signaltap_0|acq_data_out[188]
C1_acq_data_out[188] = OUTPUT(C1_acq_data_in_reg[188]);


--C1_acq_data_out[189] is sld_signaltap:auto_signaltap_0|acq_data_out[189]
C1_acq_data_out[189] = OUTPUT(C1_acq_data_in_reg[189]);


--C1_acq_data_out[190] is sld_signaltap:auto_signaltap_0|acq_data_out[190]
C1_acq_data_out[190] = OUTPUT(C1_acq_data_in_reg[190]);


--C1_acq_data_out[191] is sld_signaltap:auto_signaltap_0|acq_data_out[191]
C1_acq_data_out[191] = OUTPUT(C1_acq_data_in_reg[191]);


--C1_acq_data_out[192] is sld_signaltap:auto_signaltap_0|acq_data_out[192]
C1_acq_data_out[192] = OUTPUT(C1_acq_data_in_reg[192]);


--C1_acq_data_out[193] is sld_signaltap:auto_signaltap_0|acq_data_out[193]
C1_acq_data_out[193] = OUTPUT(C1_acq_data_in_reg[193]);


--C1_acq_data_out[194] is sld_signaltap:auto_signaltap_0|acq_data_out[194]
C1_acq_data_out[194] = OUTPUT(C1_acq_data_in_reg[194]);


--C1_acq_data_out[195] is sld_signaltap:auto_signaltap_0|acq_data_out[195]
C1_acq_data_out[195] = OUTPUT(C1_acq_data_in_reg[195]);


--C1_acq_data_out[196] is sld_signaltap:auto_signaltap_0|acq_data_out[196]
C1_acq_data_out[196] = OUTPUT(C1_acq_data_in_reg[196]);


--C1_acq_data_out[197] is sld_signaltap:auto_signaltap_0|acq_data_out[197]
C1_acq_data_out[197] = OUTPUT(C1_acq_data_in_reg[197]);


--C1_acq_data_out[198] is sld_signaltap:auto_signaltap_0|acq_data_out[198]
C1_acq_data_out[198] = OUTPUT(C1_acq_data_in_reg[198]);


--C1_acq_data_out[199] is sld_signaltap:auto_signaltap_0|acq_data_out[199]
C1_acq_data_out[199] = OUTPUT(C1_acq_data_in_reg[199]);


--C1_acq_data_out[200] is sld_signaltap:auto_signaltap_0|acq_data_out[200]
C1_acq_data_out[200] = OUTPUT(C1_acq_data_in_reg[200]);


--C1_acq_data_out[201] is sld_signaltap:auto_signaltap_0|acq_data_out[201]
C1_acq_data_out[201] = OUTPUT(C1_acq_data_in_reg[201]);


--C1_acq_data_out[202] is sld_signaltap:auto_signaltap_0|acq_data_out[202]
C1_acq_data_out[202] = OUTPUT(C1_acq_data_in_reg[202]);


--C1_acq_data_out[203] is sld_signaltap:auto_signaltap_0|acq_data_out[203]
C1_acq_data_out[203] = OUTPUT(C1_acq_data_in_reg[203]);


--C1_acq_data_out[204] is sld_signaltap:auto_signaltap_0|acq_data_out[204]
C1_acq_data_out[204] = OUTPUT(C1_acq_data_in_reg[204]);


--C1_acq_data_out[205] is sld_signaltap:auto_signaltap_0|acq_data_out[205]
C1_acq_data_out[205] = OUTPUT(C1_acq_data_in_reg[205]);


--C1_acq_data_out[206] is sld_signaltap:auto_signaltap_0|acq_data_out[206]
C1_acq_data_out[206] = OUTPUT(C1_acq_data_in_reg[206]);


--C1_acq_data_out[207] is sld_signaltap:auto_signaltap_0|acq_data_out[207]
C1_acq_data_out[207] = OUTPUT(C1_acq_data_in_reg[207]);


--C1_acq_data_out[208] is sld_signaltap:auto_signaltap_0|acq_data_out[208]
C1_acq_data_out[208] = OUTPUT(C1_acq_data_in_reg[208]);


--C1_acq_data_out[209] is sld_signaltap:auto_signaltap_0|acq_data_out[209]
C1_acq_data_out[209] = OUTPUT(C1_acq_data_in_reg[209]);


--C1_acq_data_out[210] is sld_signaltap:auto_signaltap_0|acq_data_out[210]
C1_acq_data_out[210] = OUTPUT(C1_acq_data_in_reg[210]);


--C1_acq_data_out[211] is sld_signaltap:auto_signaltap_0|acq_data_out[211]
C1_acq_data_out[211] = OUTPUT(C1_acq_data_in_reg[211]);


--C1_acq_data_out[212] is sld_signaltap:auto_signaltap_0|acq_data_out[212]
C1_acq_data_out[212] = OUTPUT(C1_acq_data_in_reg[212]);


--C1_acq_data_out[213] is sld_signaltap:auto_signaltap_0|acq_data_out[213]
C1_acq_data_out[213] = OUTPUT(C1_acq_data_in_reg[213]);


--C1_acq_data_out[214] is sld_signaltap:auto_signaltap_0|acq_data_out[214]
C1_acq_data_out[214] = OUTPUT(C1_acq_data_in_reg[214]);


--C1_acq_data_out[215] is sld_signaltap:auto_signaltap_0|acq_data_out[215]
C1_acq_data_out[215] = OUTPUT(C1_acq_data_in_reg[215]);


--C1_acq_data_out[216] is sld_signaltap:auto_signaltap_0|acq_data_out[216]
C1_acq_data_out[216] = OUTPUT(C1_acq_data_in_reg[216]);


--C1_acq_data_out[217] is sld_signaltap:auto_signaltap_0|acq_data_out[217]
C1_acq_data_out[217] = OUTPUT(C1_acq_data_in_reg[217]);


--C1_acq_data_out[218] is sld_signaltap:auto_signaltap_0|acq_data_out[218]
C1_acq_data_out[218] = OUTPUT(C1_acq_data_in_reg[218]);


--C1_acq_data_out[219] is sld_signaltap:auto_signaltap_0|acq_data_out[219]
C1_acq_data_out[219] = OUTPUT(C1_acq_data_in_reg[219]);


--C1_acq_data_out[220] is sld_signaltap:auto_signaltap_0|acq_data_out[220]
C1_acq_data_out[220] = OUTPUT(C1_acq_data_in_reg[220]);


--C1_acq_data_out[221] is sld_signaltap:auto_signaltap_0|acq_data_out[221]
C1_acq_data_out[221] = OUTPUT(C1_acq_data_in_reg[221]);


--C1_acq_data_out[222] is sld_signaltap:auto_signaltap_0|acq_data_out[222]
C1_acq_data_out[222] = OUTPUT(C1_acq_data_in_reg[222]);


--C1_acq_data_out[223] is sld_signaltap:auto_signaltap_0|acq_data_out[223]
C1_acq_data_out[223] = OUTPUT(C1_acq_data_in_reg[223]);


--C1_acq_data_out[224] is sld_signaltap:auto_signaltap_0|acq_data_out[224]
C1_acq_data_out[224] = OUTPUT(C1_acq_data_in_reg[224]);


--C1_acq_data_out[225] is sld_signaltap:auto_signaltap_0|acq_data_out[225]
C1_acq_data_out[225] = OUTPUT(C1_acq_data_in_reg[225]);


--C1_acq_data_out[226] is sld_signaltap:auto_signaltap_0|acq_data_out[226]
C1_acq_data_out[226] = OUTPUT(C1_acq_data_in_reg[226]);


--C1_acq_data_out[227] is sld_signaltap:auto_signaltap_0|acq_data_out[227]
C1_acq_data_out[227] = OUTPUT(C1_acq_data_in_reg[227]);


--C1_acq_data_out[228] is sld_signaltap:auto_signaltap_0|acq_data_out[228]
C1_acq_data_out[228] = OUTPUT(C1_acq_data_in_reg[228]);


--C1_acq_data_out[229] is sld_signaltap:auto_signaltap_0|acq_data_out[229]
C1_acq_data_out[229] = OUTPUT(C1_acq_data_in_reg[229]);


--C1_acq_data_out[230] is sld_signaltap:auto_signaltap_0|acq_data_out[230]
C1_acq_data_out[230] = OUTPUT(C1_acq_data_in_reg[230]);


--C1_acq_data_out[231] is sld_signaltap:auto_signaltap_0|acq_data_out[231]
C1_acq_data_out[231] = OUTPUT(C1_acq_data_in_reg[231]);


--C1_acq_data_out[232] is sld_signaltap:auto_signaltap_0|acq_data_out[232]
C1_acq_data_out[232] = OUTPUT(C1_acq_data_in_reg[232]);


--C1_acq_data_out[233] is sld_signaltap:auto_signaltap_0|acq_data_out[233]
C1_acq_data_out[233] = OUTPUT(C1_acq_data_in_reg[233]);


--C1_acq_data_out[234] is sld_signaltap:auto_signaltap_0|acq_data_out[234]
C1_acq_data_out[234] = OUTPUT(C1_acq_data_in_reg[234]);


--C1_acq_data_out[235] is sld_signaltap:auto_signaltap_0|acq_data_out[235]
C1_acq_data_out[235] = OUTPUT(C1_acq_data_in_reg[235]);


--C1_acq_data_out[236] is sld_signaltap:auto_signaltap_0|acq_data_out[236]
C1_acq_data_out[236] = OUTPUT(C1_acq_data_in_reg[236]);


--C1_acq_data_out[237] is sld_signaltap:auto_signaltap_0|acq_data_out[237]
C1_acq_data_out[237] = OUTPUT(C1_acq_data_in_reg[237]);


--C1_acq_data_out[238] is sld_signaltap:auto_signaltap_0|acq_data_out[238]
C1_acq_data_out[238] = OUTPUT(C1_acq_data_in_reg[238]);


--C1_acq_data_out[239] is sld_signaltap:auto_signaltap_0|acq_data_out[239]
C1_acq_data_out[239] = OUTPUT(C1_acq_data_in_reg[239]);


--C1_acq_data_out[240] is sld_signaltap:auto_signaltap_0|acq_data_out[240]
C1_acq_data_out[240] = OUTPUT(C1_acq_data_in_reg[240]);


--C1_acq_data_out[241] is sld_signaltap:auto_signaltap_0|acq_data_out[241]
C1_acq_data_out[241] = OUTPUT(C1_acq_data_in_reg[241]);


--C1_acq_data_out[242] is sld_signaltap:auto_signaltap_0|acq_data_out[242]
C1_acq_data_out[242] = OUTPUT(C1_acq_data_in_reg[242]);


--C1_acq_data_out[243] is sld_signaltap:auto_signaltap_0|acq_data_out[243]
C1_acq_data_out[243] = OUTPUT(C1_acq_data_in_reg[243]);


--C1_acq_data_out[244] is sld_signaltap:auto_signaltap_0|acq_data_out[244]
C1_acq_data_out[244] = OUTPUT(C1_acq_data_in_reg[244]);


--C1_acq_data_out[245] is sld_signaltap:auto_signaltap_0|acq_data_out[245]
C1_acq_data_out[245] = OUTPUT(C1_acq_data_in_reg[245]);


--C1_acq_data_out[246] is sld_signaltap:auto_signaltap_0|acq_data_out[246]
C1_acq_data_out[246] = OUTPUT(C1_acq_data_in_reg[246]);


--C1_acq_data_out[247] is sld_signaltap:auto_signaltap_0|acq_data_out[247]
C1_acq_data_out[247] = OUTPUT(C1_acq_data_in_reg[247]);


--C1_acq_data_out[248] is sld_signaltap:auto_signaltap_0|acq_data_out[248]
C1_acq_data_out[248] = OUTPUT(C1_acq_data_in_reg[248]);


--C1_acq_data_out[249] is sld_signaltap:auto_signaltap_0|acq_data_out[249]
C1_acq_data_out[249] = OUTPUT(C1_acq_data_in_reg[249]);


--C1_acq_data_out[250] is sld_signaltap:auto_signaltap_0|acq_data_out[250]
C1_acq_data_out[250] = OUTPUT(C1_acq_data_in_reg[250]);


--C1_acq_data_out[251] is sld_signaltap:auto_signaltap_0|acq_data_out[251]
C1_acq_data_out[251] = OUTPUT(C1_acq_data_in_reg[251]);


--C1_acq_data_out[252] is sld_signaltap:auto_signaltap_0|acq_data_out[252]
C1_acq_data_out[252] = OUTPUT(C1_acq_data_in_reg[252]);


--C1_acq_data_out[253] is sld_signaltap:auto_signaltap_0|acq_data_out[253]
C1_acq_data_out[253] = OUTPUT(C1_acq_data_in_reg[253]);


--C1_acq_data_out[254] is sld_signaltap:auto_signaltap_0|acq_data_out[254]
C1_acq_data_out[254] = OUTPUT(C1_acq_data_in_reg[254]);


--C1_acq_data_out[255] is sld_signaltap:auto_signaltap_0|acq_data_out[255]
C1_acq_data_out[255] = OUTPUT(C1_acq_data_in_reg[255]);


--C1_acq_data_out[256] is sld_signaltap:auto_signaltap_0|acq_data_out[256]
C1_acq_data_out[256] = OUTPUT(C1_acq_data_in_reg[256]);


--C1_acq_data_out[257] is sld_signaltap:auto_signaltap_0|acq_data_out[257]
C1_acq_data_out[257] = OUTPUT(C1_acq_data_in_reg[257]);


--C1_acq_data_out[258] is sld_signaltap:auto_signaltap_0|acq_data_out[258]
C1_acq_data_out[258] = OUTPUT(C1_acq_data_in_reg[258]);


--C1_acq_data_out[259] is sld_signaltap:auto_signaltap_0|acq_data_out[259]
C1_acq_data_out[259] = OUTPUT(C1_acq_data_in_reg[259]);


--C1_acq_data_out[260] is sld_signaltap:auto_signaltap_0|acq_data_out[260]
C1_acq_data_out[260] = OUTPUT(C1_acq_data_in_reg[260]);


--C1_acq_data_out[261] is sld_signaltap:auto_signaltap_0|acq_data_out[261]
C1_acq_data_out[261] = OUTPUT(C1_acq_data_in_reg[261]);


--C1_acq_data_out[262] is sld_signaltap:auto_signaltap_0|acq_data_out[262]
C1_acq_data_out[262] = OUTPUT(C1_acq_data_in_reg[262]);


--C1_acq_data_out[263] is sld_signaltap:auto_signaltap_0|acq_data_out[263]
C1_acq_data_out[263] = OUTPUT(C1_acq_data_in_reg[263]);


--C1_acq_data_out[264] is sld_signaltap:auto_signaltap_0|acq_data_out[264]
C1_acq_data_out[264] = OUTPUT(C1_acq_data_in_reg[264]);


--C1_acq_data_out[265] is sld_signaltap:auto_signaltap_0|acq_data_out[265]
C1_acq_data_out[265] = OUTPUT(C1_acq_data_in_reg[265]);


--C1_acq_data_out[266] is sld_signaltap:auto_signaltap_0|acq_data_out[266]
C1_acq_data_out[266] = OUTPUT(C1_acq_data_in_reg[266]);


--C1_acq_data_out[267] is sld_signaltap:auto_signaltap_0|acq_data_out[267]
C1_acq_data_out[267] = OUTPUT(C1_acq_data_in_reg[267]);


--C1_acq_data_out[268] is sld_signaltap:auto_signaltap_0|acq_data_out[268]
C1_acq_data_out[268] = OUTPUT(C1_acq_data_in_reg[268]);


--C1_acq_data_out[269] is sld_signaltap:auto_signaltap_0|acq_data_out[269]
C1_acq_data_out[269] = OUTPUT(C1_acq_data_in_reg[269]);


--C1_acq_data_out[270] is sld_signaltap:auto_signaltap_0|acq_data_out[270]
C1_acq_data_out[270] = OUTPUT(C1_acq_data_in_reg[270]);


--C1_acq_data_out[271] is sld_signaltap:auto_signaltap_0|acq_data_out[271]
C1_acq_data_out[271] = OUTPUT(C1_acq_data_in_reg[271]);


--C1_acq_data_out[272] is sld_signaltap:auto_signaltap_0|acq_data_out[272]
C1_acq_data_out[272] = OUTPUT(C1_acq_data_in_reg[272]);


--C1_acq_data_out[273] is sld_signaltap:auto_signaltap_0|acq_data_out[273]
C1_acq_data_out[273] = OUTPUT(C1_acq_data_in_reg[273]);


--C1_acq_data_out[274] is sld_signaltap:auto_signaltap_0|acq_data_out[274]
C1_acq_data_out[274] = OUTPUT(C1_acq_data_in_reg[274]);


--C1_acq_data_out[275] is sld_signaltap:auto_signaltap_0|acq_data_out[275]
C1_acq_data_out[275] = OUTPUT(C1_acq_data_in_reg[275]);


--C1_acq_data_out[276] is sld_signaltap:auto_signaltap_0|acq_data_out[276]
C1_acq_data_out[276] = OUTPUT(C1_acq_data_in_reg[276]);


--C1_acq_data_out[277] is sld_signaltap:auto_signaltap_0|acq_data_out[277]
C1_acq_data_out[277] = OUTPUT(C1_acq_data_in_reg[277]);


--C1_acq_data_out[278] is sld_signaltap:auto_signaltap_0|acq_data_out[278]
C1_acq_data_out[278] = OUTPUT(C1_acq_data_in_reg[278]);


--C1_acq_data_out[279] is sld_signaltap:auto_signaltap_0|acq_data_out[279]
C1_acq_data_out[279] = OUTPUT(C1_acq_data_in_reg[279]);


--C1_acq_data_out[280] is sld_signaltap:auto_signaltap_0|acq_data_out[280]
C1_acq_data_out[280] = OUTPUT(C1_acq_data_in_reg[280]);


--C1_acq_data_out[281] is sld_signaltap:auto_signaltap_0|acq_data_out[281]
C1_acq_data_out[281] = OUTPUT(C1_acq_data_in_reg[281]);


--C1_acq_data_out[282] is sld_signaltap:auto_signaltap_0|acq_data_out[282]
C1_acq_data_out[282] = OUTPUT(C1_acq_data_in_reg[282]);


--C1_acq_data_out[283] is sld_signaltap:auto_signaltap_0|acq_data_out[283]
C1_acq_data_out[283] = OUTPUT(C1_acq_data_in_reg[283]);


--C1_acq_data_out[284] is sld_signaltap:auto_signaltap_0|acq_data_out[284]
C1_acq_data_out[284] = OUTPUT(C1_acq_data_in_reg[284]);


--C1_acq_data_out[285] is sld_signaltap:auto_signaltap_0|acq_data_out[285]
C1_acq_data_out[285] = OUTPUT(C1_acq_data_in_reg[285]);


--C1_acq_data_out[286] is sld_signaltap:auto_signaltap_0|acq_data_out[286]
C1_acq_data_out[286] = OUTPUT(C1_acq_data_in_reg[286]);


--C1_acq_data_out[287] is sld_signaltap:auto_signaltap_0|acq_data_out[287]
C1_acq_data_out[287] = OUTPUT(C1_acq_data_in_reg[287]);


--C1_acq_data_out[288] is sld_signaltap:auto_signaltap_0|acq_data_out[288]
C1_acq_data_out[288] = OUTPUT(C1_acq_data_in_reg[288]);


--C1_acq_data_out[289] is sld_signaltap:auto_signaltap_0|acq_data_out[289]
C1_acq_data_out[289] = OUTPUT(C1_acq_data_in_reg[289]);


--C1_acq_data_out[290] is sld_signaltap:auto_signaltap_0|acq_data_out[290]
C1_acq_data_out[290] = OUTPUT(C1_acq_data_in_reg[290]);


--C1_acq_data_out[291] is sld_signaltap:auto_signaltap_0|acq_data_out[291]
C1_acq_data_out[291] = OUTPUT(C1_acq_data_in_reg[291]);


--C1_acq_data_out[292] is sld_signaltap:auto_signaltap_0|acq_data_out[292]
C1_acq_data_out[292] = OUTPUT(C1_acq_data_in_reg[292]);


--C1_acq_data_out[293] is sld_signaltap:auto_signaltap_0|acq_data_out[293]
C1_acq_data_out[293] = OUTPUT(C1_acq_data_in_reg[293]);


--C1_acq_data_out[294] is sld_signaltap:auto_signaltap_0|acq_data_out[294]
C1_acq_data_out[294] = OUTPUT(C1_acq_data_in_reg[294]);


--C1_acq_data_out[295] is sld_signaltap:auto_signaltap_0|acq_data_out[295]
C1_acq_data_out[295] = OUTPUT(C1_acq_data_in_reg[295]);


--C1_acq_data_out[296] is sld_signaltap:auto_signaltap_0|acq_data_out[296]
C1_acq_data_out[296] = OUTPUT(C1_acq_data_in_reg[296]);


--C1_acq_data_out[297] is sld_signaltap:auto_signaltap_0|acq_data_out[297]
C1_acq_data_out[297] = OUTPUT(C1_acq_data_in_reg[297]);


--C1_acq_data_out[298] is sld_signaltap:auto_signaltap_0|acq_data_out[298]
C1_acq_data_out[298] = OUTPUT(C1_acq_data_in_reg[298]);


--C1_acq_data_out[299] is sld_signaltap:auto_signaltap_0|acq_data_out[299]
C1_acq_data_out[299] = OUTPUT(C1_acq_data_in_reg[299]);


--C1_acq_data_out[300] is sld_signaltap:auto_signaltap_0|acq_data_out[300]
C1_acq_data_out[300] = OUTPUT(C1_acq_data_in_reg[300]);


--C1_acq_data_out[301] is sld_signaltap:auto_signaltap_0|acq_data_out[301]
C1_acq_data_out[301] = OUTPUT(C1_acq_data_in_reg[301]);


--C1_acq_data_out[302] is sld_signaltap:auto_signaltap_0|acq_data_out[302]
C1_acq_data_out[302] = OUTPUT(C1_acq_data_in_reg[302]);


--C1_acq_data_out[303] is sld_signaltap:auto_signaltap_0|acq_data_out[303]
C1_acq_data_out[303] = OUTPUT(C1_acq_data_in_reg[303]);


--C1_acq_data_out[304] is sld_signaltap:auto_signaltap_0|acq_data_out[304]
C1_acq_data_out[304] = OUTPUT(C1_acq_data_in_reg[304]);


--C1_acq_data_out[305] is sld_signaltap:auto_signaltap_0|acq_data_out[305]
C1_acq_data_out[305] = OUTPUT(C1_acq_data_in_reg[305]);


--C1_acq_data_out[306] is sld_signaltap:auto_signaltap_0|acq_data_out[306]
C1_acq_data_out[306] = OUTPUT(C1_acq_data_in_reg[306]);


--C1_acq_data_out[307] is sld_signaltap:auto_signaltap_0|acq_data_out[307]
C1_acq_data_out[307] = OUTPUT(C1_acq_data_in_reg[307]);


--C1_acq_data_out[308] is sld_signaltap:auto_signaltap_0|acq_data_out[308]
C1_acq_data_out[308] = OUTPUT(C1_acq_data_in_reg[308]);


--C1_acq_data_out[309] is sld_signaltap:auto_signaltap_0|acq_data_out[309]
C1_acq_data_out[309] = OUTPUT(C1_acq_data_in_reg[309]);


--C1_acq_data_out[310] is sld_signaltap:auto_signaltap_0|acq_data_out[310]
C1_acq_data_out[310] = OUTPUT(C1_acq_data_in_reg[310]);


--C1_acq_data_out[311] is sld_signaltap:auto_signaltap_0|acq_data_out[311]
C1_acq_data_out[311] = OUTPUT(C1_acq_data_in_reg[311]);


--C1_acq_data_out[312] is sld_signaltap:auto_signaltap_0|acq_data_out[312]
C1_acq_data_out[312] = OUTPUT(C1_acq_data_in_reg[312]);


--C1_acq_data_out[313] is sld_signaltap:auto_signaltap_0|acq_data_out[313]
C1_acq_data_out[313] = OUTPUT(C1_acq_data_in_reg[313]);


--C1_acq_data_out[314] is sld_signaltap:auto_signaltap_0|acq_data_out[314]
C1_acq_data_out[314] = OUTPUT(C1_acq_data_in_reg[314]);


--C1_acq_data_out[315] is sld_signaltap:auto_signaltap_0|acq_data_out[315]
C1_acq_data_out[315] = OUTPUT(C1_acq_data_in_reg[315]);


--C1_acq_data_out[316] is sld_signaltap:auto_signaltap_0|acq_data_out[316]
C1_acq_data_out[316] = OUTPUT(C1_acq_data_in_reg[316]);


--C1_acq_data_out[317] is sld_signaltap:auto_signaltap_0|acq_data_out[317]
C1_acq_data_out[317] = OUTPUT(C1_acq_data_in_reg[317]);


--C1_acq_data_out[318] is sld_signaltap:auto_signaltap_0|acq_data_out[318]
C1_acq_data_out[318] = OUTPUT(C1_acq_data_in_reg[318]);


--C1_acq_data_out[319] is sld_signaltap:auto_signaltap_0|acq_data_out[319]
C1_acq_data_out[319] = OUTPUT(C1_acq_data_in_reg[319]);


--C1_acq_data_out[320] is sld_signaltap:auto_signaltap_0|acq_data_out[320]
C1_acq_data_out[320] = OUTPUT(C1_acq_data_in_reg[320]);


--C1_acq_data_out[321] is sld_signaltap:auto_signaltap_0|acq_data_out[321]
C1_acq_data_out[321] = OUTPUT(C1_acq_data_in_reg[321]);


--C1_acq_data_out[322] is sld_signaltap:auto_signaltap_0|acq_data_out[322]
C1_acq_data_out[322] = OUTPUT(C1_acq_data_in_reg[322]);


--C1_acq_data_out[323] is sld_signaltap:auto_signaltap_0|acq_data_out[323]
C1_acq_data_out[323] = OUTPUT(C1_acq_data_in_reg[323]);


--C1_acq_data_out[324] is sld_signaltap:auto_signaltap_0|acq_data_out[324]
C1_acq_data_out[324] = OUTPUT(C1_acq_data_in_reg[324]);


--C1_acq_data_out[325] is sld_signaltap:auto_signaltap_0|acq_data_out[325]
C1_acq_data_out[325] = OUTPUT(C1_acq_data_in_reg[325]);


--C1_acq_data_out[326] is sld_signaltap:auto_signaltap_0|acq_data_out[326]
C1_acq_data_out[326] = OUTPUT(C1_acq_data_in_reg[326]);


--C1_acq_data_out[327] is sld_signaltap:auto_signaltap_0|acq_data_out[327]
C1_acq_data_out[327] = OUTPUT(C1_acq_data_in_reg[327]);


--C1_acq_data_out[328] is sld_signaltap:auto_signaltap_0|acq_data_out[328]
C1_acq_data_out[328] = OUTPUT(C1_acq_data_in_reg[328]);


--C1_acq_data_out[329] is sld_signaltap:auto_signaltap_0|acq_data_out[329]
C1_acq_data_out[329] = OUTPUT(C1_acq_data_in_reg[329]);


--C1_acq_data_out[330] is sld_signaltap:auto_signaltap_0|acq_data_out[330]
C1_acq_data_out[330] = OUTPUT(C1_acq_data_in_reg[330]);


--C1_acq_data_out[331] is sld_signaltap:auto_signaltap_0|acq_data_out[331]
C1_acq_data_out[331] = OUTPUT(C1_acq_data_in_reg[331]);


--C1_acq_data_out[332] is sld_signaltap:auto_signaltap_0|acq_data_out[332]
C1_acq_data_out[332] = OUTPUT(C1_acq_data_in_reg[332]);


--C1_acq_data_out[333] is sld_signaltap:auto_signaltap_0|acq_data_out[333]
C1_acq_data_out[333] = OUTPUT(C1_acq_data_in_reg[333]);


--C1_acq_data_out[334] is sld_signaltap:auto_signaltap_0|acq_data_out[334]
C1_acq_data_out[334] = OUTPUT(C1_acq_data_in_reg[334]);


--C1_acq_data_out[335] is sld_signaltap:auto_signaltap_0|acq_data_out[335]
C1_acq_data_out[335] = OUTPUT(C1_acq_data_in_reg[335]);


--C1_acq_data_out[336] is sld_signaltap:auto_signaltap_0|acq_data_out[336]
C1_acq_data_out[336] = OUTPUT(C1_acq_data_in_reg[336]);


--C1_acq_data_out[337] is sld_signaltap:auto_signaltap_0|acq_data_out[337]
C1_acq_data_out[337] = OUTPUT(C1_acq_data_in_reg[337]);


--C1_acq_data_out[338] is sld_signaltap:auto_signaltap_0|acq_data_out[338]
C1_acq_data_out[338] = OUTPUT(C1_acq_data_in_reg[338]);


--C1_acq_data_out[339] is sld_signaltap:auto_signaltap_0|acq_data_out[339]
C1_acq_data_out[339] = OUTPUT(C1_acq_data_in_reg[339]);


--C1_acq_data_out[340] is sld_signaltap:auto_signaltap_0|acq_data_out[340]
C1_acq_data_out[340] = OUTPUT(C1_acq_data_in_reg[340]);


--C1_acq_trigger_out[0] is sld_signaltap:auto_signaltap_0|acq_trigger_out[0]
C1_acq_trigger_out[0] = OUTPUT(C1_acq_trigger_in_reg[0]);


--C1_acq_trigger_out[1] is sld_signaltap:auto_signaltap_0|acq_trigger_out[1]
C1_acq_trigger_out[1] = OUTPUT(C1_acq_trigger_in_reg[1]);


--C1_trigger_out is sld_signaltap:auto_signaltap_0|trigger_out
C1_trigger_out = OUTPUT(W1_trigger_out_ff);


--C1_ir_in[0] is sld_signaltap:auto_signaltap_0|ir_in[0]
C1_ir_in[0] = INPUT();


--C1_ir_in[1] is sld_signaltap:auto_signaltap_0|ir_in[1]
C1_ir_in[1] = INPUT();


--C1_ir_in[2] is sld_signaltap:auto_signaltap_0|ir_in[2]
C1_ir_in[2] = INPUT();


--C1_ir_in[3] is sld_signaltap:auto_signaltap_0|ir_in[3]
C1_ir_in[3] = INPUT();


--C1_ir_in[4] is sld_signaltap:auto_signaltap_0|ir_in[4]
C1_ir_in[4] = INPUT();


--C1_ir_in[5] is sld_signaltap:auto_signaltap_0|ir_in[5]
C1_ir_in[5] = INPUT();


--C1_ir_in[6] is sld_signaltap:auto_signaltap_0|ir_in[6]
C1_ir_in[6] = INPUT();


--C1_ir_in[7] is sld_signaltap:auto_signaltap_0|ir_in[7]
C1_ir_in[7] = INPUT();


--C1_ir_in[8] is sld_signaltap:auto_signaltap_0|ir_in[8]
C1_ir_in[8] = INPUT();


--C1_ir_in[9] is sld_signaltap:auto_signaltap_0|ir_in[9]
C1_ir_in[9] = INPUT();


--CB8_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[0]
--register power-up is low

CB8_dffs[0] = AMPP_FUNCTION(C1_raw_tck, CB8L1, W1L1549);


--C1_jtag_state_cdr is sld_signaltap:auto_signaltap_0|jtag_state_cdr
C1_jtag_state_cdr = INPUT();


--C1_jtag_state_sdr is sld_signaltap:auto_signaltap_0|jtag_state_sdr
C1_jtag_state_sdr = INPUT();


--C1_usr1 is sld_signaltap:auto_signaltap_0|usr1
C1_usr1 = INPUT();


--C1_ena is sld_signaltap:auto_signaltap_0|ena
C1_ena = INPUT();


--W1L1549 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|status_shift_enable~0
W1L1549 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--W1_bypass_reg_out is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|bypass_reg_out
--register power-up is low

W1_bypass_reg_out = AMPP_FUNCTION(C1_raw_tck, W1L1511, !W1_reset_all);


--W1L1606 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~0
W1L1606 = AMPP_FUNCTION(!C1_ir_in[4], !C1_ir_in[5]);


--W1L1607 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~1
W1L1607 = AMPP_FUNCTION(!CB8_dffs[0], !W1L1549, !W1_bypass_reg_out, !W1L1606);


--Q1_WORD_SR[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[0]
--register power-up is low

Q1_WORD_SR[0] = AMPP_FUNCTION(C1_raw_tck, Q1L21, Q1L18);


--W1L1608 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~2
W1L1608 = AMPP_FUNCTION(!C1_ir_in[4], !C1_ir_in[5], !Q1_WORD_SR[0], !CB6_dffs[0]);


--W1L1609 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~3
W1L1609 = AMPP_FUNCTION(!C1_ir_in[3], !C1_ir_in[7], !C1_ir_in[8]);


--CB4_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[0]
--register power-up is low

CB4_dffs[0] = AMPP_FUNCTION(C1_raw_tck, CB4_dffs[1], !W1_reset_all, W1_trigger_setup_ena);


--W1L1610 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~4
W1L1610 = AMPP_FUNCTION(!C1_ir_in[3], !C1_ir_in[7], !C1_ir_in[8], !W1_tdo_crc_len_reg[0], !CB4_dffs[0], !CB7_dffs[0]);


--W1L1611 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~5
W1L1611 = AMPP_FUNCTION(!C1_ir_in[9], !W1_tdo_crc_val_shift_reg[0], !W1L1607, !W1L1608, !W1L1609, !W1L1610);


--C1_acq_data_in_reg[0] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[0]
--register power-up is low

C1_acq_data_in_reg[0] = DFFEAS(C1_acq_data_in[0], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[1] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[1]
--register power-up is low

C1_acq_data_in_reg[1] = DFFEAS(C1_acq_data_in[1], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[2] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[2]
--register power-up is low

C1_acq_data_in_reg[2] = DFFEAS(C1_acq_data_in[2], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[3] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[3]
--register power-up is low

C1_acq_data_in_reg[3] = DFFEAS(C1_acq_data_in[3], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[4] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[4]
--register power-up is low

C1_acq_data_in_reg[4] = DFFEAS(C1_acq_data_in[4], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[5] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[5]
--register power-up is low

C1_acq_data_in_reg[5] = DFFEAS(C1_acq_data_in[5], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[6] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[6]
--register power-up is low

C1_acq_data_in_reg[6] = DFFEAS(C1_acq_data_in[6], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[7] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[7]
--register power-up is low

C1_acq_data_in_reg[7] = DFFEAS(C1_acq_data_in[7], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[8] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[8]
--register power-up is low

C1_acq_data_in_reg[8] = DFFEAS(C1_acq_data_in[8], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[9] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[9]
--register power-up is low

C1_acq_data_in_reg[9] = DFFEAS(C1_acq_data_in[9], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[10] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[10]
--register power-up is low

C1_acq_data_in_reg[10] = DFFEAS(C1_acq_data_in[10], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[11] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[11]
--register power-up is low

C1_acq_data_in_reg[11] = DFFEAS(C1_acq_data_in[11], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[12] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[12]
--register power-up is low

C1_acq_data_in_reg[12] = DFFEAS(C1_acq_data_in[12], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[13] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[13]
--register power-up is low

C1_acq_data_in_reg[13] = DFFEAS(C1_acq_data_in[13], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[14] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[14]
--register power-up is low

C1_acq_data_in_reg[14] = DFFEAS(C1_acq_data_in[14], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[15] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[15]
--register power-up is low

C1_acq_data_in_reg[15] = DFFEAS(C1_acq_data_in[15], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[16] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[16]
--register power-up is low

C1_acq_data_in_reg[16] = DFFEAS(C1_acq_data_in[16], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[17] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[17]
--register power-up is low

C1_acq_data_in_reg[17] = DFFEAS(C1_acq_data_in[17], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[18] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[18]
--register power-up is low

C1_acq_data_in_reg[18] = DFFEAS(C1_acq_data_in[18], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[19] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[19]
--register power-up is low

C1_acq_data_in_reg[19] = DFFEAS(C1_acq_data_in[19], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[20] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[20]
--register power-up is low

C1_acq_data_in_reg[20] = DFFEAS(C1_acq_data_in[20], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[21] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[21]
--register power-up is low

C1_acq_data_in_reg[21] = DFFEAS(C1_acq_data_in[21], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[22] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[22]
--register power-up is low

C1_acq_data_in_reg[22] = DFFEAS(C1_acq_data_in[22], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[23] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[23]
--register power-up is low

C1_acq_data_in_reg[23] = DFFEAS(C1_acq_data_in[23], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[24] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[24]
--register power-up is low

C1_acq_data_in_reg[24] = DFFEAS(C1_acq_data_in[24], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[25] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[25]
--register power-up is low

C1_acq_data_in_reg[25] = DFFEAS(C1_acq_data_in[25], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[26] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[26]
--register power-up is low

C1_acq_data_in_reg[26] = DFFEAS(C1_acq_data_in[26], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[27] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[27]
--register power-up is low

C1_acq_data_in_reg[27] = DFFEAS(C1_acq_data_in[27], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[28] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[28]
--register power-up is low

C1_acq_data_in_reg[28] = DFFEAS(C1_acq_data_in[28], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[29] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[29]
--register power-up is low

C1_acq_data_in_reg[29] = DFFEAS(C1_acq_data_in[29], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[30] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[30]
--register power-up is low

C1_acq_data_in_reg[30] = DFFEAS(C1_acq_data_in[30], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[31] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[31]
--register power-up is low

C1_acq_data_in_reg[31] = DFFEAS(C1_acq_data_in[31], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[32] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[32]
--register power-up is low

C1_acq_data_in_reg[32] = DFFEAS(C1_acq_data_in[32], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[33] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[33]
--register power-up is low

C1_acq_data_in_reg[33] = DFFEAS(C1_acq_data_in[33], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[34] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[34]
--register power-up is low

C1_acq_data_in_reg[34] = DFFEAS(C1_acq_data_in[34], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[35] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[35]
--register power-up is low

C1_acq_data_in_reg[35] = DFFEAS(C1_acq_data_in[35], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[36] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[36]
--register power-up is low

C1_acq_data_in_reg[36] = DFFEAS(C1_acq_data_in[36], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[37] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[37]
--register power-up is low

C1_acq_data_in_reg[37] = DFFEAS(C1_acq_data_in[37], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[38] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[38]
--register power-up is low

C1_acq_data_in_reg[38] = DFFEAS(C1_acq_data_in[38], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[39] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[39]
--register power-up is low

C1_acq_data_in_reg[39] = DFFEAS(C1_acq_data_in[39], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[40] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[40]
--register power-up is low

C1_acq_data_in_reg[40] = DFFEAS(C1_acq_data_in[40], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[41] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[41]
--register power-up is low

C1_acq_data_in_reg[41] = DFFEAS(C1_acq_data_in[41], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[42] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[42]
--register power-up is low

C1_acq_data_in_reg[42] = DFFEAS(C1_acq_data_in[42], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[43] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[43]
--register power-up is low

C1_acq_data_in_reg[43] = DFFEAS(C1_acq_data_in[43], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[44] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[44]
--register power-up is low

C1_acq_data_in_reg[44] = DFFEAS(C1_acq_data_in[44], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[45] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[45]
--register power-up is low

C1_acq_data_in_reg[45] = DFFEAS(C1_acq_data_in[45], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[46] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[46]
--register power-up is low

C1_acq_data_in_reg[46] = DFFEAS(C1_acq_data_in[46], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[47] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[47]
--register power-up is low

C1_acq_data_in_reg[47] = DFFEAS(C1_acq_data_in[47], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[48] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[48]
--register power-up is low

C1_acq_data_in_reg[48] = DFFEAS(C1_acq_data_in[48], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[49] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[49]
--register power-up is low

C1_acq_data_in_reg[49] = DFFEAS(C1_acq_data_in[49], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[50] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[50]
--register power-up is low

C1_acq_data_in_reg[50] = DFFEAS(C1_acq_data_in[50], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[51] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[51]
--register power-up is low

C1_acq_data_in_reg[51] = DFFEAS(C1_acq_data_in[51], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[52] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[52]
--register power-up is low

C1_acq_data_in_reg[52] = DFFEAS(C1_acq_data_in[52], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[53] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[53]
--register power-up is low

C1_acq_data_in_reg[53] = DFFEAS(C1_acq_data_in[53], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[54] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[54]
--register power-up is low

C1_acq_data_in_reg[54] = DFFEAS(C1_acq_data_in[54], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[55] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[55]
--register power-up is low

C1_acq_data_in_reg[55] = DFFEAS(C1_acq_data_in[55], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[56] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[56]
--register power-up is low

C1_acq_data_in_reg[56] = DFFEAS(C1_acq_data_in[56], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[57] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[57]
--register power-up is low

C1_acq_data_in_reg[57] = DFFEAS(C1_acq_data_in[57], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[58] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[58]
--register power-up is low

C1_acq_data_in_reg[58] = DFFEAS(C1_acq_data_in[58], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[59] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[59]
--register power-up is low

C1_acq_data_in_reg[59] = DFFEAS(C1_acq_data_in[59], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[60] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[60]
--register power-up is low

C1_acq_data_in_reg[60] = DFFEAS(C1_acq_data_in[60], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[61] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[61]
--register power-up is low

C1_acq_data_in_reg[61] = DFFEAS(C1_acq_data_in[61], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[62] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[62]
--register power-up is low

C1_acq_data_in_reg[62] = DFFEAS(C1_acq_data_in[62], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[63] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[63]
--register power-up is low

C1_acq_data_in_reg[63] = DFFEAS(C1_acq_data_in[63], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[64] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[64]
--register power-up is low

C1_acq_data_in_reg[64] = DFFEAS(C1_acq_data_in[64], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[65] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[65]
--register power-up is low

C1_acq_data_in_reg[65] = DFFEAS(C1_acq_data_in[65], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[66] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[66]
--register power-up is low

C1_acq_data_in_reg[66] = DFFEAS(C1_acq_data_in[66], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[67] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[67]
--register power-up is low

C1_acq_data_in_reg[67] = DFFEAS(C1_acq_data_in[67], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[68] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[68]
--register power-up is low

C1_acq_data_in_reg[68] = DFFEAS(C1_acq_data_in[68], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[69] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[69]
--register power-up is low

C1_acq_data_in_reg[69] = DFFEAS(C1_acq_data_in[69], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[70] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[70]
--register power-up is low

C1_acq_data_in_reg[70] = DFFEAS(C1_acq_data_in[70], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[71] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[71]
--register power-up is low

C1_acq_data_in_reg[71] = DFFEAS(C1_acq_data_in[71], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[72] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[72]
--register power-up is low

C1_acq_data_in_reg[72] = DFFEAS(C1_acq_data_in[72], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[73] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[73]
--register power-up is low

C1_acq_data_in_reg[73] = DFFEAS(C1_acq_data_in[73], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[74] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[74]
--register power-up is low

C1_acq_data_in_reg[74] = DFFEAS(C1_acq_data_in[74], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[75] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[75]
--register power-up is low

C1_acq_data_in_reg[75] = DFFEAS(C1_acq_data_in[75], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[76] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[76]
--register power-up is low

C1_acq_data_in_reg[76] = DFFEAS(C1_acq_data_in[76], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[77] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[77]
--register power-up is low

C1_acq_data_in_reg[77] = DFFEAS(C1_acq_data_in[77], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[78] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[78]
--register power-up is low

C1_acq_data_in_reg[78] = DFFEAS(C1_acq_data_in[78], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[79] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[79]
--register power-up is low

C1_acq_data_in_reg[79] = DFFEAS(C1_acq_data_in[79], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[80] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[80]
--register power-up is low

C1_acq_data_in_reg[80] = DFFEAS(C1_acq_data_in[80], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[81] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[81]
--register power-up is low

C1_acq_data_in_reg[81] = DFFEAS(C1_acq_data_in[81], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[82] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[82]
--register power-up is low

C1_acq_data_in_reg[82] = DFFEAS(C1_acq_data_in[82], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[83] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[83]
--register power-up is low

C1_acq_data_in_reg[83] = DFFEAS(C1_acq_data_in[83], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[84] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[84]
--register power-up is low

C1_acq_data_in_reg[84] = DFFEAS(C1_acq_data_in[84], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[85] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[85]
--register power-up is low

C1_acq_data_in_reg[85] = DFFEAS(C1_acq_data_in[85], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[86] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[86]
--register power-up is low

C1_acq_data_in_reg[86] = DFFEAS(C1_acq_data_in[86], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[87] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[87]
--register power-up is low

C1_acq_data_in_reg[87] = DFFEAS(C1_acq_data_in[87], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[88] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[88]
--register power-up is low

C1_acq_data_in_reg[88] = DFFEAS(C1_acq_data_in[88], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[89] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[89]
--register power-up is low

C1_acq_data_in_reg[89] = DFFEAS(C1_acq_data_in[89], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[90] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[90]
--register power-up is low

C1_acq_data_in_reg[90] = DFFEAS(C1_acq_data_in[90], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[91] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[91]
--register power-up is low

C1_acq_data_in_reg[91] = DFFEAS(C1_acq_data_in[91], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[92] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[92]
--register power-up is low

C1_acq_data_in_reg[92] = DFFEAS(C1_acq_data_in[92], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[93] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[93]
--register power-up is low

C1_acq_data_in_reg[93] = DFFEAS(C1_acq_data_in[93], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[94] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[94]
--register power-up is low

C1_acq_data_in_reg[94] = DFFEAS(C1_acq_data_in[94], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[95] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[95]
--register power-up is low

C1_acq_data_in_reg[95] = DFFEAS(C1_acq_data_in[95], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[96] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[96]
--register power-up is low

C1_acq_data_in_reg[96] = DFFEAS(C1_acq_data_in[96], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[97] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[97]
--register power-up is low

C1_acq_data_in_reg[97] = DFFEAS(C1_acq_data_in[97], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[98] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[98]
--register power-up is low

C1_acq_data_in_reg[98] = DFFEAS(C1_acq_data_in[98], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[99] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[99]
--register power-up is low

C1_acq_data_in_reg[99] = DFFEAS(C1_acq_data_in[99], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[100] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[100]
--register power-up is low

C1_acq_data_in_reg[100] = DFFEAS(C1_acq_data_in[100], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[101] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[101]
--register power-up is low

C1_acq_data_in_reg[101] = DFFEAS(C1_acq_data_in[101], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[102] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[102]
--register power-up is low

C1_acq_data_in_reg[102] = DFFEAS(C1_acq_data_in[102], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[103] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[103]
--register power-up is low

C1_acq_data_in_reg[103] = DFFEAS(C1_acq_data_in[103], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[104] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[104]
--register power-up is low

C1_acq_data_in_reg[104] = DFFEAS(C1_acq_data_in[104], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[105] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[105]
--register power-up is low

C1_acq_data_in_reg[105] = DFFEAS(C1_acq_data_in[105], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[106] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[106]
--register power-up is low

C1_acq_data_in_reg[106] = DFFEAS(C1_acq_data_in[106], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[107] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[107]
--register power-up is low

C1_acq_data_in_reg[107] = DFFEAS(C1_acq_data_in[107], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[108] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[108]
--register power-up is low

C1_acq_data_in_reg[108] = DFFEAS(C1_acq_data_in[108], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[109] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[109]
--register power-up is low

C1_acq_data_in_reg[109] = DFFEAS(C1_acq_data_in[109], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[110] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[110]
--register power-up is low

C1_acq_data_in_reg[110] = DFFEAS(C1_acq_data_in[110], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[111] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[111]
--register power-up is low

C1_acq_data_in_reg[111] = DFFEAS(C1_acq_data_in[111], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[112] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[112]
--register power-up is low

C1_acq_data_in_reg[112] = DFFEAS(C1_acq_data_in[112], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[113] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[113]
--register power-up is low

C1_acq_data_in_reg[113] = DFFEAS(C1_acq_data_in[113], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[114] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[114]
--register power-up is low

C1_acq_data_in_reg[114] = DFFEAS(C1_acq_data_in[114], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[115] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[115]
--register power-up is low

C1_acq_data_in_reg[115] = DFFEAS(C1_acq_data_in[115], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[116] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[116]
--register power-up is low

C1_acq_data_in_reg[116] = DFFEAS(C1_acq_data_in[116], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[117] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[117]
--register power-up is low

C1_acq_data_in_reg[117] = DFFEAS(C1_acq_data_in[117], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[118] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[118]
--register power-up is low

C1_acq_data_in_reg[118] = DFFEAS(C1_acq_data_in[118], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[119] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[119]
--register power-up is low

C1_acq_data_in_reg[119] = DFFEAS(C1_acq_data_in[119], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[120] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[120]
--register power-up is low

C1_acq_data_in_reg[120] = DFFEAS(C1_acq_data_in[120], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[121] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[121]
--register power-up is low

C1_acq_data_in_reg[121] = DFFEAS(C1_acq_data_in[121], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[122] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[122]
--register power-up is low

C1_acq_data_in_reg[122] = DFFEAS(C1_acq_data_in[122], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[123] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[123]
--register power-up is low

C1_acq_data_in_reg[123] = DFFEAS(C1_acq_data_in[123], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[124] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[124]
--register power-up is low

C1_acq_data_in_reg[124] = DFFEAS(C1_acq_data_in[124], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[125] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[125]
--register power-up is low

C1_acq_data_in_reg[125] = DFFEAS(C1_acq_data_in[125], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[126] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[126]
--register power-up is low

C1_acq_data_in_reg[126] = DFFEAS(C1_acq_data_in[126], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[127] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[127]
--register power-up is low

C1_acq_data_in_reg[127] = DFFEAS(C1_acq_data_in[127], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[128] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[128]
--register power-up is low

C1_acq_data_in_reg[128] = DFFEAS(C1_acq_data_in[128], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[129] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[129]
--register power-up is low

C1_acq_data_in_reg[129] = DFFEAS(C1_acq_data_in[129], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[130] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[130]
--register power-up is low

C1_acq_data_in_reg[130] = DFFEAS(C1_acq_data_in[130], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[131] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[131]
--register power-up is low

C1_acq_data_in_reg[131] = DFFEAS(C1_acq_data_in[131], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[132] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[132]
--register power-up is low

C1_acq_data_in_reg[132] = DFFEAS(C1_acq_data_in[132], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[133] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[133]
--register power-up is low

C1_acq_data_in_reg[133] = DFFEAS(C1_acq_data_in[133], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[134] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[134]
--register power-up is low

C1_acq_data_in_reg[134] = DFFEAS(C1_acq_data_in[134], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[135] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[135]
--register power-up is low

C1_acq_data_in_reg[135] = DFFEAS(C1_acq_data_in[135], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[136] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[136]
--register power-up is low

C1_acq_data_in_reg[136] = DFFEAS(C1_acq_data_in[136], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[137] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[137]
--register power-up is low

C1_acq_data_in_reg[137] = DFFEAS(C1_acq_data_in[137], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[138] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[138]
--register power-up is low

C1_acq_data_in_reg[138] = DFFEAS(C1_acq_data_in[138], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[139] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[139]
--register power-up is low

C1_acq_data_in_reg[139] = DFFEAS(C1_acq_data_in[139], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[140] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[140]
--register power-up is low

C1_acq_data_in_reg[140] = DFFEAS(C1_acq_data_in[140], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[141] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[141]
--register power-up is low

C1_acq_data_in_reg[141] = DFFEAS(C1_acq_data_in[141], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[142] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[142]
--register power-up is low

C1_acq_data_in_reg[142] = DFFEAS(C1_acq_data_in[142], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[143] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[143]
--register power-up is low

C1_acq_data_in_reg[143] = DFFEAS(C1_acq_data_in[143], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[144] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[144]
--register power-up is low

C1_acq_data_in_reg[144] = DFFEAS(C1_acq_data_in[144], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[145] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[145]
--register power-up is low

C1_acq_data_in_reg[145] = DFFEAS(C1_acq_data_in[145], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[146] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[146]
--register power-up is low

C1_acq_data_in_reg[146] = DFFEAS(C1_acq_data_in[146], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[147] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[147]
--register power-up is low

C1_acq_data_in_reg[147] = DFFEAS(C1_acq_data_in[147], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[148] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[148]
--register power-up is low

C1_acq_data_in_reg[148] = DFFEAS(C1_acq_data_in[148], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[149] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[149]
--register power-up is low

C1_acq_data_in_reg[149] = DFFEAS(C1_acq_data_in[149], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[150] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[150]
--register power-up is low

C1_acq_data_in_reg[150] = DFFEAS(C1_acq_data_in[150], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[151] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[151]
--register power-up is low

C1_acq_data_in_reg[151] = DFFEAS(C1_acq_data_in[151], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[152] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[152]
--register power-up is low

C1_acq_data_in_reg[152] = DFFEAS(C1_acq_data_in[152], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[153] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[153]
--register power-up is low

C1_acq_data_in_reg[153] = DFFEAS(C1_acq_data_in[153], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[154] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[154]
--register power-up is low

C1_acq_data_in_reg[154] = DFFEAS(C1_acq_data_in[154], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[155] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[155]
--register power-up is low

C1_acq_data_in_reg[155] = DFFEAS(C1_acq_data_in[155], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[156] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[156]
--register power-up is low

C1_acq_data_in_reg[156] = DFFEAS(C1_acq_data_in[156], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[157] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[157]
--register power-up is low

C1_acq_data_in_reg[157] = DFFEAS(C1_acq_data_in[157], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[158] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[158]
--register power-up is low

C1_acq_data_in_reg[158] = DFFEAS(C1_acq_data_in[158], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[159] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[159]
--register power-up is low

C1_acq_data_in_reg[159] = DFFEAS(C1_acq_data_in[159], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[160] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[160]
--register power-up is low

C1_acq_data_in_reg[160] = DFFEAS(C1_acq_data_in[160], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[161] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[161]
--register power-up is low

C1_acq_data_in_reg[161] = DFFEAS(C1_acq_data_in[161], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[162] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[162]
--register power-up is low

C1_acq_data_in_reg[162] = DFFEAS(C1_acq_data_in[162], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[163] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[163]
--register power-up is low

C1_acq_data_in_reg[163] = DFFEAS(C1_acq_data_in[163], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[164] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[164]
--register power-up is low

C1_acq_data_in_reg[164] = DFFEAS(C1_acq_data_in[164], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[165] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[165]
--register power-up is low

C1_acq_data_in_reg[165] = DFFEAS(C1_acq_data_in[165], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[166] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[166]
--register power-up is low

C1_acq_data_in_reg[166] = DFFEAS(C1_acq_data_in[166], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[167] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[167]
--register power-up is low

C1_acq_data_in_reg[167] = DFFEAS(C1_acq_data_in[167], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[168] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[168]
--register power-up is low

C1_acq_data_in_reg[168] = DFFEAS(C1_acq_data_in[168], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[169] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[169]
--register power-up is low

C1_acq_data_in_reg[169] = DFFEAS(C1_acq_data_in[169], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[170] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[170]
--register power-up is low

C1_acq_data_in_reg[170] = DFFEAS(C1_acq_data_in[170], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[171] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[171]
--register power-up is low

C1_acq_data_in_reg[171] = DFFEAS(C1_acq_data_in[171], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[172] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[172]
--register power-up is low

C1_acq_data_in_reg[172] = DFFEAS(C1_acq_data_in[172], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[173] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[173]
--register power-up is low

C1_acq_data_in_reg[173] = DFFEAS(C1_acq_data_in[173], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[174] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[174]
--register power-up is low

C1_acq_data_in_reg[174] = DFFEAS(C1_acq_data_in[174], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[175] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[175]
--register power-up is low

C1_acq_data_in_reg[175] = DFFEAS(C1_acq_data_in[175], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[176] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[176]
--register power-up is low

C1_acq_data_in_reg[176] = DFFEAS(C1_acq_data_in[176], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[177] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[177]
--register power-up is low

C1_acq_data_in_reg[177] = DFFEAS(C1_acq_data_in[177], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[178] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[178]
--register power-up is low

C1_acq_data_in_reg[178] = DFFEAS(C1_acq_data_in[178], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[179] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[179]
--register power-up is low

C1_acq_data_in_reg[179] = DFFEAS(C1_acq_data_in[179], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[180] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[180]
--register power-up is low

C1_acq_data_in_reg[180] = DFFEAS(C1_acq_data_in[180], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[181] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[181]
--register power-up is low

C1_acq_data_in_reg[181] = DFFEAS(C1_acq_data_in[181], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[182] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[182]
--register power-up is low

C1_acq_data_in_reg[182] = DFFEAS(C1_acq_data_in[182], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[183] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[183]
--register power-up is low

C1_acq_data_in_reg[183] = DFFEAS(C1_acq_data_in[183], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[184] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[184]
--register power-up is low

C1_acq_data_in_reg[184] = DFFEAS(C1_acq_data_in[184], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[185] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[185]
--register power-up is low

C1_acq_data_in_reg[185] = DFFEAS(C1_acq_data_in[185], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[186] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[186]
--register power-up is low

C1_acq_data_in_reg[186] = DFFEAS(C1_acq_data_in[186], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[187] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[187]
--register power-up is low

C1_acq_data_in_reg[187] = DFFEAS(C1_acq_data_in[187], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[188] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[188]
--register power-up is low

C1_acq_data_in_reg[188] = DFFEAS(C1_acq_data_in[188], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[189] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[189]
--register power-up is low

C1_acq_data_in_reg[189] = DFFEAS(C1_acq_data_in[189], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[190] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[190]
--register power-up is low

C1_acq_data_in_reg[190] = DFFEAS(C1_acq_data_in[190], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[191] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[191]
--register power-up is low

C1_acq_data_in_reg[191] = DFFEAS(C1_acq_data_in[191], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[192] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[192]
--register power-up is low

C1_acq_data_in_reg[192] = DFFEAS(C1_acq_data_in[192], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[193] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[193]
--register power-up is low

C1_acq_data_in_reg[193] = DFFEAS(C1_acq_data_in[193], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[194] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[194]
--register power-up is low

C1_acq_data_in_reg[194] = DFFEAS(C1_acq_data_in[194], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[195] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[195]
--register power-up is low

C1_acq_data_in_reg[195] = DFFEAS(C1_acq_data_in[195], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[196] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[196]
--register power-up is low

C1_acq_data_in_reg[196] = DFFEAS(C1_acq_data_in[196], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[197] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[197]
--register power-up is low

C1_acq_data_in_reg[197] = DFFEAS(C1_acq_data_in[197], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[198] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[198]
--register power-up is low

C1_acq_data_in_reg[198] = DFFEAS(C1_acq_data_in[198], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[199] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[199]
--register power-up is low

C1_acq_data_in_reg[199] = DFFEAS(C1_acq_data_in[199], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[200] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[200]
--register power-up is low

C1_acq_data_in_reg[200] = DFFEAS(C1_acq_data_in[200], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[201] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[201]
--register power-up is low

C1_acq_data_in_reg[201] = DFFEAS(C1_acq_data_in[201], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[202] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[202]
--register power-up is low

C1_acq_data_in_reg[202] = DFFEAS(C1_acq_data_in[202], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[203] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[203]
--register power-up is low

C1_acq_data_in_reg[203] = DFFEAS(C1_acq_data_in[203], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[204] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[204]
--register power-up is low

C1_acq_data_in_reg[204] = DFFEAS(C1_acq_data_in[204], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[205] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[205]
--register power-up is low

C1_acq_data_in_reg[205] = DFFEAS(C1_acq_data_in[205], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[206] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[206]
--register power-up is low

C1_acq_data_in_reg[206] = DFFEAS(C1_acq_data_in[206], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[207] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[207]
--register power-up is low

C1_acq_data_in_reg[207] = DFFEAS(C1_acq_data_in[207], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[208] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[208]
--register power-up is low

C1_acq_data_in_reg[208] = DFFEAS(C1_acq_data_in[208], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[209] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[209]
--register power-up is low

C1_acq_data_in_reg[209] = DFFEAS(C1_acq_data_in[209], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[210] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[210]
--register power-up is low

C1_acq_data_in_reg[210] = DFFEAS(C1_acq_data_in[210], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[211] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[211]
--register power-up is low

C1_acq_data_in_reg[211] = DFFEAS(C1_acq_data_in[211], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[212] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[212]
--register power-up is low

C1_acq_data_in_reg[212] = DFFEAS(C1_acq_data_in[212], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[213] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[213]
--register power-up is low

C1_acq_data_in_reg[213] = DFFEAS(C1_acq_data_in[213], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[214] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[214]
--register power-up is low

C1_acq_data_in_reg[214] = DFFEAS(C1_acq_data_in[214], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[215] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[215]
--register power-up is low

C1_acq_data_in_reg[215] = DFFEAS(C1_acq_data_in[215], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[216] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[216]
--register power-up is low

C1_acq_data_in_reg[216] = DFFEAS(C1_acq_data_in[216], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[217] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[217]
--register power-up is low

C1_acq_data_in_reg[217] = DFFEAS(C1_acq_data_in[217], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[218] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[218]
--register power-up is low

C1_acq_data_in_reg[218] = DFFEAS(C1_acq_data_in[218], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[219] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[219]
--register power-up is low

C1_acq_data_in_reg[219] = DFFEAS(C1_acq_data_in[219], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[220] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[220]
--register power-up is low

C1_acq_data_in_reg[220] = DFFEAS(C1_acq_data_in[220], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[221] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[221]
--register power-up is low

C1_acq_data_in_reg[221] = DFFEAS(C1_acq_data_in[221], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[222] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[222]
--register power-up is low

C1_acq_data_in_reg[222] = DFFEAS(C1_acq_data_in[222], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[223] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[223]
--register power-up is low

C1_acq_data_in_reg[223] = DFFEAS(C1_acq_data_in[223], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[224] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[224]
--register power-up is low

C1_acq_data_in_reg[224] = DFFEAS(C1_acq_data_in[224], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[225] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[225]
--register power-up is low

C1_acq_data_in_reg[225] = DFFEAS(C1_acq_data_in[225], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[226] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[226]
--register power-up is low

C1_acq_data_in_reg[226] = DFFEAS(C1_acq_data_in[226], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[227] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[227]
--register power-up is low

C1_acq_data_in_reg[227] = DFFEAS(C1_acq_data_in[227], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[228] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[228]
--register power-up is low

C1_acq_data_in_reg[228] = DFFEAS(C1_acq_data_in[228], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[229] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[229]
--register power-up is low

C1_acq_data_in_reg[229] = DFFEAS(C1_acq_data_in[229], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[230] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[230]
--register power-up is low

C1_acq_data_in_reg[230] = DFFEAS(C1_acq_data_in[230], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[231] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[231]
--register power-up is low

C1_acq_data_in_reg[231] = DFFEAS(C1_acq_data_in[231], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[232] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[232]
--register power-up is low

C1_acq_data_in_reg[232] = DFFEAS(C1_acq_data_in[232], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[233] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[233]
--register power-up is low

C1_acq_data_in_reg[233] = DFFEAS(C1_acq_data_in[233], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[234] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[234]
--register power-up is low

C1_acq_data_in_reg[234] = DFFEAS(C1_acq_data_in[234], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[235] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[235]
--register power-up is low

C1_acq_data_in_reg[235] = DFFEAS(C1_acq_data_in[235], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[236] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[236]
--register power-up is low

C1_acq_data_in_reg[236] = DFFEAS(C1_acq_data_in[236], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[237] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[237]
--register power-up is low

C1_acq_data_in_reg[237] = DFFEAS(C1_acq_data_in[237], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[238] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[238]
--register power-up is low

C1_acq_data_in_reg[238] = DFFEAS(C1_acq_data_in[238], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[239] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[239]
--register power-up is low

C1_acq_data_in_reg[239] = DFFEAS(C1_acq_data_in[239], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[240] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[240]
--register power-up is low

C1_acq_data_in_reg[240] = DFFEAS(C1_acq_data_in[240], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[241] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[241]
--register power-up is low

C1_acq_data_in_reg[241] = DFFEAS(C1_acq_data_in[241], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[242] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[242]
--register power-up is low

C1_acq_data_in_reg[242] = DFFEAS(C1_acq_data_in[242], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[243] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[243]
--register power-up is low

C1_acq_data_in_reg[243] = DFFEAS(C1_acq_data_in[243], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[244] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[244]
--register power-up is low

C1_acq_data_in_reg[244] = DFFEAS(C1_acq_data_in[244], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[245] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[245]
--register power-up is low

C1_acq_data_in_reg[245] = DFFEAS(C1_acq_data_in[245], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[246] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[246]
--register power-up is low

C1_acq_data_in_reg[246] = DFFEAS(C1_acq_data_in[246], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[247] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[247]
--register power-up is low

C1_acq_data_in_reg[247] = DFFEAS(C1_acq_data_in[247], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[248] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[248]
--register power-up is low

C1_acq_data_in_reg[248] = DFFEAS(C1_acq_data_in[248], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[249] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[249]
--register power-up is low

C1_acq_data_in_reg[249] = DFFEAS(C1_acq_data_in[249], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[250] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[250]
--register power-up is low

C1_acq_data_in_reg[250] = DFFEAS(C1_acq_data_in[250], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[251] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[251]
--register power-up is low

C1_acq_data_in_reg[251] = DFFEAS(C1_acq_data_in[251], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[252] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[252]
--register power-up is low

C1_acq_data_in_reg[252] = DFFEAS(C1_acq_data_in[252], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[253] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[253]
--register power-up is low

C1_acq_data_in_reg[253] = DFFEAS(C1_acq_data_in[253], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[254] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[254]
--register power-up is low

C1_acq_data_in_reg[254] = DFFEAS(C1_acq_data_in[254], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[255] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[255]
--register power-up is low

C1_acq_data_in_reg[255] = DFFEAS(C1_acq_data_in[255], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[256] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[256]
--register power-up is low

C1_acq_data_in_reg[256] = DFFEAS(C1_acq_data_in[256], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[257] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[257]
--register power-up is low

C1_acq_data_in_reg[257] = DFFEAS(C1_acq_data_in[257], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[258] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[258]
--register power-up is low

C1_acq_data_in_reg[258] = DFFEAS(C1_acq_data_in[258], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[259] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[259]
--register power-up is low

C1_acq_data_in_reg[259] = DFFEAS(C1_acq_data_in[259], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[260] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[260]
--register power-up is low

C1_acq_data_in_reg[260] = DFFEAS(C1_acq_data_in[260], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[261] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[261]
--register power-up is low

C1_acq_data_in_reg[261] = DFFEAS(C1_acq_data_in[261], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[262] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[262]
--register power-up is low

C1_acq_data_in_reg[262] = DFFEAS(C1_acq_data_in[262], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[263] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[263]
--register power-up is low

C1_acq_data_in_reg[263] = DFFEAS(C1_acq_data_in[263], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[264] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[264]
--register power-up is low

C1_acq_data_in_reg[264] = DFFEAS(C1_acq_data_in[264], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[265] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[265]
--register power-up is low

C1_acq_data_in_reg[265] = DFFEAS(C1_acq_data_in[265], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[266] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[266]
--register power-up is low

C1_acq_data_in_reg[266] = DFFEAS(C1_acq_data_in[266], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[267] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[267]
--register power-up is low

C1_acq_data_in_reg[267] = DFFEAS(C1_acq_data_in[267], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[268] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[268]
--register power-up is low

C1_acq_data_in_reg[268] = DFFEAS(C1_acq_data_in[268], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[269] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[269]
--register power-up is low

C1_acq_data_in_reg[269] = DFFEAS(C1_acq_data_in[269], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[270] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[270]
--register power-up is low

C1_acq_data_in_reg[270] = DFFEAS(C1_acq_data_in[270], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[271] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[271]
--register power-up is low

C1_acq_data_in_reg[271] = DFFEAS(C1_acq_data_in[271], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[272] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[272]
--register power-up is low

C1_acq_data_in_reg[272] = DFFEAS(C1_acq_data_in[272], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[273] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[273]
--register power-up is low

C1_acq_data_in_reg[273] = DFFEAS(C1_acq_data_in[273], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[274] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[274]
--register power-up is low

C1_acq_data_in_reg[274] = DFFEAS(C1_acq_data_in[274], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[275] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[275]
--register power-up is low

C1_acq_data_in_reg[275] = DFFEAS(C1_acq_data_in[275], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[276] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[276]
--register power-up is low

C1_acq_data_in_reg[276] = DFFEAS(C1_acq_data_in[276], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[277] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[277]
--register power-up is low

C1_acq_data_in_reg[277] = DFFEAS(C1_acq_data_in[277], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[278] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[278]
--register power-up is low

C1_acq_data_in_reg[278] = DFFEAS(C1_acq_data_in[278], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[279] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[279]
--register power-up is low

C1_acq_data_in_reg[279] = DFFEAS(C1_acq_data_in[279], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[280] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[280]
--register power-up is low

C1_acq_data_in_reg[280] = DFFEAS(C1_acq_data_in[280], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[281] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[281]
--register power-up is low

C1_acq_data_in_reg[281] = DFFEAS(C1_acq_data_in[281], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[282] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[282]
--register power-up is low

C1_acq_data_in_reg[282] = DFFEAS(C1_acq_data_in[282], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[283] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[283]
--register power-up is low

C1_acq_data_in_reg[283] = DFFEAS(C1_acq_data_in[283], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[284] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[284]
--register power-up is low

C1_acq_data_in_reg[284] = DFFEAS(C1_acq_data_in[284], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[285] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[285]
--register power-up is low

C1_acq_data_in_reg[285] = DFFEAS(C1_acq_data_in[285], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[286] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[286]
--register power-up is low

C1_acq_data_in_reg[286] = DFFEAS(C1_acq_data_in[286], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[287] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[287]
--register power-up is low

C1_acq_data_in_reg[287] = DFFEAS(C1_acq_data_in[287], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[288] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[288]
--register power-up is low

C1_acq_data_in_reg[288] = DFFEAS(C1_acq_data_in[288], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[289] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[289]
--register power-up is low

C1_acq_data_in_reg[289] = DFFEAS(C1_acq_data_in[289], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[290] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[290]
--register power-up is low

C1_acq_data_in_reg[290] = DFFEAS(C1_acq_data_in[290], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[291] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[291]
--register power-up is low

C1_acq_data_in_reg[291] = DFFEAS(C1_acq_data_in[291], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[292] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[292]
--register power-up is low

C1_acq_data_in_reg[292] = DFFEAS(C1_acq_data_in[292], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[293] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[293]
--register power-up is low

C1_acq_data_in_reg[293] = DFFEAS(C1_acq_data_in[293], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[294] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[294]
--register power-up is low

C1_acq_data_in_reg[294] = DFFEAS(C1_acq_data_in[294], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[295] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[295]
--register power-up is low

C1_acq_data_in_reg[295] = DFFEAS(C1_acq_data_in[295], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[296] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[296]
--register power-up is low

C1_acq_data_in_reg[296] = DFFEAS(C1_acq_data_in[296], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[297] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[297]
--register power-up is low

C1_acq_data_in_reg[297] = DFFEAS(C1_acq_data_in[297], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[298] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[298]
--register power-up is low

C1_acq_data_in_reg[298] = DFFEAS(C1_acq_data_in[298], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[299] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[299]
--register power-up is low

C1_acq_data_in_reg[299] = DFFEAS(C1_acq_data_in[299], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[300] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[300]
--register power-up is low

C1_acq_data_in_reg[300] = DFFEAS(C1_acq_data_in[300], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[301] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[301]
--register power-up is low

C1_acq_data_in_reg[301] = DFFEAS(C1_acq_data_in[301], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[302] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[302]
--register power-up is low

C1_acq_data_in_reg[302] = DFFEAS(C1_acq_data_in[302], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[303] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[303]
--register power-up is low

C1_acq_data_in_reg[303] = DFFEAS(C1_acq_data_in[303], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[304] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[304]
--register power-up is low

C1_acq_data_in_reg[304] = DFFEAS(C1_acq_data_in[304], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[305] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[305]
--register power-up is low

C1_acq_data_in_reg[305] = DFFEAS(C1_acq_data_in[305], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[306] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[306]
--register power-up is low

C1_acq_data_in_reg[306] = DFFEAS(C1_acq_data_in[306], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[307] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[307]
--register power-up is low

C1_acq_data_in_reg[307] = DFFEAS(C1_acq_data_in[307], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[308] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[308]
--register power-up is low

C1_acq_data_in_reg[308] = DFFEAS(C1_acq_data_in[308], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[309] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[309]
--register power-up is low

C1_acq_data_in_reg[309] = DFFEAS(C1_acq_data_in[309], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[310] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[310]
--register power-up is low

C1_acq_data_in_reg[310] = DFFEAS(C1_acq_data_in[310], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[311] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[311]
--register power-up is low

C1_acq_data_in_reg[311] = DFFEAS(C1_acq_data_in[311], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[312] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[312]
--register power-up is low

C1_acq_data_in_reg[312] = DFFEAS(C1_acq_data_in[312], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[313] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[313]
--register power-up is low

C1_acq_data_in_reg[313] = DFFEAS(C1_acq_data_in[313], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[314] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[314]
--register power-up is low

C1_acq_data_in_reg[314] = DFFEAS(C1_acq_data_in[314], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[315] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[315]
--register power-up is low

C1_acq_data_in_reg[315] = DFFEAS(C1_acq_data_in[315], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[316] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[316]
--register power-up is low

C1_acq_data_in_reg[316] = DFFEAS(C1_acq_data_in[316], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[317] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[317]
--register power-up is low

C1_acq_data_in_reg[317] = DFFEAS(C1_acq_data_in[317], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[318] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[318]
--register power-up is low

C1_acq_data_in_reg[318] = DFFEAS(C1_acq_data_in[318], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[319] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[319]
--register power-up is low

C1_acq_data_in_reg[319] = DFFEAS(C1_acq_data_in[319], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[320] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[320]
--register power-up is low

C1_acq_data_in_reg[320] = DFFEAS(C1_acq_data_in[320], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[321] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[321]
--register power-up is low

C1_acq_data_in_reg[321] = DFFEAS(C1_acq_data_in[321], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[322] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[322]
--register power-up is low

C1_acq_data_in_reg[322] = DFFEAS(C1_acq_data_in[322], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[323] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[323]
--register power-up is low

C1_acq_data_in_reg[323] = DFFEAS(C1_acq_data_in[323], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[324] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[324]
--register power-up is low

C1_acq_data_in_reg[324] = DFFEAS(C1_acq_data_in[324], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[325] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[325]
--register power-up is low

C1_acq_data_in_reg[325] = DFFEAS(C1_acq_data_in[325], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[326] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[326]
--register power-up is low

C1_acq_data_in_reg[326] = DFFEAS(C1_acq_data_in[326], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[327] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[327]
--register power-up is low

C1_acq_data_in_reg[327] = DFFEAS(C1_acq_data_in[327], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[328] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[328]
--register power-up is low

C1_acq_data_in_reg[328] = DFFEAS(C1_acq_data_in[328], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[329] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[329]
--register power-up is low

C1_acq_data_in_reg[329] = DFFEAS(C1_acq_data_in[329], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[330] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[330]
--register power-up is low

C1_acq_data_in_reg[330] = DFFEAS(C1_acq_data_in[330], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[331] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[331]
--register power-up is low

C1_acq_data_in_reg[331] = DFFEAS(C1_acq_data_in[331], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[332] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[332]
--register power-up is low

C1_acq_data_in_reg[332] = DFFEAS(C1_acq_data_in[332], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[333] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[333]
--register power-up is low

C1_acq_data_in_reg[333] = DFFEAS(C1_acq_data_in[333], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[334] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[334]
--register power-up is low

C1_acq_data_in_reg[334] = DFFEAS(C1_acq_data_in[334], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[335] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[335]
--register power-up is low

C1_acq_data_in_reg[335] = DFFEAS(C1_acq_data_in[335], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[336] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[336]
--register power-up is low

C1_acq_data_in_reg[336] = DFFEAS(C1_acq_data_in[336], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[337] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[337]
--register power-up is low

C1_acq_data_in_reg[337] = DFFEAS(C1_acq_data_in[337], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[338] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[338]
--register power-up is low

C1_acq_data_in_reg[338] = DFFEAS(C1_acq_data_in[338], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[339] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[339]
--register power-up is low

C1_acq_data_in_reg[339] = DFFEAS(C1_acq_data_in[339], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_data_in_reg[340] is sld_signaltap:auto_signaltap_0|acq_data_in_reg[340]
--register power-up is low

C1_acq_data_in_reg[340] = DFFEAS(C1_acq_data_in[340], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_trigger_in_reg[0] is sld_signaltap:auto_signaltap_0|acq_trigger_in_reg[0]
--register power-up is low

C1_acq_trigger_in_reg[0] = DFFEAS(C1_acq_trigger_in[0], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--C1_acq_trigger_in_reg[1] is sld_signaltap:auto_signaltap_0|acq_trigger_in_reg[1]
--register power-up is low

C1_acq_trigger_in_reg[1] = DFFEAS(C1_acq_trigger_in[1], C1_acq_clk,  ,  ,  ,  ,  ,  ,  );


--W1_trigger_out_ff is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|trigger_out_ff
--register power-up is low

W1_trigger_out_ff = AMPP_FUNCTION(C1_acq_clk, W1L1614);


--C1_raw_tck is sld_signaltap:auto_signaltap_0|raw_tck
C1_raw_tck = INPUT();


--W1L1512 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|cdr~0
W1L1512 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_usr1, !C1_ena);


--W1L1587 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[0]~0
W1L1587 = AMPP_FUNCTION(!C1_ir_in[9], !C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--DB1_\buffer_manager:collecting_post_data_var is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:collecting_post_data_var
--register power-up is low

DB1_\buffer_manager:collecting_post_data_var = AMPP_FUNCTION(C1_acq_clk, DB1L151, !W1_reset_all, W1_collect_data);


--W1_run is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|run
--register power-up is low

W1_run = AMPP_FUNCTION(C1_acq_clk, C1_ir_in[1]);


--W1L1548 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|status_load_on~0
W1L1548 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena);


--CB8_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[1]
--register power-up is low

CB8_dffs[1] = AMPP_FUNCTION(C1_raw_tck, CB8L2, W1L1549);


--CB8L1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~0
CB8L1 = AMPP_FUNCTION(!DB1_\buffer_manager:collecting_post_data_var, !W1_run, !W1L1548, !CB8_dffs[1]);


--C1_tdi is sld_signaltap:auto_signaltap_0|tdi
C1_tdi = INPUT();


--W1L1511 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|bypass_reg_out~0
W1L1511 = AMPP_FUNCTION(!C1_ena, !W1_bypass_reg_out, !C1_tdi);


--W1_reset_all is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|reset_all
--register power-up is low

W1_reset_all = AMPP_FUNCTION(C1_raw_tck, W1L1543);


--C1_crc[0] is sld_signaltap:auto_signaltap_0|crc[0]
C1_crc[0] = INPUT();


--C1_crc[4] is sld_signaltap:auto_signaltap_0|crc[4]
C1_crc[4] = INPUT();


--C1_crc[8] is sld_signaltap:auto_signaltap_0|crc[8]
C1_crc[8] = INPUT();


--C1_crc[12] is sld_signaltap:auto_signaltap_0|crc[12]
C1_crc[12] = INPUT();


--Q1_word_counter[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter[0]
--register power-up is low

Q1_word_counter[0] = AMPP_FUNCTION(C1_raw_tck, Q1L7, !Q1L6);


--Q1_word_counter[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter[1]
--register power-up is low

Q1_word_counter[1] = AMPP_FUNCTION(C1_raw_tck, Q1L8, !Q1L6);


--Q1L19 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~0
Q1L19 = AMPP_FUNCTION(!C1_crc[0], !C1_crc[4], !C1_crc[8], !C1_crc[12], !Q1_word_counter[0], !Q1_word_counter[1]);


--C1_jtag_state_udr is sld_signaltap:auto_signaltap_0|jtag_state_udr
C1_jtag_state_udr = INPUT();


--Q1_word_counter[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter[2]
--register power-up is low

Q1_word_counter[2] = AMPP_FUNCTION(C1_raw_tck, Q1L9, !Q1L6);


--Q1_word_counter[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter[3]
--register power-up is low

Q1_word_counter[3] = AMPP_FUNCTION(C1_raw_tck, Q1L10, !Q1L6);


--Q1L16 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[3]~1
Q1L16 = AMPP_FUNCTION(!C1_jtag_state_sdr, !C1_usr1, !C1_jtag_state_udr, !Q1_word_counter[2], !Q1_word_counter[3]);


--Q1L17 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[3]~2
Q1L17 = AMPP_FUNCTION(!C1_jtag_state_sdr, !C1_usr1, !C1_jtag_state_udr, !Q1_word_counter[2], !Q1_word_counter[3]);


--Q1_WORD_SR[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[1]
--register power-up is low

Q1_WORD_SR[1] = AMPP_FUNCTION(C1_raw_tck, Q1L24, Q1L18);


--C1_crc[16] is sld_signaltap:auto_signaltap_0|crc[16]
C1_crc[16] = INPUT();


--C1_crc[20] is sld_signaltap:auto_signaltap_0|crc[20]
C1_crc[20] = INPUT();


--C1_crc[24] is sld_signaltap:auto_signaltap_0|crc[24]
C1_crc[24] = INPUT();


--C1_crc[28] is sld_signaltap:auto_signaltap_0|crc[28]
C1_crc[28] = INPUT();


--Q1L20 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~3
Q1L20 = AMPP_FUNCTION(!C1_crc[16], !C1_crc[20], !C1_crc[24], !C1_crc[28], !Q1_word_counter[0], !Q1_word_counter[1]);


--Q1L21 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~4
Q1L21 = AMPP_FUNCTION(!Q1L19, !Q1L16, !Q1L17, !Q1_WORD_SR[1], !Q1L20);


--Q1L18 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[3]~5
Q1L18 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !C1_jtag_state_udr);


--DB1_is_buffer_wrapped_once_sig is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped_once_sig
--register power-up is low

DB1_is_buffer_wrapped_once_sig = AMPP_FUNCTION(C1_acq_clk, DB1L188, !W1_reset_all);


--W1_sdr is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sdr
W1_sdr = AMPP_FUNCTION(!C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--W1L1540 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|process_0~0
W1L1540 = AMPP_FUNCTION(!C1_ir_in[8], !C1_jtag_state_cdr, !C1_usr1, !C1_ena);


--W1L1541 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|process_0~1
W1L1541 = AMPP_FUNCTION(!C1_ir_in[8], !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--W1L1533 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~0
W1L1533 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[13], !W1_tdo_crc_len_reg[14]);


--W1L1534 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~1
W1L1534 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[6], !W1_tdo_crc_len_reg[7], !W1_tdo_crc_len_reg[8], !W1_tdo_crc_len_reg[9], !W1_tdo_crc_len_reg[10], !W1_tdo_crc_len_reg[11]);


--W1L1535 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~2
W1L1535 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[0], !W1_tdo_crc_len_reg[1], !W1_tdo_crc_len_reg[2], !W1_tdo_crc_len_reg[3], !W1_tdo_crc_len_reg[4], !W1_tdo_crc_len_reg[5]);


--W1L1536 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~3
W1L1536 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[27], !W1_tdo_crc_len_reg[28], !W1_tdo_crc_len_reg[29], !W1_tdo_crc_len_reg[30], !W1_tdo_crc_len_reg[31], !W1_tdo_crc_len_reg[12]);


--W1L1537 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~4
W1L1537 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[15], !W1_tdo_crc_len_reg[16], !W1_tdo_crc_len_reg[17], !W1_tdo_crc_len_reg[18], !W1_tdo_crc_len_reg[19], !W1_tdo_crc_len_reg[20]);


--W1L1538 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~5
W1L1538 = AMPP_FUNCTION(!W1_tdo_crc_len_reg[21], !W1_tdo_crc_len_reg[22], !W1_tdo_crc_len_reg[23], !W1_tdo_crc_len_reg[24], !W1_tdo_crc_len_reg[25], !W1_tdo_crc_len_reg[26]);


--W1L1539 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|LessThan0~6
W1L1539 = AMPP_FUNCTION(!W1L1533, !W1L1534, !W1L1535, !W1L1536, !W1L1537, !W1L1538);


--W1L1567 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_len_reg[15]~0
W1L1567 = AMPP_FUNCTION(!C1_ir_in[8], !C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !W1L1539);


--CB4_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[1]
--register power-up is low

CB4_dffs[1] = AMPP_FUNCTION(C1_raw_tck, CB4_dffs[2], !W1_reset_all, W1_trigger_setup_ena);


--W1_trigger_setup_ena is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|trigger_setup_ena
W1_trigger_setup_ena = AMPP_FUNCTION(!C1_ir_in[3], !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--X1L6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|Equal3~0
X1L6 = AMPP_FUNCTION(!JB1_counter_reg_bit[2], !JB1_counter_reg_bit[0], !JB1_counter_reg_bit[4], !JB1_counter_reg_bit[3], !JB1_counter_reg_bit[1]);


--X1_status_ram_shift_load is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|status_ram_shift_load
X1_status_ram_shift_load = AMPP_FUNCTION(!C1_ir_in[7], !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !X1L6);


--C1_acq_data_in[0] is sld_signaltap:auto_signaltap_0|acq_data_in[0]
C1_acq_data_in[0] = INPUT();


--C1_acq_clk is sld_signaltap:auto_signaltap_0|acq_clk
C1_acq_clk = INPUT();


--C1_acq_data_in[1] is sld_signaltap:auto_signaltap_0|acq_data_in[1]
C1_acq_data_in[1] = INPUT();


--C1_acq_data_in[2] is sld_signaltap:auto_signaltap_0|acq_data_in[2]
C1_acq_data_in[2] = INPUT();


--C1_acq_data_in[3] is sld_signaltap:auto_signaltap_0|acq_data_in[3]
C1_acq_data_in[3] = INPUT();


--C1_acq_data_in[4] is sld_signaltap:auto_signaltap_0|acq_data_in[4]
C1_acq_data_in[4] = INPUT();


--C1_acq_data_in[5] is sld_signaltap:auto_signaltap_0|acq_data_in[5]
C1_acq_data_in[5] = INPUT();


--C1_acq_data_in[6] is sld_signaltap:auto_signaltap_0|acq_data_in[6]
C1_acq_data_in[6] = INPUT();


--C1_acq_data_in[7] is sld_signaltap:auto_signaltap_0|acq_data_in[7]
C1_acq_data_in[7] = INPUT();


--C1_acq_data_in[8] is sld_signaltap:auto_signaltap_0|acq_data_in[8]
C1_acq_data_in[8] = INPUT();


--C1_acq_data_in[9] is sld_signaltap:auto_signaltap_0|acq_data_in[9]
C1_acq_data_in[9] = INPUT();


--C1_acq_data_in[10] is sld_signaltap:auto_signaltap_0|acq_data_in[10]
C1_acq_data_in[10] = INPUT();


--C1_acq_data_in[11] is sld_signaltap:auto_signaltap_0|acq_data_in[11]
C1_acq_data_in[11] = INPUT();


--C1_acq_data_in[12] is sld_signaltap:auto_signaltap_0|acq_data_in[12]
C1_acq_data_in[12] = INPUT();


--C1_acq_data_in[13] is sld_signaltap:auto_signaltap_0|acq_data_in[13]
C1_acq_data_in[13] = INPUT();


--C1_acq_data_in[14] is sld_signaltap:auto_signaltap_0|acq_data_in[14]
C1_acq_data_in[14] = INPUT();


--C1_acq_data_in[15] is sld_signaltap:auto_signaltap_0|acq_data_in[15]
C1_acq_data_in[15] = INPUT();


--C1_acq_data_in[16] is sld_signaltap:auto_signaltap_0|acq_data_in[16]
C1_acq_data_in[16] = INPUT();


--C1_acq_data_in[17] is sld_signaltap:auto_signaltap_0|acq_data_in[17]
C1_acq_data_in[17] = INPUT();


--C1_acq_data_in[18] is sld_signaltap:auto_signaltap_0|acq_data_in[18]
C1_acq_data_in[18] = INPUT();


--C1_acq_data_in[19] is sld_signaltap:auto_signaltap_0|acq_data_in[19]
C1_acq_data_in[19] = INPUT();


--C1_acq_data_in[20] is sld_signaltap:auto_signaltap_0|acq_data_in[20]
C1_acq_data_in[20] = INPUT();


--C1_acq_data_in[21] is sld_signaltap:auto_signaltap_0|acq_data_in[21]
C1_acq_data_in[21] = INPUT();


--C1_acq_data_in[22] is sld_signaltap:auto_signaltap_0|acq_data_in[22]
C1_acq_data_in[22] = INPUT();


--C1_acq_data_in[23] is sld_signaltap:auto_signaltap_0|acq_data_in[23]
C1_acq_data_in[23] = INPUT();


--C1_acq_data_in[24] is sld_signaltap:auto_signaltap_0|acq_data_in[24]
C1_acq_data_in[24] = INPUT();


--C1_acq_data_in[25] is sld_signaltap:auto_signaltap_0|acq_data_in[25]
C1_acq_data_in[25] = INPUT();


--C1_acq_data_in[26] is sld_signaltap:auto_signaltap_0|acq_data_in[26]
C1_acq_data_in[26] = INPUT();


--C1_acq_data_in[27] is sld_signaltap:auto_signaltap_0|acq_data_in[27]
C1_acq_data_in[27] = INPUT();


--C1_acq_data_in[28] is sld_signaltap:auto_signaltap_0|acq_data_in[28]
C1_acq_data_in[28] = INPUT();


--C1_acq_data_in[29] is sld_signaltap:auto_signaltap_0|acq_data_in[29]
C1_acq_data_in[29] = INPUT();


--C1_acq_data_in[30] is sld_signaltap:auto_signaltap_0|acq_data_in[30]
C1_acq_data_in[30] = INPUT();


--C1_acq_data_in[31] is sld_signaltap:auto_signaltap_0|acq_data_in[31]
C1_acq_data_in[31] = INPUT();


--C1_acq_data_in[32] is sld_signaltap:auto_signaltap_0|acq_data_in[32]
C1_acq_data_in[32] = INPUT();


--C1_acq_data_in[33] is sld_signaltap:auto_signaltap_0|acq_data_in[33]
C1_acq_data_in[33] = INPUT();


--C1_acq_data_in[34] is sld_signaltap:auto_signaltap_0|acq_data_in[34]
C1_acq_data_in[34] = INPUT();


--C1_acq_data_in[35] is sld_signaltap:auto_signaltap_0|acq_data_in[35]
C1_acq_data_in[35] = INPUT();


--C1_acq_data_in[36] is sld_signaltap:auto_signaltap_0|acq_data_in[36]
C1_acq_data_in[36] = INPUT();


--C1_acq_data_in[37] is sld_signaltap:auto_signaltap_0|acq_data_in[37]
C1_acq_data_in[37] = INPUT();


--C1_acq_data_in[38] is sld_signaltap:auto_signaltap_0|acq_data_in[38]
C1_acq_data_in[38] = INPUT();


--C1_acq_data_in[39] is sld_signaltap:auto_signaltap_0|acq_data_in[39]
C1_acq_data_in[39] = INPUT();


--C1_acq_data_in[40] is sld_signaltap:auto_signaltap_0|acq_data_in[40]
C1_acq_data_in[40] = INPUT();


--C1_acq_data_in[41] is sld_signaltap:auto_signaltap_0|acq_data_in[41]
C1_acq_data_in[41] = INPUT();


--C1_acq_data_in[42] is sld_signaltap:auto_signaltap_0|acq_data_in[42]
C1_acq_data_in[42] = INPUT();


--C1_acq_data_in[43] is sld_signaltap:auto_signaltap_0|acq_data_in[43]
C1_acq_data_in[43] = INPUT();


--C1_acq_data_in[44] is sld_signaltap:auto_signaltap_0|acq_data_in[44]
C1_acq_data_in[44] = INPUT();


--C1_acq_data_in[45] is sld_signaltap:auto_signaltap_0|acq_data_in[45]
C1_acq_data_in[45] = INPUT();


--C1_acq_data_in[46] is sld_signaltap:auto_signaltap_0|acq_data_in[46]
C1_acq_data_in[46] = INPUT();


--C1_acq_data_in[47] is sld_signaltap:auto_signaltap_0|acq_data_in[47]
C1_acq_data_in[47] = INPUT();


--C1_acq_data_in[48] is sld_signaltap:auto_signaltap_0|acq_data_in[48]
C1_acq_data_in[48] = INPUT();


--C1_acq_data_in[49] is sld_signaltap:auto_signaltap_0|acq_data_in[49]
C1_acq_data_in[49] = INPUT();


--C1_acq_data_in[50] is sld_signaltap:auto_signaltap_0|acq_data_in[50]
C1_acq_data_in[50] = INPUT();


--C1_acq_data_in[51] is sld_signaltap:auto_signaltap_0|acq_data_in[51]
C1_acq_data_in[51] = INPUT();


--C1_acq_data_in[52] is sld_signaltap:auto_signaltap_0|acq_data_in[52]
C1_acq_data_in[52] = INPUT();


--C1_acq_data_in[53] is sld_signaltap:auto_signaltap_0|acq_data_in[53]
C1_acq_data_in[53] = INPUT();


--C1_acq_data_in[54] is sld_signaltap:auto_signaltap_0|acq_data_in[54]
C1_acq_data_in[54] = INPUT();


--C1_acq_data_in[55] is sld_signaltap:auto_signaltap_0|acq_data_in[55]
C1_acq_data_in[55] = INPUT();


--C1_acq_data_in[56] is sld_signaltap:auto_signaltap_0|acq_data_in[56]
C1_acq_data_in[56] = INPUT();


--C1_acq_data_in[57] is sld_signaltap:auto_signaltap_0|acq_data_in[57]
C1_acq_data_in[57] = INPUT();


--C1_acq_data_in[58] is sld_signaltap:auto_signaltap_0|acq_data_in[58]
C1_acq_data_in[58] = INPUT();


--C1_acq_data_in[59] is sld_signaltap:auto_signaltap_0|acq_data_in[59]
C1_acq_data_in[59] = INPUT();


--C1_acq_data_in[60] is sld_signaltap:auto_signaltap_0|acq_data_in[60]
C1_acq_data_in[60] = INPUT();


--C1_acq_data_in[61] is sld_signaltap:auto_signaltap_0|acq_data_in[61]
C1_acq_data_in[61] = INPUT();


--C1_acq_data_in[62] is sld_signaltap:auto_signaltap_0|acq_data_in[62]
C1_acq_data_in[62] = INPUT();


--C1_acq_data_in[63] is sld_signaltap:auto_signaltap_0|acq_data_in[63]
C1_acq_data_in[63] = INPUT();


--C1_acq_data_in[64] is sld_signaltap:auto_signaltap_0|acq_data_in[64]
C1_acq_data_in[64] = INPUT();


--C1_acq_data_in[65] is sld_signaltap:auto_signaltap_0|acq_data_in[65]
C1_acq_data_in[65] = INPUT();


--C1_acq_data_in[66] is sld_signaltap:auto_signaltap_0|acq_data_in[66]
C1_acq_data_in[66] = INPUT();


--C1_acq_data_in[67] is sld_signaltap:auto_signaltap_0|acq_data_in[67]
C1_acq_data_in[67] = INPUT();


--C1_acq_data_in[68] is sld_signaltap:auto_signaltap_0|acq_data_in[68]
C1_acq_data_in[68] = INPUT();


--C1_acq_data_in[69] is sld_signaltap:auto_signaltap_0|acq_data_in[69]
C1_acq_data_in[69] = INPUT();


--C1_acq_data_in[70] is sld_signaltap:auto_signaltap_0|acq_data_in[70]
C1_acq_data_in[70] = INPUT();


--C1_acq_data_in[71] is sld_signaltap:auto_signaltap_0|acq_data_in[71]
C1_acq_data_in[71] = INPUT();


--C1_acq_data_in[72] is sld_signaltap:auto_signaltap_0|acq_data_in[72]
C1_acq_data_in[72] = INPUT();


--C1_acq_data_in[73] is sld_signaltap:auto_signaltap_0|acq_data_in[73]
C1_acq_data_in[73] = INPUT();


--C1_acq_data_in[74] is sld_signaltap:auto_signaltap_0|acq_data_in[74]
C1_acq_data_in[74] = INPUT();


--C1_acq_data_in[75] is sld_signaltap:auto_signaltap_0|acq_data_in[75]
C1_acq_data_in[75] = INPUT();


--C1_acq_data_in[76] is sld_signaltap:auto_signaltap_0|acq_data_in[76]
C1_acq_data_in[76] = INPUT();


--C1_acq_data_in[77] is sld_signaltap:auto_signaltap_0|acq_data_in[77]
C1_acq_data_in[77] = INPUT();


--C1_acq_data_in[78] is sld_signaltap:auto_signaltap_0|acq_data_in[78]
C1_acq_data_in[78] = INPUT();


--C1_acq_data_in[79] is sld_signaltap:auto_signaltap_0|acq_data_in[79]
C1_acq_data_in[79] = INPUT();


--C1_acq_data_in[80] is sld_signaltap:auto_signaltap_0|acq_data_in[80]
C1_acq_data_in[80] = INPUT();


--C1_acq_data_in[81] is sld_signaltap:auto_signaltap_0|acq_data_in[81]
C1_acq_data_in[81] = INPUT();


--C1_acq_data_in[82] is sld_signaltap:auto_signaltap_0|acq_data_in[82]
C1_acq_data_in[82] = INPUT();


--C1_acq_data_in[83] is sld_signaltap:auto_signaltap_0|acq_data_in[83]
C1_acq_data_in[83] = INPUT();


--C1_acq_data_in[84] is sld_signaltap:auto_signaltap_0|acq_data_in[84]
C1_acq_data_in[84] = INPUT();


--C1_acq_data_in[85] is sld_signaltap:auto_signaltap_0|acq_data_in[85]
C1_acq_data_in[85] = INPUT();


--C1_acq_data_in[86] is sld_signaltap:auto_signaltap_0|acq_data_in[86]
C1_acq_data_in[86] = INPUT();


--C1_acq_data_in[87] is sld_signaltap:auto_signaltap_0|acq_data_in[87]
C1_acq_data_in[87] = INPUT();


--C1_acq_data_in[88] is sld_signaltap:auto_signaltap_0|acq_data_in[88]
C1_acq_data_in[88] = INPUT();


--C1_acq_data_in[89] is sld_signaltap:auto_signaltap_0|acq_data_in[89]
C1_acq_data_in[89] = INPUT();


--C1_acq_data_in[90] is sld_signaltap:auto_signaltap_0|acq_data_in[90]
C1_acq_data_in[90] = INPUT();


--C1_acq_data_in[91] is sld_signaltap:auto_signaltap_0|acq_data_in[91]
C1_acq_data_in[91] = INPUT();


--C1_acq_data_in[92] is sld_signaltap:auto_signaltap_0|acq_data_in[92]
C1_acq_data_in[92] = INPUT();


--C1_acq_data_in[93] is sld_signaltap:auto_signaltap_0|acq_data_in[93]
C1_acq_data_in[93] = INPUT();


--C1_acq_data_in[94] is sld_signaltap:auto_signaltap_0|acq_data_in[94]
C1_acq_data_in[94] = INPUT();


--C1_acq_data_in[95] is sld_signaltap:auto_signaltap_0|acq_data_in[95]
C1_acq_data_in[95] = INPUT();


--C1_acq_data_in[96] is sld_signaltap:auto_signaltap_0|acq_data_in[96]
C1_acq_data_in[96] = INPUT();


--C1_acq_data_in[97] is sld_signaltap:auto_signaltap_0|acq_data_in[97]
C1_acq_data_in[97] = INPUT();


--C1_acq_data_in[98] is sld_signaltap:auto_signaltap_0|acq_data_in[98]
C1_acq_data_in[98] = INPUT();


--C1_acq_data_in[99] is sld_signaltap:auto_signaltap_0|acq_data_in[99]
C1_acq_data_in[99] = INPUT();


--C1_acq_data_in[100] is sld_signaltap:auto_signaltap_0|acq_data_in[100]
C1_acq_data_in[100] = INPUT();


--C1_acq_data_in[101] is sld_signaltap:auto_signaltap_0|acq_data_in[101]
C1_acq_data_in[101] = INPUT();


--C1_acq_data_in[102] is sld_signaltap:auto_signaltap_0|acq_data_in[102]
C1_acq_data_in[102] = INPUT();


--C1_acq_data_in[103] is sld_signaltap:auto_signaltap_0|acq_data_in[103]
C1_acq_data_in[103] = INPUT();


--C1_acq_data_in[104] is sld_signaltap:auto_signaltap_0|acq_data_in[104]
C1_acq_data_in[104] = INPUT();


--C1_acq_data_in[105] is sld_signaltap:auto_signaltap_0|acq_data_in[105]
C1_acq_data_in[105] = INPUT();


--C1_acq_data_in[106] is sld_signaltap:auto_signaltap_0|acq_data_in[106]
C1_acq_data_in[106] = INPUT();


--C1_acq_data_in[107] is sld_signaltap:auto_signaltap_0|acq_data_in[107]
C1_acq_data_in[107] = INPUT();


--C1_acq_data_in[108] is sld_signaltap:auto_signaltap_0|acq_data_in[108]
C1_acq_data_in[108] = INPUT();


--C1_acq_data_in[109] is sld_signaltap:auto_signaltap_0|acq_data_in[109]
C1_acq_data_in[109] = INPUT();


--C1_acq_data_in[110] is sld_signaltap:auto_signaltap_0|acq_data_in[110]
C1_acq_data_in[110] = INPUT();


--C1_acq_data_in[111] is sld_signaltap:auto_signaltap_0|acq_data_in[111]
C1_acq_data_in[111] = INPUT();


--C1_acq_data_in[112] is sld_signaltap:auto_signaltap_0|acq_data_in[112]
C1_acq_data_in[112] = INPUT();


--C1_acq_data_in[113] is sld_signaltap:auto_signaltap_0|acq_data_in[113]
C1_acq_data_in[113] = INPUT();


--C1_acq_data_in[114] is sld_signaltap:auto_signaltap_0|acq_data_in[114]
C1_acq_data_in[114] = INPUT();


--C1_acq_data_in[115] is sld_signaltap:auto_signaltap_0|acq_data_in[115]
C1_acq_data_in[115] = INPUT();


--C1_acq_data_in[116] is sld_signaltap:auto_signaltap_0|acq_data_in[116]
C1_acq_data_in[116] = INPUT();


--C1_acq_data_in[117] is sld_signaltap:auto_signaltap_0|acq_data_in[117]
C1_acq_data_in[117] = INPUT();


--C1_acq_data_in[118] is sld_signaltap:auto_signaltap_0|acq_data_in[118]
C1_acq_data_in[118] = INPUT();


--C1_acq_data_in[119] is sld_signaltap:auto_signaltap_0|acq_data_in[119]
C1_acq_data_in[119] = INPUT();


--C1_acq_data_in[120] is sld_signaltap:auto_signaltap_0|acq_data_in[120]
C1_acq_data_in[120] = INPUT();


--C1_acq_data_in[121] is sld_signaltap:auto_signaltap_0|acq_data_in[121]
C1_acq_data_in[121] = INPUT();


--C1_acq_data_in[122] is sld_signaltap:auto_signaltap_0|acq_data_in[122]
C1_acq_data_in[122] = INPUT();


--C1_acq_data_in[123] is sld_signaltap:auto_signaltap_0|acq_data_in[123]
C1_acq_data_in[123] = INPUT();


--C1_acq_data_in[124] is sld_signaltap:auto_signaltap_0|acq_data_in[124]
C1_acq_data_in[124] = INPUT();


--C1_acq_data_in[125] is sld_signaltap:auto_signaltap_0|acq_data_in[125]
C1_acq_data_in[125] = INPUT();


--C1_acq_data_in[126] is sld_signaltap:auto_signaltap_0|acq_data_in[126]
C1_acq_data_in[126] = INPUT();


--C1_acq_data_in[127] is sld_signaltap:auto_signaltap_0|acq_data_in[127]
C1_acq_data_in[127] = INPUT();


--C1_acq_data_in[128] is sld_signaltap:auto_signaltap_0|acq_data_in[128]
C1_acq_data_in[128] = INPUT();


--C1_acq_data_in[129] is sld_signaltap:auto_signaltap_0|acq_data_in[129]
C1_acq_data_in[129] = INPUT();


--C1_acq_data_in[130] is sld_signaltap:auto_signaltap_0|acq_data_in[130]
C1_acq_data_in[130] = INPUT();


--C1_acq_data_in[131] is sld_signaltap:auto_signaltap_0|acq_data_in[131]
C1_acq_data_in[131] = INPUT();


--C1_acq_data_in[132] is sld_signaltap:auto_signaltap_0|acq_data_in[132]
C1_acq_data_in[132] = INPUT();


--C1_acq_data_in[133] is sld_signaltap:auto_signaltap_0|acq_data_in[133]
C1_acq_data_in[133] = INPUT();


--C1_acq_data_in[134] is sld_signaltap:auto_signaltap_0|acq_data_in[134]
C1_acq_data_in[134] = INPUT();


--C1_acq_data_in[135] is sld_signaltap:auto_signaltap_0|acq_data_in[135]
C1_acq_data_in[135] = INPUT();


--C1_acq_data_in[136] is sld_signaltap:auto_signaltap_0|acq_data_in[136]
C1_acq_data_in[136] = INPUT();


--C1_acq_data_in[137] is sld_signaltap:auto_signaltap_0|acq_data_in[137]
C1_acq_data_in[137] = INPUT();


--C1_acq_data_in[138] is sld_signaltap:auto_signaltap_0|acq_data_in[138]
C1_acq_data_in[138] = INPUT();


--C1_acq_data_in[139] is sld_signaltap:auto_signaltap_0|acq_data_in[139]
C1_acq_data_in[139] = INPUT();


--C1_acq_data_in[140] is sld_signaltap:auto_signaltap_0|acq_data_in[140]
C1_acq_data_in[140] = INPUT();


--C1_acq_data_in[141] is sld_signaltap:auto_signaltap_0|acq_data_in[141]
C1_acq_data_in[141] = INPUT();


--C1_acq_data_in[142] is sld_signaltap:auto_signaltap_0|acq_data_in[142]
C1_acq_data_in[142] = INPUT();


--C1_acq_data_in[143] is sld_signaltap:auto_signaltap_0|acq_data_in[143]
C1_acq_data_in[143] = INPUT();


--C1_acq_data_in[144] is sld_signaltap:auto_signaltap_0|acq_data_in[144]
C1_acq_data_in[144] = INPUT();


--C1_acq_data_in[145] is sld_signaltap:auto_signaltap_0|acq_data_in[145]
C1_acq_data_in[145] = INPUT();


--C1_acq_data_in[146] is sld_signaltap:auto_signaltap_0|acq_data_in[146]
C1_acq_data_in[146] = INPUT();


--C1_acq_data_in[147] is sld_signaltap:auto_signaltap_0|acq_data_in[147]
C1_acq_data_in[147] = INPUT();


--C1_acq_data_in[148] is sld_signaltap:auto_signaltap_0|acq_data_in[148]
C1_acq_data_in[148] = INPUT();


--C1_acq_data_in[149] is sld_signaltap:auto_signaltap_0|acq_data_in[149]
C1_acq_data_in[149] = INPUT();


--C1_acq_data_in[150] is sld_signaltap:auto_signaltap_0|acq_data_in[150]
C1_acq_data_in[150] = INPUT();


--C1_acq_data_in[151] is sld_signaltap:auto_signaltap_0|acq_data_in[151]
C1_acq_data_in[151] = INPUT();


--C1_acq_data_in[152] is sld_signaltap:auto_signaltap_0|acq_data_in[152]
C1_acq_data_in[152] = INPUT();


--C1_acq_data_in[153] is sld_signaltap:auto_signaltap_0|acq_data_in[153]
C1_acq_data_in[153] = INPUT();


--C1_acq_data_in[154] is sld_signaltap:auto_signaltap_0|acq_data_in[154]
C1_acq_data_in[154] = INPUT();


--C1_acq_data_in[155] is sld_signaltap:auto_signaltap_0|acq_data_in[155]
C1_acq_data_in[155] = INPUT();


--C1_acq_data_in[156] is sld_signaltap:auto_signaltap_0|acq_data_in[156]
C1_acq_data_in[156] = INPUT();


--C1_acq_data_in[157] is sld_signaltap:auto_signaltap_0|acq_data_in[157]
C1_acq_data_in[157] = INPUT();


--C1_acq_data_in[158] is sld_signaltap:auto_signaltap_0|acq_data_in[158]
C1_acq_data_in[158] = INPUT();


--C1_acq_data_in[159] is sld_signaltap:auto_signaltap_0|acq_data_in[159]
C1_acq_data_in[159] = INPUT();


--C1_acq_data_in[160] is sld_signaltap:auto_signaltap_0|acq_data_in[160]
C1_acq_data_in[160] = INPUT();


--C1_acq_data_in[161] is sld_signaltap:auto_signaltap_0|acq_data_in[161]
C1_acq_data_in[161] = INPUT();


--C1_acq_data_in[162] is sld_signaltap:auto_signaltap_0|acq_data_in[162]
C1_acq_data_in[162] = INPUT();


--C1_acq_data_in[163] is sld_signaltap:auto_signaltap_0|acq_data_in[163]
C1_acq_data_in[163] = INPUT();


--C1_acq_data_in[164] is sld_signaltap:auto_signaltap_0|acq_data_in[164]
C1_acq_data_in[164] = INPUT();


--C1_acq_data_in[165] is sld_signaltap:auto_signaltap_0|acq_data_in[165]
C1_acq_data_in[165] = INPUT();


--C1_acq_data_in[166] is sld_signaltap:auto_signaltap_0|acq_data_in[166]
C1_acq_data_in[166] = INPUT();


--C1_acq_data_in[167] is sld_signaltap:auto_signaltap_0|acq_data_in[167]
C1_acq_data_in[167] = INPUT();


--C1_acq_data_in[168] is sld_signaltap:auto_signaltap_0|acq_data_in[168]
C1_acq_data_in[168] = INPUT();


--C1_acq_data_in[169] is sld_signaltap:auto_signaltap_0|acq_data_in[169]
C1_acq_data_in[169] = INPUT();


--C1_acq_data_in[170] is sld_signaltap:auto_signaltap_0|acq_data_in[170]
C1_acq_data_in[170] = INPUT();


--C1_acq_data_in[171] is sld_signaltap:auto_signaltap_0|acq_data_in[171]
C1_acq_data_in[171] = INPUT();


--C1_acq_data_in[172] is sld_signaltap:auto_signaltap_0|acq_data_in[172]
C1_acq_data_in[172] = INPUT();


--C1_acq_data_in[173] is sld_signaltap:auto_signaltap_0|acq_data_in[173]
C1_acq_data_in[173] = INPUT();


--C1_acq_data_in[174] is sld_signaltap:auto_signaltap_0|acq_data_in[174]
C1_acq_data_in[174] = INPUT();


--C1_acq_data_in[175] is sld_signaltap:auto_signaltap_0|acq_data_in[175]
C1_acq_data_in[175] = INPUT();


--C1_acq_data_in[176] is sld_signaltap:auto_signaltap_0|acq_data_in[176]
C1_acq_data_in[176] = INPUT();


--C1_acq_data_in[177] is sld_signaltap:auto_signaltap_0|acq_data_in[177]
C1_acq_data_in[177] = INPUT();


--C1_acq_data_in[178] is sld_signaltap:auto_signaltap_0|acq_data_in[178]
C1_acq_data_in[178] = INPUT();


--C1_acq_data_in[179] is sld_signaltap:auto_signaltap_0|acq_data_in[179]
C1_acq_data_in[179] = INPUT();


--C1_acq_data_in[180] is sld_signaltap:auto_signaltap_0|acq_data_in[180]
C1_acq_data_in[180] = INPUT();


--C1_acq_data_in[181] is sld_signaltap:auto_signaltap_0|acq_data_in[181]
C1_acq_data_in[181] = INPUT();


--C1_acq_data_in[182] is sld_signaltap:auto_signaltap_0|acq_data_in[182]
C1_acq_data_in[182] = INPUT();


--C1_acq_data_in[183] is sld_signaltap:auto_signaltap_0|acq_data_in[183]
C1_acq_data_in[183] = INPUT();


--C1_acq_data_in[184] is sld_signaltap:auto_signaltap_0|acq_data_in[184]
C1_acq_data_in[184] = INPUT();


--C1_acq_data_in[185] is sld_signaltap:auto_signaltap_0|acq_data_in[185]
C1_acq_data_in[185] = INPUT();


--C1_acq_data_in[186] is sld_signaltap:auto_signaltap_0|acq_data_in[186]
C1_acq_data_in[186] = INPUT();


--C1_acq_data_in[187] is sld_signaltap:auto_signaltap_0|acq_data_in[187]
C1_acq_data_in[187] = INPUT();


--C1_acq_data_in[188] is sld_signaltap:auto_signaltap_0|acq_data_in[188]
C1_acq_data_in[188] = INPUT();


--C1_acq_data_in[189] is sld_signaltap:auto_signaltap_0|acq_data_in[189]
C1_acq_data_in[189] = INPUT();


--C1_acq_data_in[190] is sld_signaltap:auto_signaltap_0|acq_data_in[190]
C1_acq_data_in[190] = INPUT();


--C1_acq_data_in[191] is sld_signaltap:auto_signaltap_0|acq_data_in[191]
C1_acq_data_in[191] = INPUT();


--C1_acq_data_in[192] is sld_signaltap:auto_signaltap_0|acq_data_in[192]
C1_acq_data_in[192] = INPUT();


--C1_acq_data_in[193] is sld_signaltap:auto_signaltap_0|acq_data_in[193]
C1_acq_data_in[193] = INPUT();


--C1_acq_data_in[194] is sld_signaltap:auto_signaltap_0|acq_data_in[194]
C1_acq_data_in[194] = INPUT();


--C1_acq_data_in[195] is sld_signaltap:auto_signaltap_0|acq_data_in[195]
C1_acq_data_in[195] = INPUT();


--C1_acq_data_in[196] is sld_signaltap:auto_signaltap_0|acq_data_in[196]
C1_acq_data_in[196] = INPUT();


--C1_acq_data_in[197] is sld_signaltap:auto_signaltap_0|acq_data_in[197]
C1_acq_data_in[197] = INPUT();


--C1_acq_data_in[198] is sld_signaltap:auto_signaltap_0|acq_data_in[198]
C1_acq_data_in[198] = INPUT();


--C1_acq_data_in[199] is sld_signaltap:auto_signaltap_0|acq_data_in[199]
C1_acq_data_in[199] = INPUT();


--C1_acq_data_in[200] is sld_signaltap:auto_signaltap_0|acq_data_in[200]
C1_acq_data_in[200] = INPUT();


--C1_acq_data_in[201] is sld_signaltap:auto_signaltap_0|acq_data_in[201]
C1_acq_data_in[201] = INPUT();


--C1_acq_data_in[202] is sld_signaltap:auto_signaltap_0|acq_data_in[202]
C1_acq_data_in[202] = INPUT();


--C1_acq_data_in[203] is sld_signaltap:auto_signaltap_0|acq_data_in[203]
C1_acq_data_in[203] = INPUT();


--C1_acq_data_in[204] is sld_signaltap:auto_signaltap_0|acq_data_in[204]
C1_acq_data_in[204] = INPUT();


--C1_acq_data_in[205] is sld_signaltap:auto_signaltap_0|acq_data_in[205]
C1_acq_data_in[205] = INPUT();


--C1_acq_data_in[206] is sld_signaltap:auto_signaltap_0|acq_data_in[206]
C1_acq_data_in[206] = INPUT();


--C1_acq_data_in[207] is sld_signaltap:auto_signaltap_0|acq_data_in[207]
C1_acq_data_in[207] = INPUT();


--C1_acq_data_in[208] is sld_signaltap:auto_signaltap_0|acq_data_in[208]
C1_acq_data_in[208] = INPUT();


--C1_acq_data_in[209] is sld_signaltap:auto_signaltap_0|acq_data_in[209]
C1_acq_data_in[209] = INPUT();


--C1_acq_data_in[210] is sld_signaltap:auto_signaltap_0|acq_data_in[210]
C1_acq_data_in[210] = INPUT();


--C1_acq_data_in[211] is sld_signaltap:auto_signaltap_0|acq_data_in[211]
C1_acq_data_in[211] = INPUT();


--C1_acq_data_in[212] is sld_signaltap:auto_signaltap_0|acq_data_in[212]
C1_acq_data_in[212] = INPUT();


--C1_acq_data_in[213] is sld_signaltap:auto_signaltap_0|acq_data_in[213]
C1_acq_data_in[213] = INPUT();


--C1_acq_data_in[214] is sld_signaltap:auto_signaltap_0|acq_data_in[214]
C1_acq_data_in[214] = INPUT();


--C1_acq_data_in[215] is sld_signaltap:auto_signaltap_0|acq_data_in[215]
C1_acq_data_in[215] = INPUT();


--C1_acq_data_in[216] is sld_signaltap:auto_signaltap_0|acq_data_in[216]
C1_acq_data_in[216] = INPUT();


--C1_acq_data_in[217] is sld_signaltap:auto_signaltap_0|acq_data_in[217]
C1_acq_data_in[217] = INPUT();


--C1_acq_data_in[218] is sld_signaltap:auto_signaltap_0|acq_data_in[218]
C1_acq_data_in[218] = INPUT();


--C1_acq_data_in[219] is sld_signaltap:auto_signaltap_0|acq_data_in[219]
C1_acq_data_in[219] = INPUT();


--C1_acq_data_in[220] is sld_signaltap:auto_signaltap_0|acq_data_in[220]
C1_acq_data_in[220] = INPUT();


--C1_acq_data_in[221] is sld_signaltap:auto_signaltap_0|acq_data_in[221]
C1_acq_data_in[221] = INPUT();


--C1_acq_data_in[222] is sld_signaltap:auto_signaltap_0|acq_data_in[222]
C1_acq_data_in[222] = INPUT();


--C1_acq_data_in[223] is sld_signaltap:auto_signaltap_0|acq_data_in[223]
C1_acq_data_in[223] = INPUT();


--C1_acq_data_in[224] is sld_signaltap:auto_signaltap_0|acq_data_in[224]
C1_acq_data_in[224] = INPUT();


--C1_acq_data_in[225] is sld_signaltap:auto_signaltap_0|acq_data_in[225]
C1_acq_data_in[225] = INPUT();


--C1_acq_data_in[226] is sld_signaltap:auto_signaltap_0|acq_data_in[226]
C1_acq_data_in[226] = INPUT();


--C1_acq_data_in[227] is sld_signaltap:auto_signaltap_0|acq_data_in[227]
C1_acq_data_in[227] = INPUT();


--C1_acq_data_in[228] is sld_signaltap:auto_signaltap_0|acq_data_in[228]
C1_acq_data_in[228] = INPUT();


--C1_acq_data_in[229] is sld_signaltap:auto_signaltap_0|acq_data_in[229]
C1_acq_data_in[229] = INPUT();


--C1_acq_data_in[230] is sld_signaltap:auto_signaltap_0|acq_data_in[230]
C1_acq_data_in[230] = INPUT();


--C1_acq_data_in[231] is sld_signaltap:auto_signaltap_0|acq_data_in[231]
C1_acq_data_in[231] = INPUT();


--C1_acq_data_in[232] is sld_signaltap:auto_signaltap_0|acq_data_in[232]
C1_acq_data_in[232] = INPUT();


--C1_acq_data_in[233] is sld_signaltap:auto_signaltap_0|acq_data_in[233]
C1_acq_data_in[233] = INPUT();


--C1_acq_data_in[234] is sld_signaltap:auto_signaltap_0|acq_data_in[234]
C1_acq_data_in[234] = INPUT();


--C1_acq_data_in[235] is sld_signaltap:auto_signaltap_0|acq_data_in[235]
C1_acq_data_in[235] = INPUT();


--C1_acq_data_in[236] is sld_signaltap:auto_signaltap_0|acq_data_in[236]
C1_acq_data_in[236] = INPUT();


--C1_acq_data_in[237] is sld_signaltap:auto_signaltap_0|acq_data_in[237]
C1_acq_data_in[237] = INPUT();


--C1_acq_data_in[238] is sld_signaltap:auto_signaltap_0|acq_data_in[238]
C1_acq_data_in[238] = INPUT();


--C1_acq_data_in[239] is sld_signaltap:auto_signaltap_0|acq_data_in[239]
C1_acq_data_in[239] = INPUT();


--C1_acq_data_in[240] is sld_signaltap:auto_signaltap_0|acq_data_in[240]
C1_acq_data_in[240] = INPUT();


--C1_acq_data_in[241] is sld_signaltap:auto_signaltap_0|acq_data_in[241]
C1_acq_data_in[241] = INPUT();


--C1_acq_data_in[242] is sld_signaltap:auto_signaltap_0|acq_data_in[242]
C1_acq_data_in[242] = INPUT();


--C1_acq_data_in[243] is sld_signaltap:auto_signaltap_0|acq_data_in[243]
C1_acq_data_in[243] = INPUT();


--C1_acq_data_in[244] is sld_signaltap:auto_signaltap_0|acq_data_in[244]
C1_acq_data_in[244] = INPUT();


--C1_acq_data_in[245] is sld_signaltap:auto_signaltap_0|acq_data_in[245]
C1_acq_data_in[245] = INPUT();


--C1_acq_data_in[246] is sld_signaltap:auto_signaltap_0|acq_data_in[246]
C1_acq_data_in[246] = INPUT();


--C1_acq_data_in[247] is sld_signaltap:auto_signaltap_0|acq_data_in[247]
C1_acq_data_in[247] = INPUT();


--C1_acq_data_in[248] is sld_signaltap:auto_signaltap_0|acq_data_in[248]
C1_acq_data_in[248] = INPUT();


--C1_acq_data_in[249] is sld_signaltap:auto_signaltap_0|acq_data_in[249]
C1_acq_data_in[249] = INPUT();


--C1_acq_data_in[250] is sld_signaltap:auto_signaltap_0|acq_data_in[250]
C1_acq_data_in[250] = INPUT();


--C1_acq_data_in[251] is sld_signaltap:auto_signaltap_0|acq_data_in[251]
C1_acq_data_in[251] = INPUT();


--C1_acq_data_in[252] is sld_signaltap:auto_signaltap_0|acq_data_in[252]
C1_acq_data_in[252] = INPUT();


--C1_acq_data_in[253] is sld_signaltap:auto_signaltap_0|acq_data_in[253]
C1_acq_data_in[253] = INPUT();


--C1_acq_data_in[254] is sld_signaltap:auto_signaltap_0|acq_data_in[254]
C1_acq_data_in[254] = INPUT();


--C1_acq_data_in[255] is sld_signaltap:auto_signaltap_0|acq_data_in[255]
C1_acq_data_in[255] = INPUT();


--C1_acq_data_in[256] is sld_signaltap:auto_signaltap_0|acq_data_in[256]
C1_acq_data_in[256] = INPUT();


--C1_acq_data_in[257] is sld_signaltap:auto_signaltap_0|acq_data_in[257]
C1_acq_data_in[257] = INPUT();


--C1_acq_data_in[258] is sld_signaltap:auto_signaltap_0|acq_data_in[258]
C1_acq_data_in[258] = INPUT();


--C1_acq_data_in[259] is sld_signaltap:auto_signaltap_0|acq_data_in[259]
C1_acq_data_in[259] = INPUT();


--C1_acq_data_in[260] is sld_signaltap:auto_signaltap_0|acq_data_in[260]
C1_acq_data_in[260] = INPUT();


--C1_acq_data_in[261] is sld_signaltap:auto_signaltap_0|acq_data_in[261]
C1_acq_data_in[261] = INPUT();


--C1_acq_data_in[262] is sld_signaltap:auto_signaltap_0|acq_data_in[262]
C1_acq_data_in[262] = INPUT();


--C1_acq_data_in[263] is sld_signaltap:auto_signaltap_0|acq_data_in[263]
C1_acq_data_in[263] = INPUT();


--C1_acq_data_in[264] is sld_signaltap:auto_signaltap_0|acq_data_in[264]
C1_acq_data_in[264] = INPUT();


--C1_acq_data_in[265] is sld_signaltap:auto_signaltap_0|acq_data_in[265]
C1_acq_data_in[265] = INPUT();


--C1_acq_data_in[266] is sld_signaltap:auto_signaltap_0|acq_data_in[266]
C1_acq_data_in[266] = INPUT();


--C1_acq_data_in[267] is sld_signaltap:auto_signaltap_0|acq_data_in[267]
C1_acq_data_in[267] = INPUT();


--C1_acq_data_in[268] is sld_signaltap:auto_signaltap_0|acq_data_in[268]
C1_acq_data_in[268] = INPUT();


--C1_acq_data_in[269] is sld_signaltap:auto_signaltap_0|acq_data_in[269]
C1_acq_data_in[269] = INPUT();


--C1_acq_data_in[270] is sld_signaltap:auto_signaltap_0|acq_data_in[270]
C1_acq_data_in[270] = INPUT();


--C1_acq_data_in[271] is sld_signaltap:auto_signaltap_0|acq_data_in[271]
C1_acq_data_in[271] = INPUT();


--C1_acq_data_in[272] is sld_signaltap:auto_signaltap_0|acq_data_in[272]
C1_acq_data_in[272] = INPUT();


--C1_acq_data_in[273] is sld_signaltap:auto_signaltap_0|acq_data_in[273]
C1_acq_data_in[273] = INPUT();


--C1_acq_data_in[274] is sld_signaltap:auto_signaltap_0|acq_data_in[274]
C1_acq_data_in[274] = INPUT();


--C1_acq_data_in[275] is sld_signaltap:auto_signaltap_0|acq_data_in[275]
C1_acq_data_in[275] = INPUT();


--C1_acq_data_in[276] is sld_signaltap:auto_signaltap_0|acq_data_in[276]
C1_acq_data_in[276] = INPUT();


--C1_acq_data_in[277] is sld_signaltap:auto_signaltap_0|acq_data_in[277]
C1_acq_data_in[277] = INPUT();


--C1_acq_data_in[278] is sld_signaltap:auto_signaltap_0|acq_data_in[278]
C1_acq_data_in[278] = INPUT();


--C1_acq_data_in[279] is sld_signaltap:auto_signaltap_0|acq_data_in[279]
C1_acq_data_in[279] = INPUT();


--C1_acq_data_in[280] is sld_signaltap:auto_signaltap_0|acq_data_in[280]
C1_acq_data_in[280] = INPUT();


--C1_acq_data_in[281] is sld_signaltap:auto_signaltap_0|acq_data_in[281]
C1_acq_data_in[281] = INPUT();


--C1_acq_data_in[282] is sld_signaltap:auto_signaltap_0|acq_data_in[282]
C1_acq_data_in[282] = INPUT();


--C1_acq_data_in[283] is sld_signaltap:auto_signaltap_0|acq_data_in[283]
C1_acq_data_in[283] = INPUT();


--C1_acq_data_in[284] is sld_signaltap:auto_signaltap_0|acq_data_in[284]
C1_acq_data_in[284] = INPUT();


--C1_acq_data_in[285] is sld_signaltap:auto_signaltap_0|acq_data_in[285]
C1_acq_data_in[285] = INPUT();


--C1_acq_data_in[286] is sld_signaltap:auto_signaltap_0|acq_data_in[286]
C1_acq_data_in[286] = INPUT();


--C1_acq_data_in[287] is sld_signaltap:auto_signaltap_0|acq_data_in[287]
C1_acq_data_in[287] = INPUT();


--C1_acq_data_in[288] is sld_signaltap:auto_signaltap_0|acq_data_in[288]
C1_acq_data_in[288] = INPUT();


--C1_acq_data_in[289] is sld_signaltap:auto_signaltap_0|acq_data_in[289]
C1_acq_data_in[289] = INPUT();


--C1_acq_data_in[290] is sld_signaltap:auto_signaltap_0|acq_data_in[290]
C1_acq_data_in[290] = INPUT();


--C1_acq_data_in[291] is sld_signaltap:auto_signaltap_0|acq_data_in[291]
C1_acq_data_in[291] = INPUT();


--C1_acq_data_in[292] is sld_signaltap:auto_signaltap_0|acq_data_in[292]
C1_acq_data_in[292] = INPUT();


--C1_acq_data_in[293] is sld_signaltap:auto_signaltap_0|acq_data_in[293]
C1_acq_data_in[293] = INPUT();


--C1_acq_data_in[294] is sld_signaltap:auto_signaltap_0|acq_data_in[294]
C1_acq_data_in[294] = INPUT();


--C1_acq_data_in[295] is sld_signaltap:auto_signaltap_0|acq_data_in[295]
C1_acq_data_in[295] = INPUT();


--C1_acq_data_in[296] is sld_signaltap:auto_signaltap_0|acq_data_in[296]
C1_acq_data_in[296] = INPUT();


--C1_acq_data_in[297] is sld_signaltap:auto_signaltap_0|acq_data_in[297]
C1_acq_data_in[297] = INPUT();


--C1_acq_data_in[298] is sld_signaltap:auto_signaltap_0|acq_data_in[298]
C1_acq_data_in[298] = INPUT();


--C1_acq_data_in[299] is sld_signaltap:auto_signaltap_0|acq_data_in[299]
C1_acq_data_in[299] = INPUT();


--C1_acq_data_in[300] is sld_signaltap:auto_signaltap_0|acq_data_in[300]
C1_acq_data_in[300] = INPUT();


--C1_acq_data_in[301] is sld_signaltap:auto_signaltap_0|acq_data_in[301]
C1_acq_data_in[301] = INPUT();


--C1_acq_data_in[302] is sld_signaltap:auto_signaltap_0|acq_data_in[302]
C1_acq_data_in[302] = INPUT();


--C1_acq_data_in[303] is sld_signaltap:auto_signaltap_0|acq_data_in[303]
C1_acq_data_in[303] = INPUT();


--C1_acq_data_in[304] is sld_signaltap:auto_signaltap_0|acq_data_in[304]
C1_acq_data_in[304] = INPUT();


--C1_acq_data_in[305] is sld_signaltap:auto_signaltap_0|acq_data_in[305]
C1_acq_data_in[305] = INPUT();


--C1_acq_data_in[306] is sld_signaltap:auto_signaltap_0|acq_data_in[306]
C1_acq_data_in[306] = INPUT();


--C1_acq_data_in[307] is sld_signaltap:auto_signaltap_0|acq_data_in[307]
C1_acq_data_in[307] = INPUT();


--C1_acq_data_in[308] is sld_signaltap:auto_signaltap_0|acq_data_in[308]
C1_acq_data_in[308] = INPUT();


--C1_acq_data_in[309] is sld_signaltap:auto_signaltap_0|acq_data_in[309]
C1_acq_data_in[309] = INPUT();


--C1_acq_data_in[310] is sld_signaltap:auto_signaltap_0|acq_data_in[310]
C1_acq_data_in[310] = INPUT();


--C1_acq_data_in[311] is sld_signaltap:auto_signaltap_0|acq_data_in[311]
C1_acq_data_in[311] = INPUT();


--C1_acq_data_in[312] is sld_signaltap:auto_signaltap_0|acq_data_in[312]
C1_acq_data_in[312] = INPUT();


--C1_acq_data_in[313] is sld_signaltap:auto_signaltap_0|acq_data_in[313]
C1_acq_data_in[313] = INPUT();


--C1_acq_data_in[314] is sld_signaltap:auto_signaltap_0|acq_data_in[314]
C1_acq_data_in[314] = INPUT();


--C1_acq_data_in[315] is sld_signaltap:auto_signaltap_0|acq_data_in[315]
C1_acq_data_in[315] = INPUT();


--C1_acq_data_in[316] is sld_signaltap:auto_signaltap_0|acq_data_in[316]
C1_acq_data_in[316] = INPUT();


--C1_acq_data_in[317] is sld_signaltap:auto_signaltap_0|acq_data_in[317]
C1_acq_data_in[317] = INPUT();


--C1_acq_data_in[318] is sld_signaltap:auto_signaltap_0|acq_data_in[318]
C1_acq_data_in[318] = INPUT();


--C1_acq_data_in[319] is sld_signaltap:auto_signaltap_0|acq_data_in[319]
C1_acq_data_in[319] = INPUT();


--C1_acq_data_in[320] is sld_signaltap:auto_signaltap_0|acq_data_in[320]
C1_acq_data_in[320] = INPUT();


--C1_acq_data_in[321] is sld_signaltap:auto_signaltap_0|acq_data_in[321]
C1_acq_data_in[321] = INPUT();


--C1_acq_data_in[322] is sld_signaltap:auto_signaltap_0|acq_data_in[322]
C1_acq_data_in[322] = INPUT();


--C1_acq_data_in[323] is sld_signaltap:auto_signaltap_0|acq_data_in[323]
C1_acq_data_in[323] = INPUT();


--C1_acq_data_in[324] is sld_signaltap:auto_signaltap_0|acq_data_in[324]
C1_acq_data_in[324] = INPUT();


--C1_acq_data_in[325] is sld_signaltap:auto_signaltap_0|acq_data_in[325]
C1_acq_data_in[325] = INPUT();


--C1_acq_data_in[326] is sld_signaltap:auto_signaltap_0|acq_data_in[326]
C1_acq_data_in[326] = INPUT();


--C1_acq_data_in[327] is sld_signaltap:auto_signaltap_0|acq_data_in[327]
C1_acq_data_in[327] = INPUT();


--C1_acq_data_in[328] is sld_signaltap:auto_signaltap_0|acq_data_in[328]
C1_acq_data_in[328] = INPUT();


--C1_acq_data_in[329] is sld_signaltap:auto_signaltap_0|acq_data_in[329]
C1_acq_data_in[329] = INPUT();


--C1_acq_data_in[330] is sld_signaltap:auto_signaltap_0|acq_data_in[330]
C1_acq_data_in[330] = INPUT();


--C1_acq_data_in[331] is sld_signaltap:auto_signaltap_0|acq_data_in[331]
C1_acq_data_in[331] = INPUT();


--C1_acq_data_in[332] is sld_signaltap:auto_signaltap_0|acq_data_in[332]
C1_acq_data_in[332] = INPUT();


--C1_acq_data_in[333] is sld_signaltap:auto_signaltap_0|acq_data_in[333]
C1_acq_data_in[333] = INPUT();


--C1_acq_data_in[334] is sld_signaltap:auto_signaltap_0|acq_data_in[334]
C1_acq_data_in[334] = INPUT();


--C1_acq_data_in[335] is sld_signaltap:auto_signaltap_0|acq_data_in[335]
C1_acq_data_in[335] = INPUT();


--C1_acq_data_in[336] is sld_signaltap:auto_signaltap_0|acq_data_in[336]
C1_acq_data_in[336] = INPUT();


--C1_acq_data_in[337] is sld_signaltap:auto_signaltap_0|acq_data_in[337]
C1_acq_data_in[337] = INPUT();


--C1_acq_data_in[338] is sld_signaltap:auto_signaltap_0|acq_data_in[338]
C1_acq_data_in[338] = INPUT();


--C1_acq_data_in[339] is sld_signaltap:auto_signaltap_0|acq_data_in[339]
C1_acq_data_in[339] = INPUT();


--C1_acq_data_in[340] is sld_signaltap:auto_signaltap_0|acq_data_in[340]
C1_acq_data_in[340] = INPUT();


--C1_acq_trigger_in[0] is sld_signaltap:auto_signaltap_0|acq_trigger_in[0]
C1_acq_trigger_in[0] = INPUT();


--C1_acq_trigger_in[1] is sld_signaltap:auto_signaltap_0|acq_trigger_in[1]
C1_acq_trigger_in[1] = INPUT();


--W1_trigger_out_mode_ff is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|trigger_out_mode_ff
--register power-up is low

W1_trigger_out_mode_ff = AMPP_FUNCTION(C1_acq_clk, W1L1616);


--DB1_\buffer_manager:is_buffer_wrapped is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:is_buffer_wrapped
--register power-up is low

DB1_\buffer_manager:is_buffer_wrapped = AMPP_FUNCTION(C1_acq_clk, DB1L192, !W1_reset_all, W1_collect_data);


--W1_buffer_write_enable_delayed is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_enable_delayed
--register power-up is low

W1_buffer_write_enable_delayed = AMPP_FUNCTION(C1_acq_clk, W1L1509);


--DB1_\buffer_manager:done is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:done
--register power-up is low

DB1_\buffer_manager:done = AMPP_FUNCTION(C1_acq_clk, DB1L176, !W1_reset_all, W1_collect_data);


--W1L1547 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|state_status[2]~0
W1L1547 = AMPP_FUNCTION(!DB1_\buffer_manager:collecting_post_data_var, !W1_run, !DB1_\buffer_manager:is_buffer_wrapped, !W1_buffer_write_enable_delayed, !DB1_\buffer_manager:done);


--UB1_last_level_delayed is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|last_level_delayed
--register power-up is low

UB1_last_level_delayed = AMPP_FUNCTION(C1_acq_clk, UB1L2, !W1_reset_all);


--CB3_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[0]
--register power-up is low

CB3_dffs[0] = AMPP_FUNCTION(C1_raw_tck, CB3_dffs[1], !W1_reset_all, W1_trigger_setup_ena);


--W1L1614 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|trigger_out_ff~0
W1L1614 = AMPP_FUNCTION(!W1_trigger_out_ff, !W1_trigger_out_mode_ff, !W1L1547, !UB1_last_level_delayed, !CB3_dffs[0]);


--W1L1612 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_internal~6
W1L1612 = AMPP_FUNCTION(!CB8_dffs[0], !W1L1549, !W1_bypass_reg_out, !W1L1606, !W1L1608, !W1L1609);


--AB1L16 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr~0
AB1L16 = AMPP_FUNCTION(!C1_ir_in[9], !W1_tdo_crc_val_shift_reg[0], !W1L1612, !W1L1610, !AB1_lfsr[0], !AB1_lfsr[1]);


--W1_tdo_crc_val_calc_reset is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_calc_reset
W1_tdo_crc_val_calc_reset = AMPP_FUNCTION(!C1_ir_in[9], !C1_jtag_state_cdr, !C1_usr1, !C1_ena);


--AB1L12 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr[9]~1
AB1L12 = AMPP_FUNCTION(!C1_ir_in[9], !C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !W1L1539);


--DB1_final_trigger_set is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|final_trigger_set
--register power-up is low

DB1_final_trigger_set = AMPP_FUNCTION(C1_acq_clk, GND, !W1_reset_all, DB1L186);


--DB1_modified_post_count[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[9]
--register power-up is low

DB1_modified_post_count[9] = AMPP_FUNCTION(C1_acq_clk, DB1L224, !W1_reset_all, DB1L186);


--DB1_modified_post_count[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[10]
--register power-up is low

DB1_modified_post_count[10] = AMPP_FUNCTION(C1_acq_clk, DB1L226, !W1_reset_all, DB1L186);


--DB1L180 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal2~0
DB1L180 = AMPP_FUNCTION(!DB1_modified_post_count[9], !DB1_counter[9], !DB1_modified_post_count[10], !DB1_counter[10]);


--DB1_modified_post_count[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[6]
--register power-up is low

DB1_modified_post_count[6] = AMPP_FUNCTION(C1_acq_clk, DB1L218, !W1_reset_all, DB1L186);


--DB1_modified_post_count[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[7]
--register power-up is low

DB1_modified_post_count[7] = AMPP_FUNCTION(C1_acq_clk, DB1L220, !W1_reset_all, DB1L186);


--DB1_modified_post_count[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[8]
--register power-up is low

DB1_modified_post_count[8] = AMPP_FUNCTION(C1_acq_clk, DB1L222, !W1_reset_all, DB1L186);


--DB1L181 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal2~1
DB1L181 = AMPP_FUNCTION(!DB1_modified_post_count[6], !DB1_counter[6], !DB1_modified_post_count[7], !DB1_counter[7], !DB1_modified_post_count[8], !DB1_counter[8]);


--DB1_modified_post_count[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[0]
--register power-up is low

DB1_modified_post_count[0] = AMPP_FUNCTION(C1_acq_clk, CB4_dffs[0], !W1_reset_all, DB1L186);


--DB1_modified_post_count[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[1]
--register power-up is low

DB1_modified_post_count[1] = AMPP_FUNCTION(C1_acq_clk, DB1L208, !W1_reset_all, DB1L186);


--DB1_modified_post_count[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[2]
--register power-up is low

DB1_modified_post_count[2] = AMPP_FUNCTION(C1_acq_clk, DB1L210, !W1_reset_all, DB1L186);


--DB1L182 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal2~2
DB1L182 = AMPP_FUNCTION(!DB1_modified_post_count[0], !DB1_counter[0], !DB1_modified_post_count[1], !DB1_counter[1], !DB1_modified_post_count[2], !DB1_counter[2]);


--DB1_modified_post_count[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[3]
--register power-up is low

DB1_modified_post_count[3] = AMPP_FUNCTION(C1_acq_clk, DB1L212, !W1_reset_all, DB1L186);


--DB1_modified_post_count[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[4]
--register power-up is low

DB1_modified_post_count[4] = AMPP_FUNCTION(C1_acq_clk, DB1L214, !W1_reset_all, DB1L186);


--DB1_modified_post_count[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[5]
--register power-up is low

DB1_modified_post_count[5] = AMPP_FUNCTION(C1_acq_clk, DB1L216, !W1_reset_all, DB1L186);


--DB1L183 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal2~3
DB1L183 = AMPP_FUNCTION(!DB1_modified_post_count[3], !DB1_counter[3], !DB1_modified_post_count[4], !DB1_counter[4], !DB1_modified_post_count[5], !DB1_counter[5]);


--DB1L176 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|done~0
DB1L176 = AMPP_FUNCTION(!DB1_\buffer_manager:done, !DB1_final_trigger_set, !DB1L180, !DB1L181, !DB1L182, !DB1L183);


--DB1L177 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal0~0
DB1L177 = AMPP_FUNCTION(!DB1_counter[0], !DB1_counter[1], !DB1_counter[2], !DB1_counter[4], !DB1_counter[7], !DB1_counter[8]);


--DB1L178 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal0~1
DB1L178 = AMPP_FUNCTION(!DB1_counter[3], !DB1_counter[5], !DB1_counter[6], !DB1_counter[9], !DB1_counter[10]);


--DB1L179 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal0~2
DB1L179 = AMPP_FUNCTION(!DB1L177, !DB1L178);


--DB1L151 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|collecting_post_data_var~0
DB1L151 = AMPP_FUNCTION(!DB1L176, !DB1L179);


--W1_condition_delay_reg[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|condition_delay_reg[3]
--register power-up is low

W1_condition_delay_reg[3] = AMPP_FUNCTION(C1_acq_clk, W1_condition_delay_reg[2]);


--W1_collect_data is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|collect_data
W1_collect_data = AMPP_FUNCTION(!W1_run, !W1_condition_delay_reg[3]);


--CB8_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[2]
--register power-up is low

CB8_dffs[2] = AMPP_FUNCTION(C1_raw_tck, CB8L3, W1L1549);


--CB8L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~1
CB8L2 = AMPP_FUNCTION(!W1_run, !W1L1548, !W1_buffer_write_enable_delayed, !DB1_\buffer_manager:done, !CB8_dffs[2]);


--C1_clr is sld_signaltap:auto_signaltap_0|clr
C1_clr = INPUT();


--W1L1543 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|reset_all~0
W1L1543 = AMPP_FUNCTION(!C1_ir_in[0], !C1_clr);


--Q1L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter~0
Q1L7 = AMPP_FUNCTION(!C1_usr1, !Q1_word_counter[0], !Q1_word_counter[1], !C1_jtag_state_udr, !Q1_word_counter[2], !Q1_word_counter[3]);


--Q1L6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter[3]~1
Q1L6 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !C1_jtag_state_udr);


--Q1L8 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter~2
Q1L8 = AMPP_FUNCTION(!C1_usr1, !Q1_word_counter[0], !Q1_word_counter[1], !C1_jtag_state_udr);


--Q1L9 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter~3
Q1L9 = AMPP_FUNCTION(!C1_usr1, !Q1_word_counter[0], !Q1_word_counter[1], !C1_jtag_state_udr, !Q1_word_counter[2]);


--Q1L10 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|word_counter~4
Q1L10 = AMPP_FUNCTION(!C1_usr1, !Q1_word_counter[0], !Q1_word_counter[1], !C1_jtag_state_udr, !Q1_word_counter[2], !Q1_word_counter[3]);


--C1_crc[1] is sld_signaltap:auto_signaltap_0|crc[1]
C1_crc[1] = INPUT();


--C1_crc[5] is sld_signaltap:auto_signaltap_0|crc[5]
C1_crc[5] = INPUT();


--C1_crc[9] is sld_signaltap:auto_signaltap_0|crc[9]
C1_crc[9] = INPUT();


--C1_crc[13] is sld_signaltap:auto_signaltap_0|crc[13]
C1_crc[13] = INPUT();


--Q1L22 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~6
Q1L22 = AMPP_FUNCTION(!C1_crc[1], !C1_crc[5], !C1_crc[9], !C1_crc[13], !Q1_word_counter[0], !Q1_word_counter[1]);


--Q1_WORD_SR[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[2]
--register power-up is low

Q1_WORD_SR[2] = AMPP_FUNCTION(C1_raw_tck, Q1L27, Q1L18);


--C1_crc[17] is sld_signaltap:auto_signaltap_0|crc[17]
C1_crc[17] = INPUT();


--C1_crc[21] is sld_signaltap:auto_signaltap_0|crc[21]
C1_crc[21] = INPUT();


--C1_crc[25] is sld_signaltap:auto_signaltap_0|crc[25]
C1_crc[25] = INPUT();


--C1_crc[29] is sld_signaltap:auto_signaltap_0|crc[29]
C1_crc[29] = INPUT();


--Q1L23 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~7
Q1L23 = AMPP_FUNCTION(!C1_crc[17], !C1_crc[21], !C1_crc[25], !C1_crc[29], !Q1_word_counter[0], !Q1_word_counter[1]);


--Q1L24 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~8
Q1L24 = AMPP_FUNCTION(!Q1L16, !Q1L17, !Q1L22, !Q1_WORD_SR[2], !Q1L23);


--DB1_\buffer_manager:base_address[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:base_address[0]
--register power-up is low

DB1_\buffer_manager:base_address[0] = AMPP_FUNCTION(C1_acq_clk, DB1L150, !W1_reset_all, W1_collect_data);


--DB1L227 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|process_0~0
DB1L227 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178);


--DB1L228 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|process_0~1
DB1L228 = AMPP_FUNCTION(!DB1_final_trigger_set, !DB1L180, !DB1L181, !DB1L182, !DB1L183, !DB1L227);


--DB1L230 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|segment_shift_var~0
DB1L230 = AMPP_FUNCTION(!DB1_final_trigger_set, !DB1L180, !DB1L181, !DB1L182, !DB1L183, !DB1L227);


--DB1L188 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped_once_sig~0
DB1L188 = AMPP_FUNCTION(!DB1_is_buffer_wrapped_once_sig, !W1_collect_data, !DB1L176, !DB1_\buffer_manager:base_address[0], !DB1L228, !DB1L230);


--CB4_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[2]
--register power-up is low

CB4_dffs[2] = AMPP_FUNCTION(C1_raw_tck, CB4_dffs[3], !W1_reset_all, W1_trigger_setup_ena);


--Y1_cells[1][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][0]
--register power-up is low

Y1_cells[1][0] = AMPP_FUNCTION(C1_acq_clk, W1_segment_wrapped_delayed, RB1L2);


--Y1_cells[0][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][0]
--register power-up is low

Y1_cells[0][0] = AMPP_FUNCTION(C1_acq_clk, W1_segment_wrapped_delayed, RB1L1);


--Y1_xraddr[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|xraddr[0]
--register power-up is low

Y1_xraddr[0] = AMPP_FUNCTION(C1_raw_tck, LB1_counter_reg_bit[0], C1_ir_in[7]);


--X1_status_offload_shift_ena is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|status_offload_shift_ena
X1_status_offload_shift_ena = AMPP_FUNCTION(!C1_ir_in[7], !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--JB1_cout_actual is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_advance_pointer_counter|cntr_u8i:auto_generated|cout_actual
JB1_cout_actual = AMPP_FUNCTION(!X1L6, !JB1L19);


--CB1_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[0]
--register power-up is low

CB1_dffs[0] = AMPP_FUNCTION(C1_raw_tck, CB1_dffs[1], !W1_reset_all, W1_trigger_setup_ena);


--W1L1616 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|trigger_out_mode_ff~0
W1L1616 = AMPP_FUNCTION(!C1_ir_in[1], !W1_trigger_out_mode_ff, !CB1_dffs[0]);


--DB1L189 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped~0
DB1L189 = AMPP_FUNCTION(!DB1_final_trigger_set, !DB1L180, !DB1L181, !DB1L182, !DB1L183, !DB1L71);


--DB1L190 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped~1
DB1L190 = AMPP_FUNCTION(!DB1L75, !DB1L79, !DB1L83, !DB1L87, !DB1L91);


--DB1L191 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped~2
DB1L191 = AMPP_FUNCTION(!DB1L95, !DB1L99, !DB1L103);


--DB1L192 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|is_buffer_wrapped~3
DB1L192 = AMPP_FUNCTION(!DB1_\buffer_manager:is_buffer_wrapped, !DB1L228, !DB1L67, !DB1L189, !DB1L190, !DB1L191);


--BB1_run is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|run
--register power-up is low

BB1_run = AMPP_FUNCTION(C1_acq_clk, BB1L2, !W1_reset_all);


--WB1_regoutff is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:1:sm1|regoutff
--register power-up is low

WB1_regoutff = AMPP_FUNCTION(C1_acq_clk, WB1L2);


--WB2_regoutff is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|regoutff
--register power-up is low

WB2_regoutff = AMPP_FUNCTION(C1_acq_clk, WB2L2);


--UB1L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|last_level_delayed~0
UB1L2 = AMPP_FUNCTION(!UB1_last_level_delayed, !BB1_run, !WB1_regoutff, !WB2_regoutff);


--CB3_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[1]
--register power-up is low

CB3_dffs[1] = AMPP_FUNCTION(C1_raw_tck, CB3_dffs[2], !W1_reset_all, W1_trigger_setup_ena);


--DB1L186 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|final_trigger_set~0
DB1L186 = AMPP_FUNCTION(!W1_run, !UB1_last_level_delayed, !CB3_dffs[0], !W1_condition_delay_reg[3], !DB1_final_trigger_set);


--DB1L165 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~0
DB1L165 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178, !DB1L107);


--DB1L229 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|process_0~2
DB1L229 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set);


--DB1L161 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter[7]~1
DB1L161 = AMPP_FUNCTION(!DB1L180, !DB1L181, !DB1L182, !DB1L183, !DB1L229, !DB1L179);


--DB1L166 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~2
DB1L166 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L179, !DB1L111);


--DB1L167 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~3
DB1L167 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178, !DB1L115);


--DB1L168 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~4
DB1L168 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178, !DB1L119);


--DB1L169 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~5
DB1L169 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178, !DB1L123);


--DB1L170 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~6
DB1L170 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178, !DB1L127);


--DB1L171 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~7
DB1L171 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178, !DB1L131);


--DB1L172 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~8
DB1L172 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178, !DB1L135);


--DB1L173 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~9
DB1L173 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178, !DB1L139);


--DB1L174 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~10
DB1L174 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178, !DB1L143);


--DB1L175 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|counter~11
DB1L175 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L177, !DB1L178, !DB1L147);


--W1_condition_delay_reg[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|condition_delay_reg[2]
--register power-up is low

W1_condition_delay_reg[2] = AMPP_FUNCTION(C1_acq_clk, W1_condition_delay_reg[1]);


--CB8_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[3]
--register power-up is low

CB8_dffs[3] = AMPP_FUNCTION(C1_raw_tck, CB8L4, W1L1549);


--CB8L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~2
CB8L3 = AMPP_FUNCTION(!W1L1548, !W1L1547, !CB8_dffs[3]);


--C1_crc[2] is sld_signaltap:auto_signaltap_0|crc[2]
C1_crc[2] = INPUT();


--C1_crc[6] is sld_signaltap:auto_signaltap_0|crc[6]
C1_crc[6] = INPUT();


--C1_crc[10] is sld_signaltap:auto_signaltap_0|crc[10]
C1_crc[10] = INPUT();


--C1_crc[14] is sld_signaltap:auto_signaltap_0|crc[14]
C1_crc[14] = INPUT();


--Q1L25 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~9
Q1L25 = AMPP_FUNCTION(!C1_crc[2], !C1_crc[6], !C1_crc[10], !C1_crc[14], !Q1_word_counter[0], !Q1_word_counter[1]);


--Q1_WORD_SR[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR[3]
--register power-up is low

Q1_WORD_SR[3] = AMPP_FUNCTION(C1_raw_tck, Q1L30, Q1L18);


--C1_crc[18] is sld_signaltap:auto_signaltap_0|crc[18]
C1_crc[18] = INPUT();


--C1_crc[22] is sld_signaltap:auto_signaltap_0|crc[22]
C1_crc[22] = INPUT();


--C1_crc[26] is sld_signaltap:auto_signaltap_0|crc[26]
C1_crc[26] = INPUT();


--C1_crc[30] is sld_signaltap:auto_signaltap_0|crc[30]
C1_crc[30] = INPUT();


--Q1L26 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~10
Q1L26 = AMPP_FUNCTION(!C1_crc[18], !C1_crc[22], !C1_crc[26], !C1_crc[30], !Q1_word_counter[0], !Q1_word_counter[1]);


--Q1L27 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~11
Q1L27 = AMPP_FUNCTION(!Q1L16, !Q1L17, !Q1L25, !Q1_WORD_SR[3], !Q1L26);


--DB1L195 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|last_buffer_write_address_sig[0]~0
DB1L195 = AMPP_FUNCTION(!W1_reset_all, !W1_run, !DB1_\buffer_manager:done, !W1_condition_delay_reg[3]);


--DB1L184 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|Equal2~4
DB1L184 = AMPP_FUNCTION(!DB1L180, !DB1L181, !DB1L182, !DB1L183);


--DB1L150 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|base_address~0
DB1L150 = AMPP_FUNCTION(!UB1_last_level_delayed, !CB3_dffs[0], !DB1_final_trigger_set, !DB1L184, !DB1_\buffer_manager:base_address[0], !DB1L179);


--CB4_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[3]
--register power-up is low

CB4_dffs[3] = AMPP_FUNCTION(C1_raw_tck, CB4_dffs[4], !W1_reset_all, W1_trigger_setup_ena);


--W1_segment_wrapped_delayed is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|segment_wrapped_delayed
--register power-up is low

W1_segment_wrapped_delayed = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:is_buffer_wrapped);


--W1_current_segment_delayed[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|current_segment_delayed[0]
--register power-up is low

W1_current_segment_delayed[0] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:base_address[0]);


--DB1_\buffer_manager:segment_shift_var is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|\buffer_manager:segment_shift_var
--register power-up is low

DB1_\buffer_manager:segment_shift_var = AMPP_FUNCTION(C1_acq_clk, DB1L230, !W1_reset_all, W1_collect_data);


--RB1L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|lpm_decode:wdecoder|decode_vnf:auto_generated|eq_node[1]~0
RB1L2 = AMPP_FUNCTION(!C1_ir_in[2], !W1_buffer_write_enable_delayed, !W1_current_segment_delayed[0], !DB1_\buffer_manager:segment_shift_var);


--RB1L1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|lpm_decode:wdecoder|decode_vnf:auto_generated|eq_node[0]~1
RB1L1 = AMPP_FUNCTION(!C1_ir_in[2], !W1_buffer_write_enable_delayed, !W1_current_segment_delayed[0], !DB1_\buffer_manager:segment_shift_var);


--Y1_cells[1][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][1]
--register power-up is low

Y1_cells[1][1] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[0], RB1L2);


--Y1_cells[0][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][1]
--register power-up is low

Y1_cells[0][1] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[0], RB1L1);


--CB1_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[1]
--register power-up is low

CB1_dffs[1] = AMPP_FUNCTION(C1_raw_tck, CB1_dffs[2], !W1_reset_all, W1_trigger_setup_ena);


--BB1L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|run~0
BB1L2 = AMPP_FUNCTION(!C1_ir_in[1], !DB1_\buffer_manager:is_buffer_wrapped, !W1_condition_delay_reg[3]);


--CB2_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[4]
--register power-up is low

CB2_dffs[4] = AMPP_FUNCTION(C1_raw_tck, CB2_dffs[5], !W1_reset_all, W1_trigger_setup_ena);


--WB1_holdff is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:1:sm1|holdff
--register power-up is low

WB1_holdff = AMPP_FUNCTION(C1_acq_clk, C1_acq_trigger_in_reg[1]);


--CB2_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[3]
--register power-up is low

CB2_dffs[3] = AMPP_FUNCTION(C1_raw_tck, CB2_dffs[4], !W1_reset_all, W1_trigger_setup_ena);


--CB2_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[5]
--register power-up is low

CB2_dffs[5] = AMPP_FUNCTION(C1_raw_tck, C1_tdi, !W1_reset_all, W1_trigger_setup_ena);


--WB1L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:1:sm1|p_match_out~0
WB1L2 = AMPP_FUNCTION(!C1_acq_trigger_in_reg[1], !CB2_dffs[4], !WB1_holdff, !CB2_dffs[3], !CB2_dffs[5]);


--CB2_dffs[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[1]
--register power-up is low

CB2_dffs[1] = AMPP_FUNCTION(C1_raw_tck, CB2_dffs[2], !W1_reset_all, W1_trigger_setup_ena);


--WB2_holdff is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|holdff
--register power-up is low

WB2_holdff = AMPP_FUNCTION(C1_acq_clk, C1_acq_trigger_in_reg[0]);


--CB2_dffs[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[0]
--register power-up is low

CB2_dffs[0] = AMPP_FUNCTION(C1_raw_tck, CB2_dffs[1], !W1_reset_all, W1_trigger_setup_ena);


--CB2_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|lpm_shiftreg:trigger_condition_deserialize|dffs[2]
--register power-up is low

CB2_dffs[2] = AMPP_FUNCTION(C1_raw_tck, CB2_dffs[3], !W1_reset_all, W1_trigger_setup_ena);


--WB2L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_basic_multi_level_trigger:\basic_multi_level_mbpm_trigger_gen:multi_level_mbpm|sld_mbpmg:\trigger_modules_gen:0:trigger_match|sld_sbpmg:\gen_sbpmg_pipeline_less_than_two:sm0:0:sm1|p_match_out~0
WB2L2 = AMPP_FUNCTION(!C1_acq_trigger_in_reg[0], !CB2_dffs[1], !WB2_holdff, !CB2_dffs[0], !CB2_dffs[2]);


--CB3_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[2]
--register power-up is low

CB3_dffs[2] = AMPP_FUNCTION(C1_raw_tck, CB3_dffs[3], !W1_reset_all, W1_trigger_setup_ena);


--CB4_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[9]
--register power-up is low

CB4_dffs[9] = AMPP_FUNCTION(C1_raw_tck, CB1_dffs[0], !W1_reset_all, W1_trigger_setup_ena);


--CB4_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[6]
--register power-up is low

CB4_dffs[6] = AMPP_FUNCTION(C1_raw_tck, CB4_dffs[7], !W1_reset_all, W1_trigger_setup_ena);


--CB4_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[7]
--register power-up is low

CB4_dffs[7] = AMPP_FUNCTION(C1_raw_tck, CB4_dffs[8], !W1_reset_all, W1_trigger_setup_ena);


--CB4_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[8]
--register power-up is low

CB4_dffs[8] = AMPP_FUNCTION(C1_raw_tck, CB4_dffs[9], !W1_reset_all, W1_trigger_setup_ena);


--CB4_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[4]
--register power-up is low

CB4_dffs[4] = AMPP_FUNCTION(C1_raw_tck, CB4_dffs[5], !W1_reset_all, W1_trigger_setup_ena);


--CB4_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:segment_offset_config_deserialize|dffs[5]
--register power-up is low

CB4_dffs[5] = AMPP_FUNCTION(C1_raw_tck, CB4_dffs[6], !W1_reset_all, W1_trigger_setup_ena);


--W1_condition_delay_reg[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|condition_delay_reg[1]
--register power-up is low

W1_condition_delay_reg[1] = AMPP_FUNCTION(C1_acq_clk, W1_condition_delay_reg[0]);


--CB8_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[4]
--register power-up is low

CB8_dffs[4] = AMPP_FUNCTION(C1_raw_tck, CB8L5, W1L1549);


--CB8L4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~3
CB8L4 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[4]);


--C1_crc[3] is sld_signaltap:auto_signaltap_0|crc[3]
C1_crc[3] = INPUT();


--C1_crc[7] is sld_signaltap:auto_signaltap_0|crc[7]
C1_crc[7] = INPUT();


--C1_crc[11] is sld_signaltap:auto_signaltap_0|crc[11]
C1_crc[11] = INPUT();


--C1_crc[15] is sld_signaltap:auto_signaltap_0|crc[15]
C1_crc[15] = INPUT();


--Q1L28 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~12
Q1L28 = AMPP_FUNCTION(!C1_crc[3], !C1_crc[7], !C1_crc[11], !C1_crc[15], !Q1_word_counter[0], !Q1_word_counter[1]);


--C1_crc[19] is sld_signaltap:auto_signaltap_0|crc[19]
C1_crc[19] = INPUT();


--C1_crc[23] is sld_signaltap:auto_signaltap_0|crc[23]
C1_crc[23] = INPUT();


--C1_crc[27] is sld_signaltap:auto_signaltap_0|crc[27]
C1_crc[27] = INPUT();


--C1_crc[31] is sld_signaltap:auto_signaltap_0|crc[31]
C1_crc[31] = INPUT();


--Q1L29 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~13
Q1L29 = AMPP_FUNCTION(!C1_crc[19], !C1_crc[23], !C1_crc[27], !C1_crc[31], !Q1_word_counter[0], !Q1_word_counter[1]);


--Q1L30 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_rom_sr:crc_rom_sr|WORD_SR~14
Q1L30 = AMPP_FUNCTION(!Q1L16, !Q1L17, !C1_tdi, !Q1L28, !Q1L29);


--W1L1519 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|crc_rom_sr_ena~0
W1L1519 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--X1_status_buf_read_reset is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|status_buf_read_reset
X1_status_buf_read_reset = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[7], !W1L1519, !W1_reset_all);


--LB1_cout_actual is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:status_read_pointer_counter|cntr_kri:auto_generated|cout_actual
LB1_cout_actual = AMPP_FUNCTION(!LB1_counter_reg_bit[0], !LB1L3);


--X1L5 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|Equal2~0
X1L5 = AMPP_FUNCTION(!JB1_counter_reg_bit[2], !JB1_counter_reg_bit[0], !JB1_counter_reg_bit[4], !JB1_counter_reg_bit[3], !JB1_counter_reg_bit[1]);


--W1_last_trigger_address_delayed[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[0]
--register power-up is low

W1_last_trigger_address_delayed[0] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:last_trigger_address_var[0]);


--Y1_cells[1][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][2]
--register power-up is low

Y1_cells[1][2] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[1], RB1L2);


--Y1_cells[0][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][2]
--register power-up is low

Y1_cells[0][2] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[1], RB1L1);


--CB1_dffs[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[2]
--register power-up is low

CB1_dffs[2] = AMPP_FUNCTION(C1_raw_tck, CB1_dffs[3], !W1_reset_all, W1_trigger_setup_ena);


--CB3_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[3]
--register power-up is low

CB3_dffs[3] = AMPP_FUNCTION(C1_raw_tck, CB3_dffs[4], !W1_reset_all, W1_trigger_setup_ena);


--W1_condition_delay_reg[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|condition_delay_reg[0]
--register power-up is low

W1_condition_delay_reg[0] = AMPP_FUNCTION(C1_acq_clk, GND);


--CB8_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[5]
--register power-up is low

CB8_dffs[5] = AMPP_FUNCTION(C1_raw_tck, CB8L6, W1L1549);


--CB8L5 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~4
CB8L5 = AMPP_FUNCTION(!W1L1548, !W1_current_segment_delayed[0], !CB8_dffs[5]);


--W1_last_trigger_address_delayed[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[1]
--register power-up is low

W1_last_trigger_address_delayed[1] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:last_trigger_address_var[1]);


--Y1_cells[1][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][3]
--register power-up is low

Y1_cells[1][3] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[2], RB1L2);


--Y1_cells[0][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][3]
--register power-up is low

Y1_cells[0][3] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[2], RB1L1);


--CB1_dffs[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|lpm_shiftreg:trigger_config_deserialize|dffs[3]
--register power-up is low

CB1_dffs[3] = AMPP_FUNCTION(C1_raw_tck, CB3_dffs[0], !W1_reset_all, W1_trigger_setup_ena);


--CB3_dffs[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[4]
--register power-up is low

CB3_dffs[4] = AMPP_FUNCTION(C1_raw_tck, CB3_dffs[5], !W1_reset_all, W1_trigger_setup_ena);


--CB8_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[6]
--register power-up is low

CB8_dffs[6] = AMPP_FUNCTION(C1_raw_tck, CB8L7, W1L1549);


--CB8L6 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~5
CB8L6 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[6]);


--W1_last_trigger_address_delayed[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[2]
--register power-up is low

W1_last_trigger_address_delayed[2] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:last_trigger_address_var[2]);


--Y1_cells[1][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][4]
--register power-up is low

Y1_cells[1][4] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[3], RB1L2);


--Y1_cells[0][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][4]
--register power-up is low

Y1_cells[0][4] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[3], RB1L1);


--CB3_dffs[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[5]
--register power-up is low

CB3_dffs[5] = AMPP_FUNCTION(C1_raw_tck, CB3_dffs[6], !W1_reset_all, W1_trigger_setup_ena);


--AB1L17 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr~2
AB1L17 = AMPP_FUNCTION(!C1_ir_in[9], !W1_tdo_crc_val_shift_reg[0], !W1L1612, !W1L1610, !AB1_lfsr[0], !AB1_lfsr[6]);


--CB8_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[7]
--register power-up is low

CB8_dffs[7] = AMPP_FUNCTION(C1_raw_tck, CB8L8, W1L1549);


--CB8L7 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~6
CB8L7 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[7]);


--W1_last_trigger_address_delayed[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[3]
--register power-up is low

W1_last_trigger_address_delayed[3] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:last_trigger_address_var[3]);


--Y1_cells[1][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][5]
--register power-up is low

Y1_cells[1][5] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[4], RB1L2);


--Y1_cells[0][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][5]
--register power-up is low

Y1_cells[0][5] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[4], RB1L1);


--CB3_dffs[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[6]
--register power-up is low

CB3_dffs[6] = AMPP_FUNCTION(C1_raw_tck, CB3_dffs[7], !W1_reset_all, W1_trigger_setup_ena);


--CB8_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[8]
--register power-up is low

CB8_dffs[8] = AMPP_FUNCTION(C1_raw_tck, CB8L9, W1L1549);


--CB8L8 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~7
CB8L8 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[8]);


--W1_last_trigger_address_delayed[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[4]
--register power-up is low

W1_last_trigger_address_delayed[4] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:last_trigger_address_var[4]);


--Y1_cells[1][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][6]
--register power-up is low

Y1_cells[1][6] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[5], RB1L2);


--Y1_cells[0][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][6]
--register power-up is low

Y1_cells[0][6] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[5], RB1L1);


--CB3_dffs[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[7]
--register power-up is low

CB3_dffs[7] = AMPP_FUNCTION(C1_raw_tck, CB3_dffs[8], !W1_reset_all, W1_trigger_setup_ena);


--CB8_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[9]
--register power-up is low

CB8_dffs[9] = AMPP_FUNCTION(C1_raw_tck, CB8L10, W1L1549);


--CB8L9 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~8
CB8L9 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[9]);


--W1_last_trigger_address_delayed[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[5]
--register power-up is low

W1_last_trigger_address_delayed[5] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:last_trigger_address_var[5]);


--Y1_cells[1][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][7]
--register power-up is low

Y1_cells[1][7] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[6], RB1L2);


--Y1_cells[0][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][7]
--register power-up is low

Y1_cells[0][7] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[6], RB1L1);


--CB3_dffs[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[8]
--register power-up is low

CB3_dffs[8] = AMPP_FUNCTION(C1_raw_tck, CB3_dffs[9], !W1_reset_all, W1_trigger_setup_ena);


--CB8_dffs[10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[10]
--register power-up is low

CB8_dffs[10] = AMPP_FUNCTION(C1_raw_tck, CB8L11, W1L1549);


--CB8L10 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~9
CB8L10 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[10]);


--W1_last_trigger_address_delayed[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[6]
--register power-up is low

W1_last_trigger_address_delayed[6] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:last_trigger_address_var[6]);


--Y1_cells[1][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][8]
--register power-up is low

Y1_cells[1][8] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[7], RB1L2);


--Y1_cells[0][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][8]
--register power-up is low

Y1_cells[0][8] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[7], RB1L1);


--CB3_dffs[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_ela_control:ela_control|sld_ela_trigger_flow_mgr:\builtin:ela_trigger_flow_mgr_entity|lpm_shiftreg:trigger_config_deserialize|dffs[9]
--register power-up is low

CB3_dffs[9] = AMPP_FUNCTION(C1_raw_tck, CB2_dffs[0], !W1_reset_all, W1_trigger_setup_ena);


--CB8_dffs[11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[11]
--register power-up is low

CB8_dffs[11] = AMPP_FUNCTION(C1_raw_tck, CB8L12, W1L1549);


--CB8L11 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~10
CB8L11 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[11]);


--W1_last_trigger_address_delayed[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[7]
--register power-up is low

W1_last_trigger_address_delayed[7] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:last_trigger_address_var[7]);


--Y1_cells[1][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][9]
--register power-up is low

Y1_cells[1][9] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[8], RB1L2);


--Y1_cells[0][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][9]
--register power-up is low

Y1_cells[0][9] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[8], RB1L1);


--CB8_dffs[12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[12]
--register power-up is low

CB8_dffs[12] = AMPP_FUNCTION(C1_raw_tck, CB8L13, W1L1549);


--CB8L12 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~11
CB8L12 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[12]);


--W1_last_trigger_address_delayed[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[8]
--register power-up is low

W1_last_trigger_address_delayed[8] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:last_trigger_address_var[8]);


--Y1_cells[1][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][10]
--register power-up is low

Y1_cells[1][10] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[9], RB1L2);


--Y1_cells[0][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][10]
--register power-up is low

Y1_cells[0][10] = AMPP_FUNCTION(C1_acq_clk, W1_last_trigger_address_delayed[9], RB1L1);


--W1_tdo_crc_val_shift_reg[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[13]
--register power-up is low

W1_tdo_crc_val_shift_reg[13] = AMPP_FUNCTION(C1_raw_tck, W1L1603, W1L1587);


--CB8_dffs[13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[13]
--register power-up is low

CB8_dffs[13] = AMPP_FUNCTION(C1_raw_tck, CB8L14, W1L1549);


--CB8L13 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~12
CB8L13 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[13]);


--W1_last_trigger_address_delayed[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|last_trigger_address_delayed[9]
--register power-up is low

W1_last_trigger_address_delayed[9] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:last_trigger_address_var[9]);


--Y1_cells[1][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][11]
--register power-up is low

Y1_cells[1][11] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[0], RB1L2);


--Y1_cells[0][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][11]
--register power-up is low

Y1_cells[0][11] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[0], RB1L1);


--AB1L18 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|serial_crc_16:\tdo_crc_gen:tdo_crc_calc|lfsr~3
AB1L18 = AMPP_FUNCTION(!C1_ir_in[9], !W1_tdo_crc_val_shift_reg[0], !W1L1612, !W1L1610, !AB1_lfsr[0]);


--W1_tdo_crc_val_shift_reg[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[14]
--register power-up is low

W1_tdo_crc_val_shift_reg[14] = AMPP_FUNCTION(C1_raw_tck, W1L1604, W1L1587);


--W1L1603 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg~1
W1L1603 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_usr1, !C1_ena, !W1_tdo_crc_val_shift_reg[14]);


--CB8_dffs[14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[14]
--register power-up is low

CB8_dffs[14] = AMPP_FUNCTION(C1_raw_tck, CB8L15, W1L1549);


--CB8L14 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~13
CB8L14 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[14]);


--W1_buffer_write_address_delayed[0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[0]
--register power-up is low

W1_buffer_write_address_delayed[0] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:next_address[0]);


--Y1_cells[1][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][12]
--register power-up is low

Y1_cells[1][12] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[1], RB1L2);


--Y1_cells[0][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][12]
--register power-up is low

Y1_cells[0][12] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[1], RB1L1);


--W1_tdo_crc_val_shift_reg[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg[15]
--register power-up is low

W1_tdo_crc_val_shift_reg[15] = AMPP_FUNCTION(C1_raw_tck, W1L1605, W1L1587);


--W1L1604 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg~2
W1L1604 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_usr1, !C1_ena, !W1_tdo_crc_val_shift_reg[15]);


--CB8_dffs[15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[15]
--register power-up is low

CB8_dffs[15] = AMPP_FUNCTION(C1_raw_tck, CB8L16, W1L1549);


--CB8L15 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~14
CB8L15 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[15]);


--W1_buffer_write_address_delayed[1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[1]
--register power-up is low

W1_buffer_write_address_delayed[1] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:next_address[1]);


--Y1_cells[1][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][13]
--register power-up is low

Y1_cells[1][13] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[2], RB1L2);


--Y1_cells[0][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][13]
--register power-up is low

Y1_cells[0][13] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[2], RB1L1);


--W1L1605 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|tdo_crc_val_shift_reg~3
W1L1605 = AMPP_FUNCTION(!C1_jtag_state_cdr, !C1_usr1, !C1_ena, !C1_tdi);


--CB8_dffs[16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|dffs[16]
--register power-up is low

CB8_dffs[16] = AMPP_FUNCTION(C1_raw_tck, CB8L17, W1L1549);


--CB8L16 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~15
CB8L16 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !CB8_dffs[16]);


--W1_buffer_write_address_delayed[2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[2]
--register power-up is low

W1_buffer_write_address_delayed[2] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:next_address[2]);


--Y1_cells[1][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][14]
--register power-up is low

Y1_cells[1][14] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[3], RB1L2);


--Y1_cells[0][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][14]
--register power-up is low

Y1_cells[0][14] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[3], RB1L1);


--CB8L17 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|lpm_shiftreg:status_register|_~16
CB8L17 = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[6], !C1_jtag_state_cdr, !C1_usr1, !C1_ena, !C1_tdi);


--W1_buffer_write_address_delayed[3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[3]
--register power-up is low

W1_buffer_write_address_delayed[3] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:next_address[3]);


--Y1_cells[1][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][15]
--register power-up is low

Y1_cells[1][15] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[4], RB1L2);


--Y1_cells[0][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][15]
--register power-up is low

Y1_cells[0][15] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[4], RB1L1);


--W1_buffer_write_address_delayed[4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[4]
--register power-up is low

W1_buffer_write_address_delayed[4] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:next_address[4]);


--Y1_cells[1][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][16]
--register power-up is low

Y1_cells[1][16] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[5], RB1L2);


--Y1_cells[0][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][16]
--register power-up is low

Y1_cells[0][16] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[5], RB1L1);


--W1_buffer_write_address_delayed[5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[5]
--register power-up is low

W1_buffer_write_address_delayed[5] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:next_address[5]);


--Y1_cells[1][17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][17]
--register power-up is low

Y1_cells[1][17] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[6], RB1L2);


--Y1_cells[0][17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][17]
--register power-up is low

Y1_cells[0][17] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[6], RB1L1);


--W1_buffer_write_address_delayed[6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[6]
--register power-up is low

W1_buffer_write_address_delayed[6] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:next_address[6]);


--Y1_cells[1][18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][18]
--register power-up is low

Y1_cells[1][18] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[7], RB1L2);


--Y1_cells[0][18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][18]
--register power-up is low

Y1_cells[0][18] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[7], RB1L1);


--CB7_dffs[20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|dffs[20]
--register power-up is low

CB7_dffs[20] = AMPP_FUNCTION(C1_raw_tck, CB7L1, !W1_reset_all);


--W1_buffer_write_address_delayed[7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[7]
--register power-up is low

W1_buffer_write_address_delayed[7] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:next_address[7]);


--Y1_cells[1][19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][19]
--register power-up is low

Y1_cells[1][19] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[8], RB1L2);


--Y1_cells[0][19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][19]
--register power-up is low

Y1_cells[0][19] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[8], RB1L1);


--CB7L1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:status_data_shift_out|_~0
CB7L1 = AMPP_FUNCTION(!C1_ir_in[7], !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !X1L6, !Y1_xq[20]);


--X1L2 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|Equal0~0
X1L2 = AMPP_FUNCTION(!FB1_counter_reg_bit[8], !FB1_counter_reg_bit[7], !FB1_counter_reg_bit[6], !FB1_counter_reg_bit[5], !FB1_counter_reg_bit[4], !FB1_counter_reg_bit[3]);


--X1L4 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|Equal1~0
X1L4 = AMPP_FUNCTION(!FB1_counter_reg_bit[2], !FB1_counter_reg_bit[1], !FB1_counter_reg_bit[0]);


--X1_ram_shift_load is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|ram_shift_load
X1_ram_shift_load = AMPP_FUNCTION(!C1_ir_in[4], !C1_jtag_state_sdr, !C1_usr1, !C1_ena, !X1L2, !X1L4);


--W1_buffer_write_address_delayed[8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[8]
--register power-up is low

W1_buffer_write_address_delayed[8] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:next_address[8]);


--Y1_cells[1][20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[1][20]
--register power-up is low

Y1_cells[1][20] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[9], RB1L2);


--Y1_cells[0][20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|altdpram:\stp_non_zero_ram_gen:attribute_mem_gen:attribute_mem|cells[0][20]
--register power-up is low

Y1_cells[0][20] = AMPP_FUNCTION(C1_acq_clk, W1_buffer_write_address_delayed[9], RB1L1);


--W1_acq_data_in_pipe_reg[3][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][0]
--register power-up is low

W1_acq_data_in_pipe_reg[3][0] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][0]);


--W1_buffer_write_address_delayed[9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_address_delayed[9]
--register power-up is low

W1_buffer_write_address_delayed[9] = AMPP_FUNCTION(C1_acq_clk, DB1_\buffer_manager:next_address[9]);


--X1_offload_shift_ena is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|offload_shift_ena
X1_offload_shift_ena = AMPP_FUNCTION(!C1_ir_in[4], !C1_jtag_state_sdr, !C1_usr1, !C1_ena);


--FB1_cout_actual is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_counter:\adv_point_3_and_more:advance_pointer_counter|cntr_nai:auto_generated|cout_actual
FB1_cout_actual = AMPP_FUNCTION(!X1L2, !X1L4, !FB1L35);


--W1_acq_data_in_pipe_reg[2][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][0]
--register power-up is low

W1_acq_data_in_pipe_reg[2][0] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][0]);


--X1_acq_buf_read_reset is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|acq_buf_read_reset
X1_acq_buf_read_reset = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[4], !W1L1519, !W1_reset_all);


--X1L3 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|Equal0~1
X1L3 = AMPP_FUNCTION(!FB1_counter_reg_bit[2], !FB1_counter_reg_bit[1], !FB1_counter_reg_bit[0]);


--X1_read_pointer_counter_clk_ena is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|read_pointer_counter_clk_ena
X1_read_pointer_counter_clk_ena = AMPP_FUNCTION(!C1_ir_in[1], !C1_ir_in[4], !W1L1519, !W1_reset_all, !X1L2, !X1L3);


--W1_acq_data_in_pipe_reg[3][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][1]
--register power-up is low

W1_acq_data_in_pipe_reg[3][1] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][1]);


--W1_acq_data_in_pipe_reg[1][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][0]
--register power-up is low

W1_acq_data_in_pipe_reg[1][0] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][0]);


--W1_acq_data_in_pipe_reg[2][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][1]
--register power-up is low

W1_acq_data_in_pipe_reg[2][1] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][1]);


--W1_acq_data_in_pipe_reg[3][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][2]
--register power-up is low

W1_acq_data_in_pipe_reg[3][2] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][2]);


--W1_acq_data_in_pipe_reg[0][0] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][0]
--register power-up is low

W1_acq_data_in_pipe_reg[0][0] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[0]);


--W1_acq_data_in_pipe_reg[1][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][1]
--register power-up is low

W1_acq_data_in_pipe_reg[1][1] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][1]);


--W1_acq_data_in_pipe_reg[2][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][2]
--register power-up is low

W1_acq_data_in_pipe_reg[2][2] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][2]);


--W1_acq_data_in_pipe_reg[3][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][3]
--register power-up is low

W1_acq_data_in_pipe_reg[3][3] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][3]);


--W1_acq_data_in_pipe_reg[0][1] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][1]
--register power-up is low

W1_acq_data_in_pipe_reg[0][1] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[1]);


--W1_acq_data_in_pipe_reg[1][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][2]
--register power-up is low

W1_acq_data_in_pipe_reg[1][2] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][2]);


--W1_acq_data_in_pipe_reg[2][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][3]
--register power-up is low

W1_acq_data_in_pipe_reg[2][3] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][3]);


--W1_acq_data_in_pipe_reg[3][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][4]
--register power-up is low

W1_acq_data_in_pipe_reg[3][4] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][4]);


--W1_acq_data_in_pipe_reg[0][2] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][2]
--register power-up is low

W1_acq_data_in_pipe_reg[0][2] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[2]);


--W1_acq_data_in_pipe_reg[1][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][3]
--register power-up is low

W1_acq_data_in_pipe_reg[1][3] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][3]);


--W1_acq_data_in_pipe_reg[2][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][4]
--register power-up is low

W1_acq_data_in_pipe_reg[2][4] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][4]);


--W1_acq_data_in_pipe_reg[3][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][5]
--register power-up is low

W1_acq_data_in_pipe_reg[3][5] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][5]);


--W1_acq_data_in_pipe_reg[0][3] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][3]
--register power-up is low

W1_acq_data_in_pipe_reg[0][3] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[3]);


--W1_acq_data_in_pipe_reg[1][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][4]
--register power-up is low

W1_acq_data_in_pipe_reg[1][4] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][4]);


--W1_acq_data_in_pipe_reg[2][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][5]
--register power-up is low

W1_acq_data_in_pipe_reg[2][5] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][5]);


--W1_acq_data_in_pipe_reg[3][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][6]
--register power-up is low

W1_acq_data_in_pipe_reg[3][6] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][6]);


--W1_acq_data_in_pipe_reg[0][4] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][4]
--register power-up is low

W1_acq_data_in_pipe_reg[0][4] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[4]);


--W1_acq_data_in_pipe_reg[1][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][5]
--register power-up is low

W1_acq_data_in_pipe_reg[1][5] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][5]);


--W1_acq_data_in_pipe_reg[2][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][6]
--register power-up is low

W1_acq_data_in_pipe_reg[2][6] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][6]);


--W1_acq_data_in_pipe_reg[3][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][7]
--register power-up is low

W1_acq_data_in_pipe_reg[3][7] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][7]);


--W1_acq_data_in_pipe_reg[0][5] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][5]
--register power-up is low

W1_acq_data_in_pipe_reg[0][5] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[5]);


--W1_acq_data_in_pipe_reg[1][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][6]
--register power-up is low

W1_acq_data_in_pipe_reg[1][6] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][6]);


--W1_acq_data_in_pipe_reg[2][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][7]
--register power-up is low

W1_acq_data_in_pipe_reg[2][7] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][7]);


--W1_acq_data_in_pipe_reg[3][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][8]
--register power-up is low

W1_acq_data_in_pipe_reg[3][8] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][8]);


--W1_acq_data_in_pipe_reg[0][6] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][6]
--register power-up is low

W1_acq_data_in_pipe_reg[0][6] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[6]);


--W1_acq_data_in_pipe_reg[1][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][7]
--register power-up is low

W1_acq_data_in_pipe_reg[1][7] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][7]);


--W1_acq_data_in_pipe_reg[2][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][8]
--register power-up is low

W1_acq_data_in_pipe_reg[2][8] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][8]);


--W1_acq_data_in_pipe_reg[3][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][9]
--register power-up is low

W1_acq_data_in_pipe_reg[3][9] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][9]);


--W1_acq_data_in_pipe_reg[0][7] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][7]
--register power-up is low

W1_acq_data_in_pipe_reg[0][7] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[7]);


--W1_acq_data_in_pipe_reg[1][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][8]
--register power-up is low

W1_acq_data_in_pipe_reg[1][8] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][8]);


--W1_acq_data_in_pipe_reg[2][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][9]
--register power-up is low

W1_acq_data_in_pipe_reg[2][9] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][9]);


--W1_acq_data_in_pipe_reg[3][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][10]
--register power-up is low

W1_acq_data_in_pipe_reg[3][10] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][10]);


--W1_acq_data_in_pipe_reg[0][8] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][8]
--register power-up is low

W1_acq_data_in_pipe_reg[0][8] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[8]);


--W1_acq_data_in_pipe_reg[1][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][9]
--register power-up is low

W1_acq_data_in_pipe_reg[1][9] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][9]);


--W1_acq_data_in_pipe_reg[2][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][10]
--register power-up is low

W1_acq_data_in_pipe_reg[2][10] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][10]);


--W1_acq_data_in_pipe_reg[3][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][11]
--register power-up is low

W1_acq_data_in_pipe_reg[3][11] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][11]);


--W1_acq_data_in_pipe_reg[0][9] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][9]
--register power-up is low

W1_acq_data_in_pipe_reg[0][9] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[9]);


--W1_acq_data_in_pipe_reg[1][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][10]
--register power-up is low

W1_acq_data_in_pipe_reg[1][10] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][10]);


--W1_acq_data_in_pipe_reg[2][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][11]
--register power-up is low

W1_acq_data_in_pipe_reg[2][11] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][11]);


--W1_acq_data_in_pipe_reg[3][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][12]
--register power-up is low

W1_acq_data_in_pipe_reg[3][12] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][12]);


--W1_acq_data_in_pipe_reg[0][10] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][10]
--register power-up is low

W1_acq_data_in_pipe_reg[0][10] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[10]);


--W1_acq_data_in_pipe_reg[1][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][11]
--register power-up is low

W1_acq_data_in_pipe_reg[1][11] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][11]);


--W1_acq_data_in_pipe_reg[2][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][12]
--register power-up is low

W1_acq_data_in_pipe_reg[2][12] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][12]);


--W1_acq_data_in_pipe_reg[3][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][13]
--register power-up is low

W1_acq_data_in_pipe_reg[3][13] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][13]);


--W1_acq_data_in_pipe_reg[0][11] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][11]
--register power-up is low

W1_acq_data_in_pipe_reg[0][11] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[11]);


--W1_acq_data_in_pipe_reg[1][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][12]
--register power-up is low

W1_acq_data_in_pipe_reg[1][12] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][12]);


--W1_acq_data_in_pipe_reg[2][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][13]
--register power-up is low

W1_acq_data_in_pipe_reg[2][13] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][13]);


--W1_acq_data_in_pipe_reg[3][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][14]
--register power-up is low

W1_acq_data_in_pipe_reg[3][14] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][14]);


--W1_acq_data_in_pipe_reg[0][12] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][12]
--register power-up is low

W1_acq_data_in_pipe_reg[0][12] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[12]);


--W1_acq_data_in_pipe_reg[1][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][13]
--register power-up is low

W1_acq_data_in_pipe_reg[1][13] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][13]);


--W1_acq_data_in_pipe_reg[2][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][14]
--register power-up is low

W1_acq_data_in_pipe_reg[2][14] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][14]);


--W1_acq_data_in_pipe_reg[3][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][15]
--register power-up is low

W1_acq_data_in_pipe_reg[3][15] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][15]);


--W1_acq_data_in_pipe_reg[0][13] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][13]
--register power-up is low

W1_acq_data_in_pipe_reg[0][13] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[13]);


--W1_acq_data_in_pipe_reg[1][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][14]
--register power-up is low

W1_acq_data_in_pipe_reg[1][14] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][14]);


--W1_acq_data_in_pipe_reg[2][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][15]
--register power-up is low

W1_acq_data_in_pipe_reg[2][15] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][15]);


--W1_acq_data_in_pipe_reg[3][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][16]
--register power-up is low

W1_acq_data_in_pipe_reg[3][16] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][16]);


--W1_acq_data_in_pipe_reg[0][14] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][14]
--register power-up is low

W1_acq_data_in_pipe_reg[0][14] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[14]);


--W1_acq_data_in_pipe_reg[1][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][15]
--register power-up is low

W1_acq_data_in_pipe_reg[1][15] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][15]);


--W1_acq_data_in_pipe_reg[2][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][16]
--register power-up is low

W1_acq_data_in_pipe_reg[2][16] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][16]);


--W1_acq_data_in_pipe_reg[3][17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][17]
--register power-up is low

W1_acq_data_in_pipe_reg[3][17] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][17]);


--W1_acq_data_in_pipe_reg[0][15] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][15]
--register power-up is low

W1_acq_data_in_pipe_reg[0][15] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[15]);


--W1_acq_data_in_pipe_reg[1][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][16]
--register power-up is low

W1_acq_data_in_pipe_reg[1][16] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][16]);


--W1_acq_data_in_pipe_reg[2][17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][17]
--register power-up is low

W1_acq_data_in_pipe_reg[2][17] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][17]);


--W1_acq_data_in_pipe_reg[3][18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][18]
--register power-up is low

W1_acq_data_in_pipe_reg[3][18] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][18]);


--W1_acq_data_in_pipe_reg[0][16] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][16]
--register power-up is low

W1_acq_data_in_pipe_reg[0][16] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[16]);


--W1_acq_data_in_pipe_reg[1][17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][17]
--register power-up is low

W1_acq_data_in_pipe_reg[1][17] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][17]);


--W1_acq_data_in_pipe_reg[2][18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][18]
--register power-up is low

W1_acq_data_in_pipe_reg[2][18] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][18]);


--W1_acq_data_in_pipe_reg[3][19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][19]
--register power-up is low

W1_acq_data_in_pipe_reg[3][19] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][19]);


--W1_acq_data_in_pipe_reg[0][17] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][17]
--register power-up is low

W1_acq_data_in_pipe_reg[0][17] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[17]);


--W1_acq_data_in_pipe_reg[1][18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][18]
--register power-up is low

W1_acq_data_in_pipe_reg[1][18] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][18]);


--W1_acq_data_in_pipe_reg[2][19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][19]
--register power-up is low

W1_acq_data_in_pipe_reg[2][19] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][19]);


--W1_acq_data_in_pipe_reg[3][20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][20]
--register power-up is low

W1_acq_data_in_pipe_reg[3][20] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][20]);


--W1_acq_data_in_pipe_reg[0][18] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][18]
--register power-up is low

W1_acq_data_in_pipe_reg[0][18] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[18]);


--W1_acq_data_in_pipe_reg[1][19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][19]
--register power-up is low

W1_acq_data_in_pipe_reg[1][19] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][19]);


--W1_acq_data_in_pipe_reg[2][20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][20]
--register power-up is low

W1_acq_data_in_pipe_reg[2][20] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][20]);


--W1_acq_data_in_pipe_reg[3][21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][21]
--register power-up is low

W1_acq_data_in_pipe_reg[3][21] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][21]);


--W1_acq_data_in_pipe_reg[0][19] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][19]
--register power-up is low

W1_acq_data_in_pipe_reg[0][19] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[19]);


--W1_acq_data_in_pipe_reg[1][20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][20]
--register power-up is low

W1_acq_data_in_pipe_reg[1][20] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][20]);


--W1_acq_data_in_pipe_reg[2][21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][21]
--register power-up is low

W1_acq_data_in_pipe_reg[2][21] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][21]);


--W1_acq_data_in_pipe_reg[3][22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][22]
--register power-up is low

W1_acq_data_in_pipe_reg[3][22] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][22]);


--W1_acq_data_in_pipe_reg[0][20] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][20]
--register power-up is low

W1_acq_data_in_pipe_reg[0][20] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[20]);


--W1_acq_data_in_pipe_reg[1][21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][21]
--register power-up is low

W1_acq_data_in_pipe_reg[1][21] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][21]);


--W1_acq_data_in_pipe_reg[2][22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][22]
--register power-up is low

W1_acq_data_in_pipe_reg[2][22] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][22]);


--W1_acq_data_in_pipe_reg[3][23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][23]
--register power-up is low

W1_acq_data_in_pipe_reg[3][23] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][23]);


--W1_acq_data_in_pipe_reg[0][21] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][21]
--register power-up is low

W1_acq_data_in_pipe_reg[0][21] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[21]);


--W1_acq_data_in_pipe_reg[1][22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][22]
--register power-up is low

W1_acq_data_in_pipe_reg[1][22] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][22]);


--W1_acq_data_in_pipe_reg[2][23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][23]
--register power-up is low

W1_acq_data_in_pipe_reg[2][23] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][23]);


--W1_acq_data_in_pipe_reg[3][24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][24]
--register power-up is low

W1_acq_data_in_pipe_reg[3][24] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][24]);


--W1_acq_data_in_pipe_reg[0][22] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][22]
--register power-up is low

W1_acq_data_in_pipe_reg[0][22] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[22]);


--W1_acq_data_in_pipe_reg[1][23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][23]
--register power-up is low

W1_acq_data_in_pipe_reg[1][23] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][23]);


--W1_acq_data_in_pipe_reg[2][24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][24]
--register power-up is low

W1_acq_data_in_pipe_reg[2][24] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][24]);


--W1_acq_data_in_pipe_reg[3][25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][25]
--register power-up is low

W1_acq_data_in_pipe_reg[3][25] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][25]);


--W1_acq_data_in_pipe_reg[0][23] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][23]
--register power-up is low

W1_acq_data_in_pipe_reg[0][23] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[23]);


--W1_acq_data_in_pipe_reg[1][24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][24]
--register power-up is low

W1_acq_data_in_pipe_reg[1][24] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][24]);


--W1_acq_data_in_pipe_reg[2][25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][25]
--register power-up is low

W1_acq_data_in_pipe_reg[2][25] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][25]);


--W1_acq_data_in_pipe_reg[3][26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][26]
--register power-up is low

W1_acq_data_in_pipe_reg[3][26] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][26]);


--W1_acq_data_in_pipe_reg[0][24] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][24]
--register power-up is low

W1_acq_data_in_pipe_reg[0][24] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[24]);


--W1_acq_data_in_pipe_reg[1][25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][25]
--register power-up is low

W1_acq_data_in_pipe_reg[1][25] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][25]);


--W1_acq_data_in_pipe_reg[2][26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][26]
--register power-up is low

W1_acq_data_in_pipe_reg[2][26] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][26]);


--W1_acq_data_in_pipe_reg[3][27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][27]
--register power-up is low

W1_acq_data_in_pipe_reg[3][27] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][27]);


--W1_acq_data_in_pipe_reg[0][25] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][25]
--register power-up is low

W1_acq_data_in_pipe_reg[0][25] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[25]);


--W1_acq_data_in_pipe_reg[1][26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][26]
--register power-up is low

W1_acq_data_in_pipe_reg[1][26] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][26]);


--W1_acq_data_in_pipe_reg[2][27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][27]
--register power-up is low

W1_acq_data_in_pipe_reg[2][27] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][27]);


--W1_acq_data_in_pipe_reg[3][28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][28]
--register power-up is low

W1_acq_data_in_pipe_reg[3][28] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][28]);


--W1_acq_data_in_pipe_reg[0][26] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][26]
--register power-up is low

W1_acq_data_in_pipe_reg[0][26] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[26]);


--W1_acq_data_in_pipe_reg[1][27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][27]
--register power-up is low

W1_acq_data_in_pipe_reg[1][27] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][27]);


--W1_acq_data_in_pipe_reg[2][28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][28]
--register power-up is low

W1_acq_data_in_pipe_reg[2][28] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][28]);


--W1_acq_data_in_pipe_reg[3][29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][29]
--register power-up is low

W1_acq_data_in_pipe_reg[3][29] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][29]);


--W1_acq_data_in_pipe_reg[0][27] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][27]
--register power-up is low

W1_acq_data_in_pipe_reg[0][27] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[27]);


--W1_acq_data_in_pipe_reg[1][28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][28]
--register power-up is low

W1_acq_data_in_pipe_reg[1][28] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][28]);


--W1_acq_data_in_pipe_reg[2][29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][29]
--register power-up is low

W1_acq_data_in_pipe_reg[2][29] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][29]);


--W1_acq_data_in_pipe_reg[3][30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][30]
--register power-up is low

W1_acq_data_in_pipe_reg[3][30] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][30]);


--W1_acq_data_in_pipe_reg[0][28] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][28]
--register power-up is low

W1_acq_data_in_pipe_reg[0][28] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[28]);


--W1_acq_data_in_pipe_reg[1][29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][29]
--register power-up is low

W1_acq_data_in_pipe_reg[1][29] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][29]);


--W1_acq_data_in_pipe_reg[2][30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][30]
--register power-up is low

W1_acq_data_in_pipe_reg[2][30] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][30]);


--W1_acq_data_in_pipe_reg[3][31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][31]
--register power-up is low

W1_acq_data_in_pipe_reg[3][31] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][31]);


--W1_acq_data_in_pipe_reg[0][29] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][29]
--register power-up is low

W1_acq_data_in_pipe_reg[0][29] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[29]);


--W1_acq_data_in_pipe_reg[1][30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][30]
--register power-up is low

W1_acq_data_in_pipe_reg[1][30] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][30]);


--W1_acq_data_in_pipe_reg[2][31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][31]
--register power-up is low

W1_acq_data_in_pipe_reg[2][31] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][31]);


--W1_acq_data_in_pipe_reg[3][32] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][32]
--register power-up is low

W1_acq_data_in_pipe_reg[3][32] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][32]);


--W1_acq_data_in_pipe_reg[0][30] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][30]
--register power-up is low

W1_acq_data_in_pipe_reg[0][30] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[30]);


--W1_acq_data_in_pipe_reg[1][31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][31]
--register power-up is low

W1_acq_data_in_pipe_reg[1][31] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][31]);


--W1_acq_data_in_pipe_reg[2][32] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][32]
--register power-up is low

W1_acq_data_in_pipe_reg[2][32] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][32]);


--W1_acq_data_in_pipe_reg[3][33] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][33]
--register power-up is low

W1_acq_data_in_pipe_reg[3][33] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][33]);


--W1_acq_data_in_pipe_reg[0][31] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][31]
--register power-up is low

W1_acq_data_in_pipe_reg[0][31] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[31]);


--W1_acq_data_in_pipe_reg[1][32] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][32]
--register power-up is low

W1_acq_data_in_pipe_reg[1][32] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][32]);


--W1_acq_data_in_pipe_reg[2][33] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][33]
--register power-up is low

W1_acq_data_in_pipe_reg[2][33] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][33]);


--W1_acq_data_in_pipe_reg[3][34] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][34]
--register power-up is low

W1_acq_data_in_pipe_reg[3][34] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][34]);


--W1_acq_data_in_pipe_reg[0][32] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][32]
--register power-up is low

W1_acq_data_in_pipe_reg[0][32] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[32]);


--W1_acq_data_in_pipe_reg[1][33] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][33]
--register power-up is low

W1_acq_data_in_pipe_reg[1][33] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][33]);


--W1_acq_data_in_pipe_reg[2][34] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][34]
--register power-up is low

W1_acq_data_in_pipe_reg[2][34] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][34]);


--W1_acq_data_in_pipe_reg[3][35] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][35]
--register power-up is low

W1_acq_data_in_pipe_reg[3][35] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][35]);


--W1_acq_data_in_pipe_reg[0][33] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][33]
--register power-up is low

W1_acq_data_in_pipe_reg[0][33] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[33]);


--W1_acq_data_in_pipe_reg[1][34] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][34]
--register power-up is low

W1_acq_data_in_pipe_reg[1][34] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][34]);


--W1_acq_data_in_pipe_reg[2][35] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][35]
--register power-up is low

W1_acq_data_in_pipe_reg[2][35] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][35]);


--W1_acq_data_in_pipe_reg[3][36] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][36]
--register power-up is low

W1_acq_data_in_pipe_reg[3][36] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][36]);


--W1_acq_data_in_pipe_reg[0][34] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][34]
--register power-up is low

W1_acq_data_in_pipe_reg[0][34] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[34]);


--W1_acq_data_in_pipe_reg[1][35] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][35]
--register power-up is low

W1_acq_data_in_pipe_reg[1][35] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][35]);


--W1_acq_data_in_pipe_reg[2][36] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][36]
--register power-up is low

W1_acq_data_in_pipe_reg[2][36] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][36]);


--W1_acq_data_in_pipe_reg[3][37] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][37]
--register power-up is low

W1_acq_data_in_pipe_reg[3][37] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][37]);


--W1_acq_data_in_pipe_reg[0][35] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][35]
--register power-up is low

W1_acq_data_in_pipe_reg[0][35] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[35]);


--W1_acq_data_in_pipe_reg[1][36] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][36]
--register power-up is low

W1_acq_data_in_pipe_reg[1][36] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][36]);


--W1_acq_data_in_pipe_reg[2][37] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][37]
--register power-up is low

W1_acq_data_in_pipe_reg[2][37] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][37]);


--W1_acq_data_in_pipe_reg[3][38] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][38]
--register power-up is low

W1_acq_data_in_pipe_reg[3][38] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][38]);


--W1_acq_data_in_pipe_reg[0][36] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][36]
--register power-up is low

W1_acq_data_in_pipe_reg[0][36] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[36]);


--W1_acq_data_in_pipe_reg[1][37] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][37]
--register power-up is low

W1_acq_data_in_pipe_reg[1][37] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][37]);


--W1_acq_data_in_pipe_reg[2][38] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][38]
--register power-up is low

W1_acq_data_in_pipe_reg[2][38] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][38]);


--W1_acq_data_in_pipe_reg[3][39] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][39]
--register power-up is low

W1_acq_data_in_pipe_reg[3][39] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][39]);


--W1_acq_data_in_pipe_reg[0][37] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][37]
--register power-up is low

W1_acq_data_in_pipe_reg[0][37] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[37]);


--W1_acq_data_in_pipe_reg[1][38] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][38]
--register power-up is low

W1_acq_data_in_pipe_reg[1][38] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][38]);


--W1_acq_data_in_pipe_reg[2][39] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][39]
--register power-up is low

W1_acq_data_in_pipe_reg[2][39] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][39]);


--W1_acq_data_in_pipe_reg[3][40] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][40]
--register power-up is low

W1_acq_data_in_pipe_reg[3][40] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][40]);


--W1_acq_data_in_pipe_reg[0][38] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][38]
--register power-up is low

W1_acq_data_in_pipe_reg[0][38] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[38]);


--W1_acq_data_in_pipe_reg[1][39] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][39]
--register power-up is low

W1_acq_data_in_pipe_reg[1][39] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][39]);


--W1_acq_data_in_pipe_reg[2][40] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][40]
--register power-up is low

W1_acq_data_in_pipe_reg[2][40] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][40]);


--W1_acq_data_in_pipe_reg[3][41] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][41]
--register power-up is low

W1_acq_data_in_pipe_reg[3][41] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][41]);


--W1_acq_data_in_pipe_reg[0][39] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][39]
--register power-up is low

W1_acq_data_in_pipe_reg[0][39] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[39]);


--W1_acq_data_in_pipe_reg[1][40] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][40]
--register power-up is low

W1_acq_data_in_pipe_reg[1][40] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][40]);


--W1_acq_data_in_pipe_reg[2][41] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][41]
--register power-up is low

W1_acq_data_in_pipe_reg[2][41] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][41]);


--W1_acq_data_in_pipe_reg[3][42] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][42]
--register power-up is low

W1_acq_data_in_pipe_reg[3][42] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][42]);


--W1_acq_data_in_pipe_reg[0][40] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][40]
--register power-up is low

W1_acq_data_in_pipe_reg[0][40] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[40]);


--W1_acq_data_in_pipe_reg[1][41] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][41]
--register power-up is low

W1_acq_data_in_pipe_reg[1][41] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][41]);


--W1_acq_data_in_pipe_reg[2][42] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][42]
--register power-up is low

W1_acq_data_in_pipe_reg[2][42] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][42]);


--W1_acq_data_in_pipe_reg[3][43] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][43]
--register power-up is low

W1_acq_data_in_pipe_reg[3][43] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][43]);


--W1_acq_data_in_pipe_reg[0][41] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][41]
--register power-up is low

W1_acq_data_in_pipe_reg[0][41] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[41]);


--W1_acq_data_in_pipe_reg[1][42] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][42]
--register power-up is low

W1_acq_data_in_pipe_reg[1][42] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][42]);


--W1_acq_data_in_pipe_reg[2][43] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][43]
--register power-up is low

W1_acq_data_in_pipe_reg[2][43] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][43]);


--W1_acq_data_in_pipe_reg[3][44] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][44]
--register power-up is low

W1_acq_data_in_pipe_reg[3][44] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][44]);


--W1_acq_data_in_pipe_reg[0][42] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][42]
--register power-up is low

W1_acq_data_in_pipe_reg[0][42] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[42]);


--W1_acq_data_in_pipe_reg[1][43] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][43]
--register power-up is low

W1_acq_data_in_pipe_reg[1][43] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][43]);


--W1_acq_data_in_pipe_reg[2][44] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][44]
--register power-up is low

W1_acq_data_in_pipe_reg[2][44] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][44]);


--W1_acq_data_in_pipe_reg[3][45] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][45]
--register power-up is low

W1_acq_data_in_pipe_reg[3][45] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][45]);


--W1_acq_data_in_pipe_reg[0][43] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][43]
--register power-up is low

W1_acq_data_in_pipe_reg[0][43] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[43]);


--W1_acq_data_in_pipe_reg[1][44] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][44]
--register power-up is low

W1_acq_data_in_pipe_reg[1][44] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][44]);


--W1_acq_data_in_pipe_reg[2][45] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][45]
--register power-up is low

W1_acq_data_in_pipe_reg[2][45] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][45]);


--W1_acq_data_in_pipe_reg[3][46] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][46]
--register power-up is low

W1_acq_data_in_pipe_reg[3][46] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][46]);


--W1_acq_data_in_pipe_reg[0][44] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][44]
--register power-up is low

W1_acq_data_in_pipe_reg[0][44] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[44]);


--W1_acq_data_in_pipe_reg[1][45] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][45]
--register power-up is low

W1_acq_data_in_pipe_reg[1][45] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][45]);


--W1_acq_data_in_pipe_reg[2][46] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][46]
--register power-up is low

W1_acq_data_in_pipe_reg[2][46] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][46]);


--W1_acq_data_in_pipe_reg[3][47] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][47]
--register power-up is low

W1_acq_data_in_pipe_reg[3][47] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][47]);


--W1_acq_data_in_pipe_reg[0][45] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][45]
--register power-up is low

W1_acq_data_in_pipe_reg[0][45] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[45]);


--W1_acq_data_in_pipe_reg[1][46] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][46]
--register power-up is low

W1_acq_data_in_pipe_reg[1][46] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][46]);


--W1_acq_data_in_pipe_reg[2][47] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][47]
--register power-up is low

W1_acq_data_in_pipe_reg[2][47] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][47]);


--W1_acq_data_in_pipe_reg[3][48] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][48]
--register power-up is low

W1_acq_data_in_pipe_reg[3][48] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][48]);


--W1_acq_data_in_pipe_reg[0][46] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][46]
--register power-up is low

W1_acq_data_in_pipe_reg[0][46] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[46]);


--W1_acq_data_in_pipe_reg[1][47] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][47]
--register power-up is low

W1_acq_data_in_pipe_reg[1][47] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][47]);


--W1_acq_data_in_pipe_reg[2][48] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][48]
--register power-up is low

W1_acq_data_in_pipe_reg[2][48] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][48]);


--W1_acq_data_in_pipe_reg[3][49] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][49]
--register power-up is low

W1_acq_data_in_pipe_reg[3][49] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][49]);


--W1_acq_data_in_pipe_reg[0][47] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][47]
--register power-up is low

W1_acq_data_in_pipe_reg[0][47] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[47]);


--W1_acq_data_in_pipe_reg[1][48] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][48]
--register power-up is low

W1_acq_data_in_pipe_reg[1][48] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][48]);


--W1_acq_data_in_pipe_reg[2][49] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][49]
--register power-up is low

W1_acq_data_in_pipe_reg[2][49] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][49]);


--W1_acq_data_in_pipe_reg[3][50] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][50]
--register power-up is low

W1_acq_data_in_pipe_reg[3][50] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][50]);


--W1_acq_data_in_pipe_reg[0][48] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][48]
--register power-up is low

W1_acq_data_in_pipe_reg[0][48] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[48]);


--W1_acq_data_in_pipe_reg[1][49] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][49]
--register power-up is low

W1_acq_data_in_pipe_reg[1][49] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][49]);


--W1_acq_data_in_pipe_reg[2][50] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][50]
--register power-up is low

W1_acq_data_in_pipe_reg[2][50] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][50]);


--W1_acq_data_in_pipe_reg[3][51] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][51]
--register power-up is low

W1_acq_data_in_pipe_reg[3][51] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][51]);


--W1_acq_data_in_pipe_reg[0][49] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][49]
--register power-up is low

W1_acq_data_in_pipe_reg[0][49] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[49]);


--W1_acq_data_in_pipe_reg[1][50] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][50]
--register power-up is low

W1_acq_data_in_pipe_reg[1][50] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][50]);


--W1_acq_data_in_pipe_reg[2][51] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][51]
--register power-up is low

W1_acq_data_in_pipe_reg[2][51] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][51]);


--W1_acq_data_in_pipe_reg[3][52] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][52]
--register power-up is low

W1_acq_data_in_pipe_reg[3][52] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][52]);


--W1_acq_data_in_pipe_reg[0][50] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][50]
--register power-up is low

W1_acq_data_in_pipe_reg[0][50] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[50]);


--W1_acq_data_in_pipe_reg[1][51] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][51]
--register power-up is low

W1_acq_data_in_pipe_reg[1][51] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][51]);


--W1_acq_data_in_pipe_reg[2][52] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][52]
--register power-up is low

W1_acq_data_in_pipe_reg[2][52] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][52]);


--W1_acq_data_in_pipe_reg[3][53] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][53]
--register power-up is low

W1_acq_data_in_pipe_reg[3][53] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][53]);


--W1_acq_data_in_pipe_reg[0][51] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][51]
--register power-up is low

W1_acq_data_in_pipe_reg[0][51] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[51]);


--W1_acq_data_in_pipe_reg[1][52] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][52]
--register power-up is low

W1_acq_data_in_pipe_reg[1][52] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][52]);


--W1_acq_data_in_pipe_reg[2][53] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][53]
--register power-up is low

W1_acq_data_in_pipe_reg[2][53] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][53]);


--W1_acq_data_in_pipe_reg[3][54] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][54]
--register power-up is low

W1_acq_data_in_pipe_reg[3][54] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][54]);


--W1_acq_data_in_pipe_reg[0][52] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][52]
--register power-up is low

W1_acq_data_in_pipe_reg[0][52] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[52]);


--W1_acq_data_in_pipe_reg[1][53] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][53]
--register power-up is low

W1_acq_data_in_pipe_reg[1][53] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][53]);


--W1_acq_data_in_pipe_reg[2][54] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][54]
--register power-up is low

W1_acq_data_in_pipe_reg[2][54] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][54]);


--W1_acq_data_in_pipe_reg[3][55] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][55]
--register power-up is low

W1_acq_data_in_pipe_reg[3][55] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][55]);


--W1_acq_data_in_pipe_reg[0][53] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][53]
--register power-up is low

W1_acq_data_in_pipe_reg[0][53] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[53]);


--W1_acq_data_in_pipe_reg[1][54] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][54]
--register power-up is low

W1_acq_data_in_pipe_reg[1][54] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][54]);


--W1_acq_data_in_pipe_reg[2][55] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][55]
--register power-up is low

W1_acq_data_in_pipe_reg[2][55] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][55]);


--W1_acq_data_in_pipe_reg[3][56] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][56]
--register power-up is low

W1_acq_data_in_pipe_reg[3][56] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][56]);


--W1_acq_data_in_pipe_reg[0][54] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][54]
--register power-up is low

W1_acq_data_in_pipe_reg[0][54] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[54]);


--W1_acq_data_in_pipe_reg[1][55] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][55]
--register power-up is low

W1_acq_data_in_pipe_reg[1][55] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][55]);


--W1_acq_data_in_pipe_reg[2][56] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][56]
--register power-up is low

W1_acq_data_in_pipe_reg[2][56] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][56]);


--W1_acq_data_in_pipe_reg[3][57] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][57]
--register power-up is low

W1_acq_data_in_pipe_reg[3][57] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][57]);


--W1_acq_data_in_pipe_reg[0][55] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][55]
--register power-up is low

W1_acq_data_in_pipe_reg[0][55] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[55]);


--W1_acq_data_in_pipe_reg[1][56] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][56]
--register power-up is low

W1_acq_data_in_pipe_reg[1][56] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][56]);


--W1_acq_data_in_pipe_reg[2][57] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][57]
--register power-up is low

W1_acq_data_in_pipe_reg[2][57] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][57]);


--W1_acq_data_in_pipe_reg[3][58] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][58]
--register power-up is low

W1_acq_data_in_pipe_reg[3][58] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][58]);


--W1_acq_data_in_pipe_reg[0][56] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][56]
--register power-up is low

W1_acq_data_in_pipe_reg[0][56] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[56]);


--W1_acq_data_in_pipe_reg[1][57] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][57]
--register power-up is low

W1_acq_data_in_pipe_reg[1][57] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][57]);


--W1_acq_data_in_pipe_reg[2][58] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][58]
--register power-up is low

W1_acq_data_in_pipe_reg[2][58] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][58]);


--W1_acq_data_in_pipe_reg[3][59] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][59]
--register power-up is low

W1_acq_data_in_pipe_reg[3][59] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][59]);


--W1_acq_data_in_pipe_reg[0][57] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][57]
--register power-up is low

W1_acq_data_in_pipe_reg[0][57] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[57]);


--W1_acq_data_in_pipe_reg[1][58] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][58]
--register power-up is low

W1_acq_data_in_pipe_reg[1][58] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][58]);


--W1_acq_data_in_pipe_reg[2][59] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][59]
--register power-up is low

W1_acq_data_in_pipe_reg[2][59] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][59]);


--W1_acq_data_in_pipe_reg[3][60] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][60]
--register power-up is low

W1_acq_data_in_pipe_reg[3][60] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][60]);


--W1_acq_data_in_pipe_reg[0][58] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][58]
--register power-up is low

W1_acq_data_in_pipe_reg[0][58] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[58]);


--W1_acq_data_in_pipe_reg[1][59] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][59]
--register power-up is low

W1_acq_data_in_pipe_reg[1][59] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][59]);


--W1_acq_data_in_pipe_reg[2][60] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][60]
--register power-up is low

W1_acq_data_in_pipe_reg[2][60] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][60]);


--W1_acq_data_in_pipe_reg[3][61] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][61]
--register power-up is low

W1_acq_data_in_pipe_reg[3][61] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][61]);


--W1_acq_data_in_pipe_reg[0][59] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][59]
--register power-up is low

W1_acq_data_in_pipe_reg[0][59] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[59]);


--W1_acq_data_in_pipe_reg[1][60] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][60]
--register power-up is low

W1_acq_data_in_pipe_reg[1][60] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][60]);


--W1_acq_data_in_pipe_reg[2][61] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][61]
--register power-up is low

W1_acq_data_in_pipe_reg[2][61] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][61]);


--W1_acq_data_in_pipe_reg[3][62] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][62]
--register power-up is low

W1_acq_data_in_pipe_reg[3][62] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][62]);


--W1_acq_data_in_pipe_reg[0][60] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][60]
--register power-up is low

W1_acq_data_in_pipe_reg[0][60] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[60]);


--W1_acq_data_in_pipe_reg[1][61] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][61]
--register power-up is low

W1_acq_data_in_pipe_reg[1][61] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][61]);


--W1_acq_data_in_pipe_reg[2][62] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][62]
--register power-up is low

W1_acq_data_in_pipe_reg[2][62] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][62]);


--W1_acq_data_in_pipe_reg[3][63] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][63]
--register power-up is low

W1_acq_data_in_pipe_reg[3][63] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][63]);


--W1_acq_data_in_pipe_reg[0][61] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][61]
--register power-up is low

W1_acq_data_in_pipe_reg[0][61] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[61]);


--W1_acq_data_in_pipe_reg[1][62] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][62]
--register power-up is low

W1_acq_data_in_pipe_reg[1][62] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][62]);


--W1_acq_data_in_pipe_reg[2][63] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][63]
--register power-up is low

W1_acq_data_in_pipe_reg[2][63] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][63]);


--W1_acq_data_in_pipe_reg[3][64] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][64]
--register power-up is low

W1_acq_data_in_pipe_reg[3][64] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][64]);


--W1_acq_data_in_pipe_reg[0][62] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][62]
--register power-up is low

W1_acq_data_in_pipe_reg[0][62] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[62]);


--W1_acq_data_in_pipe_reg[1][63] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][63]
--register power-up is low

W1_acq_data_in_pipe_reg[1][63] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][63]);


--W1_acq_data_in_pipe_reg[2][64] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][64]
--register power-up is low

W1_acq_data_in_pipe_reg[2][64] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][64]);


--W1_acq_data_in_pipe_reg[3][65] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][65]
--register power-up is low

W1_acq_data_in_pipe_reg[3][65] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][65]);


--W1_acq_data_in_pipe_reg[0][63] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][63]
--register power-up is low

W1_acq_data_in_pipe_reg[0][63] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[63]);


--W1_acq_data_in_pipe_reg[1][64] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][64]
--register power-up is low

W1_acq_data_in_pipe_reg[1][64] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][64]);


--W1_acq_data_in_pipe_reg[2][65] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][65]
--register power-up is low

W1_acq_data_in_pipe_reg[2][65] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][65]);


--W1_acq_data_in_pipe_reg[3][66] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][66]
--register power-up is low

W1_acq_data_in_pipe_reg[3][66] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][66]);


--W1_acq_data_in_pipe_reg[0][64] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][64]
--register power-up is low

W1_acq_data_in_pipe_reg[0][64] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[64]);


--W1_acq_data_in_pipe_reg[1][65] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][65]
--register power-up is low

W1_acq_data_in_pipe_reg[1][65] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][65]);


--W1_acq_data_in_pipe_reg[2][66] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][66]
--register power-up is low

W1_acq_data_in_pipe_reg[2][66] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][66]);


--W1_acq_data_in_pipe_reg[3][67] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][67]
--register power-up is low

W1_acq_data_in_pipe_reg[3][67] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][67]);


--W1_acq_data_in_pipe_reg[0][65] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][65]
--register power-up is low

W1_acq_data_in_pipe_reg[0][65] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[65]);


--W1_acq_data_in_pipe_reg[1][66] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][66]
--register power-up is low

W1_acq_data_in_pipe_reg[1][66] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][66]);


--W1_acq_data_in_pipe_reg[2][67] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][67]
--register power-up is low

W1_acq_data_in_pipe_reg[2][67] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][67]);


--W1_acq_data_in_pipe_reg[3][68] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][68]
--register power-up is low

W1_acq_data_in_pipe_reg[3][68] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][68]);


--W1_acq_data_in_pipe_reg[0][66] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][66]
--register power-up is low

W1_acq_data_in_pipe_reg[0][66] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[66]);


--W1_acq_data_in_pipe_reg[1][67] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][67]
--register power-up is low

W1_acq_data_in_pipe_reg[1][67] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][67]);


--W1_acq_data_in_pipe_reg[2][68] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][68]
--register power-up is low

W1_acq_data_in_pipe_reg[2][68] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][68]);


--W1_acq_data_in_pipe_reg[3][69] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][69]
--register power-up is low

W1_acq_data_in_pipe_reg[3][69] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][69]);


--W1_acq_data_in_pipe_reg[0][67] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][67]
--register power-up is low

W1_acq_data_in_pipe_reg[0][67] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[67]);


--W1_acq_data_in_pipe_reg[1][68] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][68]
--register power-up is low

W1_acq_data_in_pipe_reg[1][68] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][68]);


--W1_acq_data_in_pipe_reg[2][69] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][69]
--register power-up is low

W1_acq_data_in_pipe_reg[2][69] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][69]);


--W1_acq_data_in_pipe_reg[3][70] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][70]
--register power-up is low

W1_acq_data_in_pipe_reg[3][70] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][70]);


--W1_acq_data_in_pipe_reg[0][68] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][68]
--register power-up is low

W1_acq_data_in_pipe_reg[0][68] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[68]);


--W1_acq_data_in_pipe_reg[1][69] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][69]
--register power-up is low

W1_acq_data_in_pipe_reg[1][69] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][69]);


--W1_acq_data_in_pipe_reg[2][70] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][70]
--register power-up is low

W1_acq_data_in_pipe_reg[2][70] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][70]);


--W1_acq_data_in_pipe_reg[3][71] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][71]
--register power-up is low

W1_acq_data_in_pipe_reg[3][71] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][71]);


--W1_acq_data_in_pipe_reg[0][69] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][69]
--register power-up is low

W1_acq_data_in_pipe_reg[0][69] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[69]);


--W1_acq_data_in_pipe_reg[1][70] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][70]
--register power-up is low

W1_acq_data_in_pipe_reg[1][70] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][70]);


--W1_acq_data_in_pipe_reg[2][71] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][71]
--register power-up is low

W1_acq_data_in_pipe_reg[2][71] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][71]);


--W1_acq_data_in_pipe_reg[3][72] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][72]
--register power-up is low

W1_acq_data_in_pipe_reg[3][72] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][72]);


--W1_acq_data_in_pipe_reg[0][70] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][70]
--register power-up is low

W1_acq_data_in_pipe_reg[0][70] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[70]);


--W1_acq_data_in_pipe_reg[1][71] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][71]
--register power-up is low

W1_acq_data_in_pipe_reg[1][71] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][71]);


--W1_acq_data_in_pipe_reg[2][72] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][72]
--register power-up is low

W1_acq_data_in_pipe_reg[2][72] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][72]);


--W1_acq_data_in_pipe_reg[3][73] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][73]
--register power-up is low

W1_acq_data_in_pipe_reg[3][73] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][73]);


--W1_acq_data_in_pipe_reg[0][71] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][71]
--register power-up is low

W1_acq_data_in_pipe_reg[0][71] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[71]);


--W1_acq_data_in_pipe_reg[1][72] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][72]
--register power-up is low

W1_acq_data_in_pipe_reg[1][72] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][72]);


--W1_acq_data_in_pipe_reg[2][73] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][73]
--register power-up is low

W1_acq_data_in_pipe_reg[2][73] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][73]);


--W1_acq_data_in_pipe_reg[3][74] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][74]
--register power-up is low

W1_acq_data_in_pipe_reg[3][74] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][74]);


--W1_acq_data_in_pipe_reg[0][72] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][72]
--register power-up is low

W1_acq_data_in_pipe_reg[0][72] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[72]);


--W1_acq_data_in_pipe_reg[1][73] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][73]
--register power-up is low

W1_acq_data_in_pipe_reg[1][73] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][73]);


--W1_acq_data_in_pipe_reg[2][74] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][74]
--register power-up is low

W1_acq_data_in_pipe_reg[2][74] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][74]);


--W1_acq_data_in_pipe_reg[3][75] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][75]
--register power-up is low

W1_acq_data_in_pipe_reg[3][75] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][75]);


--W1_acq_data_in_pipe_reg[0][73] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][73]
--register power-up is low

W1_acq_data_in_pipe_reg[0][73] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[73]);


--W1_acq_data_in_pipe_reg[1][74] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][74]
--register power-up is low

W1_acq_data_in_pipe_reg[1][74] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][74]);


--W1_acq_data_in_pipe_reg[2][75] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][75]
--register power-up is low

W1_acq_data_in_pipe_reg[2][75] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][75]);


--W1_acq_data_in_pipe_reg[3][76] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][76]
--register power-up is low

W1_acq_data_in_pipe_reg[3][76] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][76]);


--W1_acq_data_in_pipe_reg[0][74] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][74]
--register power-up is low

W1_acq_data_in_pipe_reg[0][74] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[74]);


--W1_acq_data_in_pipe_reg[1][75] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][75]
--register power-up is low

W1_acq_data_in_pipe_reg[1][75] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][75]);


--W1_acq_data_in_pipe_reg[2][76] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][76]
--register power-up is low

W1_acq_data_in_pipe_reg[2][76] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][76]);


--W1_acq_data_in_pipe_reg[3][77] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][77]
--register power-up is low

W1_acq_data_in_pipe_reg[3][77] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][77]);


--W1_acq_data_in_pipe_reg[0][75] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][75]
--register power-up is low

W1_acq_data_in_pipe_reg[0][75] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[75]);


--W1_acq_data_in_pipe_reg[1][76] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][76]
--register power-up is low

W1_acq_data_in_pipe_reg[1][76] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][76]);


--W1_acq_data_in_pipe_reg[2][77] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][77]
--register power-up is low

W1_acq_data_in_pipe_reg[2][77] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][77]);


--W1_acq_data_in_pipe_reg[3][78] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][78]
--register power-up is low

W1_acq_data_in_pipe_reg[3][78] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][78]);


--W1_acq_data_in_pipe_reg[0][76] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][76]
--register power-up is low

W1_acq_data_in_pipe_reg[0][76] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[76]);


--W1_acq_data_in_pipe_reg[1][77] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][77]
--register power-up is low

W1_acq_data_in_pipe_reg[1][77] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][77]);


--W1_acq_data_in_pipe_reg[2][78] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][78]
--register power-up is low

W1_acq_data_in_pipe_reg[2][78] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][78]);


--W1_acq_data_in_pipe_reg[3][79] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][79]
--register power-up is low

W1_acq_data_in_pipe_reg[3][79] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][79]);


--W1_acq_data_in_pipe_reg[0][77] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][77]
--register power-up is low

W1_acq_data_in_pipe_reg[0][77] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[77]);


--W1_acq_data_in_pipe_reg[1][78] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][78]
--register power-up is low

W1_acq_data_in_pipe_reg[1][78] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][78]);


--W1_acq_data_in_pipe_reg[2][79] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][79]
--register power-up is low

W1_acq_data_in_pipe_reg[2][79] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][79]);


--W1_acq_data_in_pipe_reg[3][80] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][80]
--register power-up is low

W1_acq_data_in_pipe_reg[3][80] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][80]);


--W1_acq_data_in_pipe_reg[0][78] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][78]
--register power-up is low

W1_acq_data_in_pipe_reg[0][78] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[78]);


--W1_acq_data_in_pipe_reg[1][79] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][79]
--register power-up is low

W1_acq_data_in_pipe_reg[1][79] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][79]);


--W1_acq_data_in_pipe_reg[2][80] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][80]
--register power-up is low

W1_acq_data_in_pipe_reg[2][80] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][80]);


--W1_acq_data_in_pipe_reg[3][81] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][81]
--register power-up is low

W1_acq_data_in_pipe_reg[3][81] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][81]);


--W1_acq_data_in_pipe_reg[0][79] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][79]
--register power-up is low

W1_acq_data_in_pipe_reg[0][79] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[79]);


--W1_acq_data_in_pipe_reg[1][80] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][80]
--register power-up is low

W1_acq_data_in_pipe_reg[1][80] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][80]);


--W1_acq_data_in_pipe_reg[2][81] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][81]
--register power-up is low

W1_acq_data_in_pipe_reg[2][81] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][81]);


--W1_acq_data_in_pipe_reg[3][82] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][82]
--register power-up is low

W1_acq_data_in_pipe_reg[3][82] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][82]);


--W1_acq_data_in_pipe_reg[0][80] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][80]
--register power-up is low

W1_acq_data_in_pipe_reg[0][80] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[80]);


--W1_acq_data_in_pipe_reg[1][81] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][81]
--register power-up is low

W1_acq_data_in_pipe_reg[1][81] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][81]);


--W1_acq_data_in_pipe_reg[2][82] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][82]
--register power-up is low

W1_acq_data_in_pipe_reg[2][82] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][82]);


--W1_acq_data_in_pipe_reg[3][83] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][83]
--register power-up is low

W1_acq_data_in_pipe_reg[3][83] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][83]);


--W1_acq_data_in_pipe_reg[0][81] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][81]
--register power-up is low

W1_acq_data_in_pipe_reg[0][81] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[81]);


--W1_acq_data_in_pipe_reg[1][82] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][82]
--register power-up is low

W1_acq_data_in_pipe_reg[1][82] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][82]);


--W1_acq_data_in_pipe_reg[2][83] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][83]
--register power-up is low

W1_acq_data_in_pipe_reg[2][83] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][83]);


--W1_acq_data_in_pipe_reg[3][84] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][84]
--register power-up is low

W1_acq_data_in_pipe_reg[3][84] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][84]);


--W1_acq_data_in_pipe_reg[0][82] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][82]
--register power-up is low

W1_acq_data_in_pipe_reg[0][82] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[82]);


--W1_acq_data_in_pipe_reg[1][83] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][83]
--register power-up is low

W1_acq_data_in_pipe_reg[1][83] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][83]);


--W1_acq_data_in_pipe_reg[2][84] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][84]
--register power-up is low

W1_acq_data_in_pipe_reg[2][84] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][84]);


--W1_acq_data_in_pipe_reg[3][85] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][85]
--register power-up is low

W1_acq_data_in_pipe_reg[3][85] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][85]);


--W1_acq_data_in_pipe_reg[0][83] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][83]
--register power-up is low

W1_acq_data_in_pipe_reg[0][83] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[83]);


--W1_acq_data_in_pipe_reg[1][84] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][84]
--register power-up is low

W1_acq_data_in_pipe_reg[1][84] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][84]);


--W1_acq_data_in_pipe_reg[2][85] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][85]
--register power-up is low

W1_acq_data_in_pipe_reg[2][85] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][85]);


--W1_acq_data_in_pipe_reg[3][86] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][86]
--register power-up is low

W1_acq_data_in_pipe_reg[3][86] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][86]);


--W1_acq_data_in_pipe_reg[0][84] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][84]
--register power-up is low

W1_acq_data_in_pipe_reg[0][84] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[84]);


--W1_acq_data_in_pipe_reg[1][85] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][85]
--register power-up is low

W1_acq_data_in_pipe_reg[1][85] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][85]);


--W1_acq_data_in_pipe_reg[2][86] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][86]
--register power-up is low

W1_acq_data_in_pipe_reg[2][86] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][86]);


--W1_acq_data_in_pipe_reg[3][87] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][87]
--register power-up is low

W1_acq_data_in_pipe_reg[3][87] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][87]);


--W1_acq_data_in_pipe_reg[0][85] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][85]
--register power-up is low

W1_acq_data_in_pipe_reg[0][85] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[85]);


--W1_acq_data_in_pipe_reg[1][86] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][86]
--register power-up is low

W1_acq_data_in_pipe_reg[1][86] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][86]);


--W1_acq_data_in_pipe_reg[2][87] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][87]
--register power-up is low

W1_acq_data_in_pipe_reg[2][87] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][87]);


--W1_acq_data_in_pipe_reg[3][88] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][88]
--register power-up is low

W1_acq_data_in_pipe_reg[3][88] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][88]);


--W1_acq_data_in_pipe_reg[0][86] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][86]
--register power-up is low

W1_acq_data_in_pipe_reg[0][86] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[86]);


--W1_acq_data_in_pipe_reg[1][87] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][87]
--register power-up is low

W1_acq_data_in_pipe_reg[1][87] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][87]);


--W1_acq_data_in_pipe_reg[2][88] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][88]
--register power-up is low

W1_acq_data_in_pipe_reg[2][88] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][88]);


--W1_acq_data_in_pipe_reg[3][89] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][89]
--register power-up is low

W1_acq_data_in_pipe_reg[3][89] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][89]);


--W1_acq_data_in_pipe_reg[0][87] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][87]
--register power-up is low

W1_acq_data_in_pipe_reg[0][87] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[87]);


--W1_acq_data_in_pipe_reg[1][88] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][88]
--register power-up is low

W1_acq_data_in_pipe_reg[1][88] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][88]);


--W1_acq_data_in_pipe_reg[2][89] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][89]
--register power-up is low

W1_acq_data_in_pipe_reg[2][89] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][89]);


--W1_acq_data_in_pipe_reg[3][90] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][90]
--register power-up is low

W1_acq_data_in_pipe_reg[3][90] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][90]);


--W1_acq_data_in_pipe_reg[0][88] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][88]
--register power-up is low

W1_acq_data_in_pipe_reg[0][88] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[88]);


--W1_acq_data_in_pipe_reg[1][89] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][89]
--register power-up is low

W1_acq_data_in_pipe_reg[1][89] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][89]);


--W1_acq_data_in_pipe_reg[2][90] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][90]
--register power-up is low

W1_acq_data_in_pipe_reg[2][90] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][90]);


--W1_acq_data_in_pipe_reg[3][91] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][91]
--register power-up is low

W1_acq_data_in_pipe_reg[3][91] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][91]);


--W1_acq_data_in_pipe_reg[0][89] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][89]
--register power-up is low

W1_acq_data_in_pipe_reg[0][89] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[89]);


--W1_acq_data_in_pipe_reg[1][90] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][90]
--register power-up is low

W1_acq_data_in_pipe_reg[1][90] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][90]);


--W1_acq_data_in_pipe_reg[2][91] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][91]
--register power-up is low

W1_acq_data_in_pipe_reg[2][91] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][91]);


--W1_acq_data_in_pipe_reg[3][92] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][92]
--register power-up is low

W1_acq_data_in_pipe_reg[3][92] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][92]);


--W1_acq_data_in_pipe_reg[0][90] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][90]
--register power-up is low

W1_acq_data_in_pipe_reg[0][90] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[90]);


--W1_acq_data_in_pipe_reg[1][91] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][91]
--register power-up is low

W1_acq_data_in_pipe_reg[1][91] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][91]);


--W1_acq_data_in_pipe_reg[2][92] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][92]
--register power-up is low

W1_acq_data_in_pipe_reg[2][92] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][92]);


--W1_acq_data_in_pipe_reg[3][93] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][93]
--register power-up is low

W1_acq_data_in_pipe_reg[3][93] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][93]);


--W1_acq_data_in_pipe_reg[0][91] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][91]
--register power-up is low

W1_acq_data_in_pipe_reg[0][91] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[91]);


--W1_acq_data_in_pipe_reg[1][92] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][92]
--register power-up is low

W1_acq_data_in_pipe_reg[1][92] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][92]);


--W1_acq_data_in_pipe_reg[2][93] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][93]
--register power-up is low

W1_acq_data_in_pipe_reg[2][93] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][93]);


--W1_acq_data_in_pipe_reg[3][94] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][94]
--register power-up is low

W1_acq_data_in_pipe_reg[3][94] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][94]);


--W1_acq_data_in_pipe_reg[0][92] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][92]
--register power-up is low

W1_acq_data_in_pipe_reg[0][92] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[92]);


--W1_acq_data_in_pipe_reg[1][93] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][93]
--register power-up is low

W1_acq_data_in_pipe_reg[1][93] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][93]);


--W1_acq_data_in_pipe_reg[2][94] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][94]
--register power-up is low

W1_acq_data_in_pipe_reg[2][94] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][94]);


--W1_acq_data_in_pipe_reg[3][95] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][95]
--register power-up is low

W1_acq_data_in_pipe_reg[3][95] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][95]);


--W1_acq_data_in_pipe_reg[0][93] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][93]
--register power-up is low

W1_acq_data_in_pipe_reg[0][93] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[93]);


--W1_acq_data_in_pipe_reg[1][94] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][94]
--register power-up is low

W1_acq_data_in_pipe_reg[1][94] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][94]);


--W1_acq_data_in_pipe_reg[2][95] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][95]
--register power-up is low

W1_acq_data_in_pipe_reg[2][95] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][95]);


--W1_acq_data_in_pipe_reg[3][96] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][96]
--register power-up is low

W1_acq_data_in_pipe_reg[3][96] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][96]);


--W1_acq_data_in_pipe_reg[0][94] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][94]
--register power-up is low

W1_acq_data_in_pipe_reg[0][94] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[94]);


--W1_acq_data_in_pipe_reg[1][95] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][95]
--register power-up is low

W1_acq_data_in_pipe_reg[1][95] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][95]);


--W1_acq_data_in_pipe_reg[2][96] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][96]
--register power-up is low

W1_acq_data_in_pipe_reg[2][96] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][96]);


--W1_acq_data_in_pipe_reg[3][97] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][97]
--register power-up is low

W1_acq_data_in_pipe_reg[3][97] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][97]);


--W1_acq_data_in_pipe_reg[0][95] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][95]
--register power-up is low

W1_acq_data_in_pipe_reg[0][95] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[95]);


--W1_acq_data_in_pipe_reg[1][96] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][96]
--register power-up is low

W1_acq_data_in_pipe_reg[1][96] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][96]);


--W1_acq_data_in_pipe_reg[2][97] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][97]
--register power-up is low

W1_acq_data_in_pipe_reg[2][97] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][97]);


--W1_acq_data_in_pipe_reg[3][98] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][98]
--register power-up is low

W1_acq_data_in_pipe_reg[3][98] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][98]);


--W1_acq_data_in_pipe_reg[0][96] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][96]
--register power-up is low

W1_acq_data_in_pipe_reg[0][96] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[96]);


--W1_acq_data_in_pipe_reg[1][97] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][97]
--register power-up is low

W1_acq_data_in_pipe_reg[1][97] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][97]);


--W1_acq_data_in_pipe_reg[2][98] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][98]
--register power-up is low

W1_acq_data_in_pipe_reg[2][98] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][98]);


--W1_acq_data_in_pipe_reg[3][99] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][99]
--register power-up is low

W1_acq_data_in_pipe_reg[3][99] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][99]);


--W1_acq_data_in_pipe_reg[0][97] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][97]
--register power-up is low

W1_acq_data_in_pipe_reg[0][97] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[97]);


--W1_acq_data_in_pipe_reg[1][98] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][98]
--register power-up is low

W1_acq_data_in_pipe_reg[1][98] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][98]);


--W1_acq_data_in_pipe_reg[2][99] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][99]
--register power-up is low

W1_acq_data_in_pipe_reg[2][99] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][99]);


--W1_acq_data_in_pipe_reg[3][100] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][100]
--register power-up is low

W1_acq_data_in_pipe_reg[3][100] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][100]);


--W1_acq_data_in_pipe_reg[0][98] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][98]
--register power-up is low

W1_acq_data_in_pipe_reg[0][98] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[98]);


--W1_acq_data_in_pipe_reg[1][99] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][99]
--register power-up is low

W1_acq_data_in_pipe_reg[1][99] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][99]);


--W1_acq_data_in_pipe_reg[2][100] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][100]
--register power-up is low

W1_acq_data_in_pipe_reg[2][100] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][100]);


--W1_acq_data_in_pipe_reg[3][101] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][101]
--register power-up is low

W1_acq_data_in_pipe_reg[3][101] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][101]);


--W1_acq_data_in_pipe_reg[0][99] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][99]
--register power-up is low

W1_acq_data_in_pipe_reg[0][99] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[99]);


--W1_acq_data_in_pipe_reg[1][100] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][100]
--register power-up is low

W1_acq_data_in_pipe_reg[1][100] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][100]);


--W1_acq_data_in_pipe_reg[2][101] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][101]
--register power-up is low

W1_acq_data_in_pipe_reg[2][101] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][101]);


--W1_acq_data_in_pipe_reg[3][102] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][102]
--register power-up is low

W1_acq_data_in_pipe_reg[3][102] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][102]);


--W1_acq_data_in_pipe_reg[0][100] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][100]
--register power-up is low

W1_acq_data_in_pipe_reg[0][100] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[100]);


--W1_acq_data_in_pipe_reg[1][101] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][101]
--register power-up is low

W1_acq_data_in_pipe_reg[1][101] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][101]);


--W1_acq_data_in_pipe_reg[2][102] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][102]
--register power-up is low

W1_acq_data_in_pipe_reg[2][102] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][102]);


--W1_acq_data_in_pipe_reg[3][103] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][103]
--register power-up is low

W1_acq_data_in_pipe_reg[3][103] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][103]);


--W1_acq_data_in_pipe_reg[0][101] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][101]
--register power-up is low

W1_acq_data_in_pipe_reg[0][101] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[101]);


--W1_acq_data_in_pipe_reg[1][102] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][102]
--register power-up is low

W1_acq_data_in_pipe_reg[1][102] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][102]);


--W1_acq_data_in_pipe_reg[2][103] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][103]
--register power-up is low

W1_acq_data_in_pipe_reg[2][103] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][103]);


--W1_acq_data_in_pipe_reg[3][104] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][104]
--register power-up is low

W1_acq_data_in_pipe_reg[3][104] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][104]);


--W1_acq_data_in_pipe_reg[0][102] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][102]
--register power-up is low

W1_acq_data_in_pipe_reg[0][102] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[102]);


--W1_acq_data_in_pipe_reg[1][103] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][103]
--register power-up is low

W1_acq_data_in_pipe_reg[1][103] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][103]);


--W1_acq_data_in_pipe_reg[2][104] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][104]
--register power-up is low

W1_acq_data_in_pipe_reg[2][104] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][104]);


--W1_acq_data_in_pipe_reg[3][105] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][105]
--register power-up is low

W1_acq_data_in_pipe_reg[3][105] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][105]);


--W1_acq_data_in_pipe_reg[0][103] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][103]
--register power-up is low

W1_acq_data_in_pipe_reg[0][103] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[103]);


--W1_acq_data_in_pipe_reg[1][104] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][104]
--register power-up is low

W1_acq_data_in_pipe_reg[1][104] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][104]);


--W1_acq_data_in_pipe_reg[2][105] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][105]
--register power-up is low

W1_acq_data_in_pipe_reg[2][105] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][105]);


--W1_acq_data_in_pipe_reg[3][106] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][106]
--register power-up is low

W1_acq_data_in_pipe_reg[3][106] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][106]);


--W1_acq_data_in_pipe_reg[0][104] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][104]
--register power-up is low

W1_acq_data_in_pipe_reg[0][104] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[104]);


--W1_acq_data_in_pipe_reg[1][105] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][105]
--register power-up is low

W1_acq_data_in_pipe_reg[1][105] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][105]);


--W1_acq_data_in_pipe_reg[2][106] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][106]
--register power-up is low

W1_acq_data_in_pipe_reg[2][106] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][106]);


--W1_acq_data_in_pipe_reg[3][107] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][107]
--register power-up is low

W1_acq_data_in_pipe_reg[3][107] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][107]);


--W1_acq_data_in_pipe_reg[0][105] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][105]
--register power-up is low

W1_acq_data_in_pipe_reg[0][105] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[105]);


--W1_acq_data_in_pipe_reg[1][106] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][106]
--register power-up is low

W1_acq_data_in_pipe_reg[1][106] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][106]);


--W1_acq_data_in_pipe_reg[2][107] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][107]
--register power-up is low

W1_acq_data_in_pipe_reg[2][107] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][107]);


--W1_acq_data_in_pipe_reg[3][108] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][108]
--register power-up is low

W1_acq_data_in_pipe_reg[3][108] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][108]);


--W1_acq_data_in_pipe_reg[0][106] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][106]
--register power-up is low

W1_acq_data_in_pipe_reg[0][106] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[106]);


--W1_acq_data_in_pipe_reg[1][107] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][107]
--register power-up is low

W1_acq_data_in_pipe_reg[1][107] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][107]);


--W1_acq_data_in_pipe_reg[2][108] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][108]
--register power-up is low

W1_acq_data_in_pipe_reg[2][108] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][108]);


--W1_acq_data_in_pipe_reg[3][109] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][109]
--register power-up is low

W1_acq_data_in_pipe_reg[3][109] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][109]);


--W1_acq_data_in_pipe_reg[0][107] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][107]
--register power-up is low

W1_acq_data_in_pipe_reg[0][107] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[107]);


--W1_acq_data_in_pipe_reg[1][108] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][108]
--register power-up is low

W1_acq_data_in_pipe_reg[1][108] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][108]);


--W1_acq_data_in_pipe_reg[2][109] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][109]
--register power-up is low

W1_acq_data_in_pipe_reg[2][109] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][109]);


--W1_acq_data_in_pipe_reg[3][110] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][110]
--register power-up is low

W1_acq_data_in_pipe_reg[3][110] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][110]);


--W1_acq_data_in_pipe_reg[0][108] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][108]
--register power-up is low

W1_acq_data_in_pipe_reg[0][108] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[108]);


--W1_acq_data_in_pipe_reg[1][109] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][109]
--register power-up is low

W1_acq_data_in_pipe_reg[1][109] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][109]);


--W1_acq_data_in_pipe_reg[2][110] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][110]
--register power-up is low

W1_acq_data_in_pipe_reg[2][110] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][110]);


--W1_acq_data_in_pipe_reg[3][111] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][111]
--register power-up is low

W1_acq_data_in_pipe_reg[3][111] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][111]);


--W1_acq_data_in_pipe_reg[0][109] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][109]
--register power-up is low

W1_acq_data_in_pipe_reg[0][109] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[109]);


--W1_acq_data_in_pipe_reg[1][110] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][110]
--register power-up is low

W1_acq_data_in_pipe_reg[1][110] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][110]);


--W1_acq_data_in_pipe_reg[2][111] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][111]
--register power-up is low

W1_acq_data_in_pipe_reg[2][111] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][111]);


--W1_acq_data_in_pipe_reg[3][112] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][112]
--register power-up is low

W1_acq_data_in_pipe_reg[3][112] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][112]);


--W1_acq_data_in_pipe_reg[0][110] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][110]
--register power-up is low

W1_acq_data_in_pipe_reg[0][110] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[110]);


--W1_acq_data_in_pipe_reg[1][111] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][111]
--register power-up is low

W1_acq_data_in_pipe_reg[1][111] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][111]);


--W1_acq_data_in_pipe_reg[2][112] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][112]
--register power-up is low

W1_acq_data_in_pipe_reg[2][112] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][112]);


--W1_acq_data_in_pipe_reg[3][113] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][113]
--register power-up is low

W1_acq_data_in_pipe_reg[3][113] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][113]);


--W1_acq_data_in_pipe_reg[0][111] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][111]
--register power-up is low

W1_acq_data_in_pipe_reg[0][111] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[111]);


--W1_acq_data_in_pipe_reg[1][112] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][112]
--register power-up is low

W1_acq_data_in_pipe_reg[1][112] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][112]);


--W1_acq_data_in_pipe_reg[2][113] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][113]
--register power-up is low

W1_acq_data_in_pipe_reg[2][113] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][113]);


--W1_acq_data_in_pipe_reg[3][114] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][114]
--register power-up is low

W1_acq_data_in_pipe_reg[3][114] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][114]);


--W1_acq_data_in_pipe_reg[0][112] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][112]
--register power-up is low

W1_acq_data_in_pipe_reg[0][112] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[112]);


--W1_acq_data_in_pipe_reg[1][113] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][113]
--register power-up is low

W1_acq_data_in_pipe_reg[1][113] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][113]);


--W1_acq_data_in_pipe_reg[2][114] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][114]
--register power-up is low

W1_acq_data_in_pipe_reg[2][114] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][114]);


--W1_acq_data_in_pipe_reg[3][115] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][115]
--register power-up is low

W1_acq_data_in_pipe_reg[3][115] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][115]);


--W1_acq_data_in_pipe_reg[0][113] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][113]
--register power-up is low

W1_acq_data_in_pipe_reg[0][113] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[113]);


--W1_acq_data_in_pipe_reg[1][114] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][114]
--register power-up is low

W1_acq_data_in_pipe_reg[1][114] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][114]);


--W1_acq_data_in_pipe_reg[2][115] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][115]
--register power-up is low

W1_acq_data_in_pipe_reg[2][115] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][115]);


--W1_acq_data_in_pipe_reg[3][116] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][116]
--register power-up is low

W1_acq_data_in_pipe_reg[3][116] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][116]);


--W1_acq_data_in_pipe_reg[0][114] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][114]
--register power-up is low

W1_acq_data_in_pipe_reg[0][114] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[114]);


--W1_acq_data_in_pipe_reg[1][115] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][115]
--register power-up is low

W1_acq_data_in_pipe_reg[1][115] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][115]);


--W1_acq_data_in_pipe_reg[2][116] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][116]
--register power-up is low

W1_acq_data_in_pipe_reg[2][116] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][116]);


--W1_acq_data_in_pipe_reg[3][117] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][117]
--register power-up is low

W1_acq_data_in_pipe_reg[3][117] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][117]);


--W1_acq_data_in_pipe_reg[0][115] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][115]
--register power-up is low

W1_acq_data_in_pipe_reg[0][115] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[115]);


--W1_acq_data_in_pipe_reg[1][116] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][116]
--register power-up is low

W1_acq_data_in_pipe_reg[1][116] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][116]);


--W1_acq_data_in_pipe_reg[2][117] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][117]
--register power-up is low

W1_acq_data_in_pipe_reg[2][117] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][117]);


--W1_acq_data_in_pipe_reg[3][118] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][118]
--register power-up is low

W1_acq_data_in_pipe_reg[3][118] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][118]);


--W1_acq_data_in_pipe_reg[0][116] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][116]
--register power-up is low

W1_acq_data_in_pipe_reg[0][116] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[116]);


--W1_acq_data_in_pipe_reg[1][117] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][117]
--register power-up is low

W1_acq_data_in_pipe_reg[1][117] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][117]);


--W1_acq_data_in_pipe_reg[2][118] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][118]
--register power-up is low

W1_acq_data_in_pipe_reg[2][118] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][118]);


--W1_acq_data_in_pipe_reg[3][119] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][119]
--register power-up is low

W1_acq_data_in_pipe_reg[3][119] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][119]);


--W1_acq_data_in_pipe_reg[0][117] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][117]
--register power-up is low

W1_acq_data_in_pipe_reg[0][117] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[117]);


--W1_acq_data_in_pipe_reg[1][118] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][118]
--register power-up is low

W1_acq_data_in_pipe_reg[1][118] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][118]);


--W1_acq_data_in_pipe_reg[2][119] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][119]
--register power-up is low

W1_acq_data_in_pipe_reg[2][119] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][119]);


--W1_acq_data_in_pipe_reg[3][120] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][120]
--register power-up is low

W1_acq_data_in_pipe_reg[3][120] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][120]);


--W1_acq_data_in_pipe_reg[0][118] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][118]
--register power-up is low

W1_acq_data_in_pipe_reg[0][118] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[118]);


--W1_acq_data_in_pipe_reg[1][119] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][119]
--register power-up is low

W1_acq_data_in_pipe_reg[1][119] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][119]);


--W1_acq_data_in_pipe_reg[2][120] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][120]
--register power-up is low

W1_acq_data_in_pipe_reg[2][120] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][120]);


--W1_acq_data_in_pipe_reg[3][121] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][121]
--register power-up is low

W1_acq_data_in_pipe_reg[3][121] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][121]);


--W1_acq_data_in_pipe_reg[0][119] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][119]
--register power-up is low

W1_acq_data_in_pipe_reg[0][119] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[119]);


--W1_acq_data_in_pipe_reg[1][120] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][120]
--register power-up is low

W1_acq_data_in_pipe_reg[1][120] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][120]);


--W1_acq_data_in_pipe_reg[2][121] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][121]
--register power-up is low

W1_acq_data_in_pipe_reg[2][121] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][121]);


--W1_acq_data_in_pipe_reg[3][122] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][122]
--register power-up is low

W1_acq_data_in_pipe_reg[3][122] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][122]);


--W1_acq_data_in_pipe_reg[0][120] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][120]
--register power-up is low

W1_acq_data_in_pipe_reg[0][120] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[120]);


--W1_acq_data_in_pipe_reg[1][121] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][121]
--register power-up is low

W1_acq_data_in_pipe_reg[1][121] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][121]);


--W1_acq_data_in_pipe_reg[2][122] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][122]
--register power-up is low

W1_acq_data_in_pipe_reg[2][122] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][122]);


--W1_acq_data_in_pipe_reg[3][123] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][123]
--register power-up is low

W1_acq_data_in_pipe_reg[3][123] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][123]);


--W1_acq_data_in_pipe_reg[0][121] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][121]
--register power-up is low

W1_acq_data_in_pipe_reg[0][121] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[121]);


--W1_acq_data_in_pipe_reg[1][122] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][122]
--register power-up is low

W1_acq_data_in_pipe_reg[1][122] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][122]);


--W1_acq_data_in_pipe_reg[2][123] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][123]
--register power-up is low

W1_acq_data_in_pipe_reg[2][123] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][123]);


--W1_acq_data_in_pipe_reg[3][124] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][124]
--register power-up is low

W1_acq_data_in_pipe_reg[3][124] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][124]);


--W1_acq_data_in_pipe_reg[0][122] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][122]
--register power-up is low

W1_acq_data_in_pipe_reg[0][122] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[122]);


--W1_acq_data_in_pipe_reg[1][123] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][123]
--register power-up is low

W1_acq_data_in_pipe_reg[1][123] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][123]);


--W1_acq_data_in_pipe_reg[2][124] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][124]
--register power-up is low

W1_acq_data_in_pipe_reg[2][124] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][124]);


--W1_acq_data_in_pipe_reg[3][125] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][125]
--register power-up is low

W1_acq_data_in_pipe_reg[3][125] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][125]);


--W1_acq_data_in_pipe_reg[0][123] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][123]
--register power-up is low

W1_acq_data_in_pipe_reg[0][123] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[123]);


--W1_acq_data_in_pipe_reg[1][124] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][124]
--register power-up is low

W1_acq_data_in_pipe_reg[1][124] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][124]);


--W1_acq_data_in_pipe_reg[2][125] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][125]
--register power-up is low

W1_acq_data_in_pipe_reg[2][125] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][125]);


--W1_acq_data_in_pipe_reg[3][126] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][126]
--register power-up is low

W1_acq_data_in_pipe_reg[3][126] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][126]);


--W1_acq_data_in_pipe_reg[0][124] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][124]
--register power-up is low

W1_acq_data_in_pipe_reg[0][124] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[124]);


--W1_acq_data_in_pipe_reg[1][125] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][125]
--register power-up is low

W1_acq_data_in_pipe_reg[1][125] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][125]);


--W1_acq_data_in_pipe_reg[2][126] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][126]
--register power-up is low

W1_acq_data_in_pipe_reg[2][126] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][126]);


--W1_acq_data_in_pipe_reg[3][127] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][127]
--register power-up is low

W1_acq_data_in_pipe_reg[3][127] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][127]);


--W1_acq_data_in_pipe_reg[0][125] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][125]
--register power-up is low

W1_acq_data_in_pipe_reg[0][125] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[125]);


--W1_acq_data_in_pipe_reg[1][126] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][126]
--register power-up is low

W1_acq_data_in_pipe_reg[1][126] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][126]);


--W1_acq_data_in_pipe_reg[2][127] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][127]
--register power-up is low

W1_acq_data_in_pipe_reg[2][127] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][127]);


--W1_acq_data_in_pipe_reg[3][128] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][128]
--register power-up is low

W1_acq_data_in_pipe_reg[3][128] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][128]);


--W1_acq_data_in_pipe_reg[0][126] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][126]
--register power-up is low

W1_acq_data_in_pipe_reg[0][126] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[126]);


--W1_acq_data_in_pipe_reg[1][127] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][127]
--register power-up is low

W1_acq_data_in_pipe_reg[1][127] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][127]);


--W1_acq_data_in_pipe_reg[2][128] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][128]
--register power-up is low

W1_acq_data_in_pipe_reg[2][128] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][128]);


--W1_acq_data_in_pipe_reg[3][129] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][129]
--register power-up is low

W1_acq_data_in_pipe_reg[3][129] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][129]);


--W1_acq_data_in_pipe_reg[0][127] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][127]
--register power-up is low

W1_acq_data_in_pipe_reg[0][127] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[127]);


--W1_acq_data_in_pipe_reg[1][128] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][128]
--register power-up is low

W1_acq_data_in_pipe_reg[1][128] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][128]);


--W1_acq_data_in_pipe_reg[2][129] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][129]
--register power-up is low

W1_acq_data_in_pipe_reg[2][129] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][129]);


--W1_acq_data_in_pipe_reg[3][130] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][130]
--register power-up is low

W1_acq_data_in_pipe_reg[3][130] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][130]);


--W1_acq_data_in_pipe_reg[0][128] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][128]
--register power-up is low

W1_acq_data_in_pipe_reg[0][128] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[128]);


--W1_acq_data_in_pipe_reg[1][129] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][129]
--register power-up is low

W1_acq_data_in_pipe_reg[1][129] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][129]);


--W1_acq_data_in_pipe_reg[2][130] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][130]
--register power-up is low

W1_acq_data_in_pipe_reg[2][130] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][130]);


--W1_acq_data_in_pipe_reg[3][131] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][131]
--register power-up is low

W1_acq_data_in_pipe_reg[3][131] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][131]);


--W1_acq_data_in_pipe_reg[0][129] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][129]
--register power-up is low

W1_acq_data_in_pipe_reg[0][129] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[129]);


--W1_acq_data_in_pipe_reg[1][130] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][130]
--register power-up is low

W1_acq_data_in_pipe_reg[1][130] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][130]);


--W1_acq_data_in_pipe_reg[2][131] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][131]
--register power-up is low

W1_acq_data_in_pipe_reg[2][131] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][131]);


--W1_acq_data_in_pipe_reg[3][132] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][132]
--register power-up is low

W1_acq_data_in_pipe_reg[3][132] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][132]);


--W1_acq_data_in_pipe_reg[0][130] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][130]
--register power-up is low

W1_acq_data_in_pipe_reg[0][130] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[130]);


--W1_acq_data_in_pipe_reg[1][131] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][131]
--register power-up is low

W1_acq_data_in_pipe_reg[1][131] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][131]);


--W1_acq_data_in_pipe_reg[2][132] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][132]
--register power-up is low

W1_acq_data_in_pipe_reg[2][132] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][132]);


--W1_acq_data_in_pipe_reg[3][133] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][133]
--register power-up is low

W1_acq_data_in_pipe_reg[3][133] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][133]);


--W1_acq_data_in_pipe_reg[0][131] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][131]
--register power-up is low

W1_acq_data_in_pipe_reg[0][131] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[131]);


--W1_acq_data_in_pipe_reg[1][132] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][132]
--register power-up is low

W1_acq_data_in_pipe_reg[1][132] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][132]);


--W1_acq_data_in_pipe_reg[2][133] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][133]
--register power-up is low

W1_acq_data_in_pipe_reg[2][133] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][133]);


--W1_acq_data_in_pipe_reg[3][134] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][134]
--register power-up is low

W1_acq_data_in_pipe_reg[3][134] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][134]);


--W1_acq_data_in_pipe_reg[0][132] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][132]
--register power-up is low

W1_acq_data_in_pipe_reg[0][132] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[132]);


--W1_acq_data_in_pipe_reg[1][133] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][133]
--register power-up is low

W1_acq_data_in_pipe_reg[1][133] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][133]);


--W1_acq_data_in_pipe_reg[2][134] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][134]
--register power-up is low

W1_acq_data_in_pipe_reg[2][134] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][134]);


--W1_acq_data_in_pipe_reg[3][135] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][135]
--register power-up is low

W1_acq_data_in_pipe_reg[3][135] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][135]);


--W1_acq_data_in_pipe_reg[0][133] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][133]
--register power-up is low

W1_acq_data_in_pipe_reg[0][133] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[133]);


--W1_acq_data_in_pipe_reg[1][134] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][134]
--register power-up is low

W1_acq_data_in_pipe_reg[1][134] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][134]);


--W1_acq_data_in_pipe_reg[2][135] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][135]
--register power-up is low

W1_acq_data_in_pipe_reg[2][135] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][135]);


--W1_acq_data_in_pipe_reg[3][136] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][136]
--register power-up is low

W1_acq_data_in_pipe_reg[3][136] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][136]);


--W1_acq_data_in_pipe_reg[0][134] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][134]
--register power-up is low

W1_acq_data_in_pipe_reg[0][134] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[134]);


--W1_acq_data_in_pipe_reg[1][135] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][135]
--register power-up is low

W1_acq_data_in_pipe_reg[1][135] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][135]);


--W1_acq_data_in_pipe_reg[2][136] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][136]
--register power-up is low

W1_acq_data_in_pipe_reg[2][136] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][136]);


--W1_acq_data_in_pipe_reg[3][137] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][137]
--register power-up is low

W1_acq_data_in_pipe_reg[3][137] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][137]);


--W1_acq_data_in_pipe_reg[0][135] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][135]
--register power-up is low

W1_acq_data_in_pipe_reg[0][135] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[135]);


--W1_acq_data_in_pipe_reg[1][136] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][136]
--register power-up is low

W1_acq_data_in_pipe_reg[1][136] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][136]);


--W1_acq_data_in_pipe_reg[2][137] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][137]
--register power-up is low

W1_acq_data_in_pipe_reg[2][137] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][137]);


--W1_acq_data_in_pipe_reg[3][138] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][138]
--register power-up is low

W1_acq_data_in_pipe_reg[3][138] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][138]);


--W1_acq_data_in_pipe_reg[0][136] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][136]
--register power-up is low

W1_acq_data_in_pipe_reg[0][136] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[136]);


--W1_acq_data_in_pipe_reg[1][137] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][137]
--register power-up is low

W1_acq_data_in_pipe_reg[1][137] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][137]);


--W1_acq_data_in_pipe_reg[2][138] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][138]
--register power-up is low

W1_acq_data_in_pipe_reg[2][138] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][138]);


--W1_acq_data_in_pipe_reg[3][139] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][139]
--register power-up is low

W1_acq_data_in_pipe_reg[3][139] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][139]);


--W1_acq_data_in_pipe_reg[0][137] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][137]
--register power-up is low

W1_acq_data_in_pipe_reg[0][137] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[137]);


--W1_acq_data_in_pipe_reg[1][138] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][138]
--register power-up is low

W1_acq_data_in_pipe_reg[1][138] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][138]);


--W1_acq_data_in_pipe_reg[2][139] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][139]
--register power-up is low

W1_acq_data_in_pipe_reg[2][139] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][139]);


--W1_acq_data_in_pipe_reg[3][140] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][140]
--register power-up is low

W1_acq_data_in_pipe_reg[3][140] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][140]);


--W1_acq_data_in_pipe_reg[0][138] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][138]
--register power-up is low

W1_acq_data_in_pipe_reg[0][138] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[138]);


--W1_acq_data_in_pipe_reg[1][139] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][139]
--register power-up is low

W1_acq_data_in_pipe_reg[1][139] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][139]);


--W1_acq_data_in_pipe_reg[2][140] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][140]
--register power-up is low

W1_acq_data_in_pipe_reg[2][140] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][140]);


--W1_acq_data_in_pipe_reg[3][141] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][141]
--register power-up is low

W1_acq_data_in_pipe_reg[3][141] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][141]);


--W1_acq_data_in_pipe_reg[0][139] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][139]
--register power-up is low

W1_acq_data_in_pipe_reg[0][139] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[139]);


--W1_acq_data_in_pipe_reg[1][140] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][140]
--register power-up is low

W1_acq_data_in_pipe_reg[1][140] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][140]);


--W1_acq_data_in_pipe_reg[2][141] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][141]
--register power-up is low

W1_acq_data_in_pipe_reg[2][141] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][141]);


--W1_acq_data_in_pipe_reg[3][142] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][142]
--register power-up is low

W1_acq_data_in_pipe_reg[3][142] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][142]);


--W1_acq_data_in_pipe_reg[0][140] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][140]
--register power-up is low

W1_acq_data_in_pipe_reg[0][140] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[140]);


--W1_acq_data_in_pipe_reg[1][141] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][141]
--register power-up is low

W1_acq_data_in_pipe_reg[1][141] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][141]);


--W1_acq_data_in_pipe_reg[2][142] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][142]
--register power-up is low

W1_acq_data_in_pipe_reg[2][142] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][142]);


--W1_acq_data_in_pipe_reg[3][143] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][143]
--register power-up is low

W1_acq_data_in_pipe_reg[3][143] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][143]);


--W1_acq_data_in_pipe_reg[0][141] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][141]
--register power-up is low

W1_acq_data_in_pipe_reg[0][141] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[141]);


--W1_acq_data_in_pipe_reg[1][142] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][142]
--register power-up is low

W1_acq_data_in_pipe_reg[1][142] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][142]);


--W1_acq_data_in_pipe_reg[2][143] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][143]
--register power-up is low

W1_acq_data_in_pipe_reg[2][143] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][143]);


--W1_acq_data_in_pipe_reg[3][144] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][144]
--register power-up is low

W1_acq_data_in_pipe_reg[3][144] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][144]);


--W1_acq_data_in_pipe_reg[0][142] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][142]
--register power-up is low

W1_acq_data_in_pipe_reg[0][142] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[142]);


--W1_acq_data_in_pipe_reg[1][143] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][143]
--register power-up is low

W1_acq_data_in_pipe_reg[1][143] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][143]);


--W1_acq_data_in_pipe_reg[2][144] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][144]
--register power-up is low

W1_acq_data_in_pipe_reg[2][144] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][144]);


--W1_acq_data_in_pipe_reg[3][145] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][145]
--register power-up is low

W1_acq_data_in_pipe_reg[3][145] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][145]);


--W1_acq_data_in_pipe_reg[0][143] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][143]
--register power-up is low

W1_acq_data_in_pipe_reg[0][143] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[143]);


--W1_acq_data_in_pipe_reg[1][144] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][144]
--register power-up is low

W1_acq_data_in_pipe_reg[1][144] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][144]);


--W1_acq_data_in_pipe_reg[2][145] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][145]
--register power-up is low

W1_acq_data_in_pipe_reg[2][145] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][145]);


--W1_acq_data_in_pipe_reg[3][146] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][146]
--register power-up is low

W1_acq_data_in_pipe_reg[3][146] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][146]);


--W1_acq_data_in_pipe_reg[0][144] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][144]
--register power-up is low

W1_acq_data_in_pipe_reg[0][144] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[144]);


--W1_acq_data_in_pipe_reg[1][145] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][145]
--register power-up is low

W1_acq_data_in_pipe_reg[1][145] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][145]);


--W1_acq_data_in_pipe_reg[2][146] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][146]
--register power-up is low

W1_acq_data_in_pipe_reg[2][146] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][146]);


--W1_acq_data_in_pipe_reg[3][147] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][147]
--register power-up is low

W1_acq_data_in_pipe_reg[3][147] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][147]);


--W1_acq_data_in_pipe_reg[0][145] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][145]
--register power-up is low

W1_acq_data_in_pipe_reg[0][145] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[145]);


--W1_acq_data_in_pipe_reg[1][146] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][146]
--register power-up is low

W1_acq_data_in_pipe_reg[1][146] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][146]);


--W1_acq_data_in_pipe_reg[2][147] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][147]
--register power-up is low

W1_acq_data_in_pipe_reg[2][147] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][147]);


--W1_acq_data_in_pipe_reg[3][148] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][148]
--register power-up is low

W1_acq_data_in_pipe_reg[3][148] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][148]);


--W1_acq_data_in_pipe_reg[0][146] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][146]
--register power-up is low

W1_acq_data_in_pipe_reg[0][146] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[146]);


--W1_acq_data_in_pipe_reg[1][147] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][147]
--register power-up is low

W1_acq_data_in_pipe_reg[1][147] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][147]);


--W1_acq_data_in_pipe_reg[2][148] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][148]
--register power-up is low

W1_acq_data_in_pipe_reg[2][148] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][148]);


--W1_acq_data_in_pipe_reg[3][149] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][149]
--register power-up is low

W1_acq_data_in_pipe_reg[3][149] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][149]);


--W1_acq_data_in_pipe_reg[0][147] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][147]
--register power-up is low

W1_acq_data_in_pipe_reg[0][147] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[147]);


--W1_acq_data_in_pipe_reg[1][148] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][148]
--register power-up is low

W1_acq_data_in_pipe_reg[1][148] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][148]);


--W1_acq_data_in_pipe_reg[2][149] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][149]
--register power-up is low

W1_acq_data_in_pipe_reg[2][149] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][149]);


--W1_acq_data_in_pipe_reg[3][150] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][150]
--register power-up is low

W1_acq_data_in_pipe_reg[3][150] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][150]);


--W1_acq_data_in_pipe_reg[0][148] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][148]
--register power-up is low

W1_acq_data_in_pipe_reg[0][148] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[148]);


--W1_acq_data_in_pipe_reg[1][149] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][149]
--register power-up is low

W1_acq_data_in_pipe_reg[1][149] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][149]);


--W1_acq_data_in_pipe_reg[2][150] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][150]
--register power-up is low

W1_acq_data_in_pipe_reg[2][150] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][150]);


--W1_acq_data_in_pipe_reg[3][151] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][151]
--register power-up is low

W1_acq_data_in_pipe_reg[3][151] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][151]);


--W1_acq_data_in_pipe_reg[0][149] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][149]
--register power-up is low

W1_acq_data_in_pipe_reg[0][149] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[149]);


--W1_acq_data_in_pipe_reg[1][150] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][150]
--register power-up is low

W1_acq_data_in_pipe_reg[1][150] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][150]);


--W1_acq_data_in_pipe_reg[2][151] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][151]
--register power-up is low

W1_acq_data_in_pipe_reg[2][151] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][151]);


--W1_acq_data_in_pipe_reg[3][152] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][152]
--register power-up is low

W1_acq_data_in_pipe_reg[3][152] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][152]);


--W1_acq_data_in_pipe_reg[0][150] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][150]
--register power-up is low

W1_acq_data_in_pipe_reg[0][150] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[150]);


--W1_acq_data_in_pipe_reg[1][151] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][151]
--register power-up is low

W1_acq_data_in_pipe_reg[1][151] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][151]);


--W1_acq_data_in_pipe_reg[2][152] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][152]
--register power-up is low

W1_acq_data_in_pipe_reg[2][152] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][152]);


--W1_acq_data_in_pipe_reg[3][153] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][153]
--register power-up is low

W1_acq_data_in_pipe_reg[3][153] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][153]);


--W1_acq_data_in_pipe_reg[0][151] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][151]
--register power-up is low

W1_acq_data_in_pipe_reg[0][151] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[151]);


--W1_acq_data_in_pipe_reg[1][152] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][152]
--register power-up is low

W1_acq_data_in_pipe_reg[1][152] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][152]);


--W1_acq_data_in_pipe_reg[2][153] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][153]
--register power-up is low

W1_acq_data_in_pipe_reg[2][153] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][153]);


--W1_acq_data_in_pipe_reg[3][154] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][154]
--register power-up is low

W1_acq_data_in_pipe_reg[3][154] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][154]);


--W1_acq_data_in_pipe_reg[0][152] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][152]
--register power-up is low

W1_acq_data_in_pipe_reg[0][152] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[152]);


--W1_acq_data_in_pipe_reg[1][153] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][153]
--register power-up is low

W1_acq_data_in_pipe_reg[1][153] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][153]);


--W1_acq_data_in_pipe_reg[2][154] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][154]
--register power-up is low

W1_acq_data_in_pipe_reg[2][154] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][154]);


--W1_acq_data_in_pipe_reg[3][155] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][155]
--register power-up is low

W1_acq_data_in_pipe_reg[3][155] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][155]);


--W1_acq_data_in_pipe_reg[0][153] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][153]
--register power-up is low

W1_acq_data_in_pipe_reg[0][153] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[153]);


--W1_acq_data_in_pipe_reg[1][154] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][154]
--register power-up is low

W1_acq_data_in_pipe_reg[1][154] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][154]);


--W1_acq_data_in_pipe_reg[2][155] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][155]
--register power-up is low

W1_acq_data_in_pipe_reg[2][155] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][155]);


--W1_acq_data_in_pipe_reg[3][156] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][156]
--register power-up is low

W1_acq_data_in_pipe_reg[3][156] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][156]);


--W1_acq_data_in_pipe_reg[0][154] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][154]
--register power-up is low

W1_acq_data_in_pipe_reg[0][154] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[154]);


--W1_acq_data_in_pipe_reg[1][155] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][155]
--register power-up is low

W1_acq_data_in_pipe_reg[1][155] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][155]);


--W1_acq_data_in_pipe_reg[2][156] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][156]
--register power-up is low

W1_acq_data_in_pipe_reg[2][156] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][156]);


--W1_acq_data_in_pipe_reg[3][157] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][157]
--register power-up is low

W1_acq_data_in_pipe_reg[3][157] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][157]);


--W1_acq_data_in_pipe_reg[0][155] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][155]
--register power-up is low

W1_acq_data_in_pipe_reg[0][155] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[155]);


--W1_acq_data_in_pipe_reg[1][156] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][156]
--register power-up is low

W1_acq_data_in_pipe_reg[1][156] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][156]);


--W1_acq_data_in_pipe_reg[2][157] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][157]
--register power-up is low

W1_acq_data_in_pipe_reg[2][157] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][157]);


--W1_acq_data_in_pipe_reg[3][158] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][158]
--register power-up is low

W1_acq_data_in_pipe_reg[3][158] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][158]);


--W1_acq_data_in_pipe_reg[0][156] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][156]
--register power-up is low

W1_acq_data_in_pipe_reg[0][156] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[156]);


--W1_acq_data_in_pipe_reg[1][157] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][157]
--register power-up is low

W1_acq_data_in_pipe_reg[1][157] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][157]);


--W1_acq_data_in_pipe_reg[2][158] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][158]
--register power-up is low

W1_acq_data_in_pipe_reg[2][158] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][158]);


--W1_acq_data_in_pipe_reg[3][159] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][159]
--register power-up is low

W1_acq_data_in_pipe_reg[3][159] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][159]);


--W1_acq_data_in_pipe_reg[0][157] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][157]
--register power-up is low

W1_acq_data_in_pipe_reg[0][157] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[157]);


--W1_acq_data_in_pipe_reg[1][158] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][158]
--register power-up is low

W1_acq_data_in_pipe_reg[1][158] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][158]);


--W1_acq_data_in_pipe_reg[2][159] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][159]
--register power-up is low

W1_acq_data_in_pipe_reg[2][159] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][159]);


--W1_acq_data_in_pipe_reg[3][160] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][160]
--register power-up is low

W1_acq_data_in_pipe_reg[3][160] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][160]);


--W1_acq_data_in_pipe_reg[0][158] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][158]
--register power-up is low

W1_acq_data_in_pipe_reg[0][158] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[158]);


--W1_acq_data_in_pipe_reg[1][159] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][159]
--register power-up is low

W1_acq_data_in_pipe_reg[1][159] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][159]);


--W1_acq_data_in_pipe_reg[2][160] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][160]
--register power-up is low

W1_acq_data_in_pipe_reg[2][160] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][160]);


--W1_acq_data_in_pipe_reg[3][161] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][161]
--register power-up is low

W1_acq_data_in_pipe_reg[3][161] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][161]);


--W1_acq_data_in_pipe_reg[0][159] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][159]
--register power-up is low

W1_acq_data_in_pipe_reg[0][159] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[159]);


--W1_acq_data_in_pipe_reg[1][160] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][160]
--register power-up is low

W1_acq_data_in_pipe_reg[1][160] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][160]);


--W1_acq_data_in_pipe_reg[2][161] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][161]
--register power-up is low

W1_acq_data_in_pipe_reg[2][161] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][161]);


--W1_acq_data_in_pipe_reg[3][162] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][162]
--register power-up is low

W1_acq_data_in_pipe_reg[3][162] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][162]);


--W1_acq_data_in_pipe_reg[0][160] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][160]
--register power-up is low

W1_acq_data_in_pipe_reg[0][160] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[160]);


--W1_acq_data_in_pipe_reg[1][161] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][161]
--register power-up is low

W1_acq_data_in_pipe_reg[1][161] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][161]);


--W1_acq_data_in_pipe_reg[2][162] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][162]
--register power-up is low

W1_acq_data_in_pipe_reg[2][162] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][162]);


--W1_acq_data_in_pipe_reg[3][163] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][163]
--register power-up is low

W1_acq_data_in_pipe_reg[3][163] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][163]);


--W1_acq_data_in_pipe_reg[0][161] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][161]
--register power-up is low

W1_acq_data_in_pipe_reg[0][161] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[161]);


--W1_acq_data_in_pipe_reg[1][162] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][162]
--register power-up is low

W1_acq_data_in_pipe_reg[1][162] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][162]);


--W1_acq_data_in_pipe_reg[2][163] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][163]
--register power-up is low

W1_acq_data_in_pipe_reg[2][163] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][163]);


--W1_acq_data_in_pipe_reg[3][164] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][164]
--register power-up is low

W1_acq_data_in_pipe_reg[3][164] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][164]);


--W1_acq_data_in_pipe_reg[0][162] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][162]
--register power-up is low

W1_acq_data_in_pipe_reg[0][162] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[162]);


--W1_acq_data_in_pipe_reg[1][163] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][163]
--register power-up is low

W1_acq_data_in_pipe_reg[1][163] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][163]);


--W1_acq_data_in_pipe_reg[2][164] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][164]
--register power-up is low

W1_acq_data_in_pipe_reg[2][164] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][164]);


--W1_acq_data_in_pipe_reg[3][165] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][165]
--register power-up is low

W1_acq_data_in_pipe_reg[3][165] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][165]);


--W1_acq_data_in_pipe_reg[0][163] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][163]
--register power-up is low

W1_acq_data_in_pipe_reg[0][163] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[163]);


--W1_acq_data_in_pipe_reg[1][164] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][164]
--register power-up is low

W1_acq_data_in_pipe_reg[1][164] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][164]);


--W1_acq_data_in_pipe_reg[2][165] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][165]
--register power-up is low

W1_acq_data_in_pipe_reg[2][165] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][165]);


--W1_acq_data_in_pipe_reg[3][166] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][166]
--register power-up is low

W1_acq_data_in_pipe_reg[3][166] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][166]);


--W1_acq_data_in_pipe_reg[0][164] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][164]
--register power-up is low

W1_acq_data_in_pipe_reg[0][164] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[164]);


--W1_acq_data_in_pipe_reg[1][165] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][165]
--register power-up is low

W1_acq_data_in_pipe_reg[1][165] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][165]);


--W1_acq_data_in_pipe_reg[2][166] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][166]
--register power-up is low

W1_acq_data_in_pipe_reg[2][166] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][166]);


--W1_acq_data_in_pipe_reg[3][167] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][167]
--register power-up is low

W1_acq_data_in_pipe_reg[3][167] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][167]);


--W1_acq_data_in_pipe_reg[0][165] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][165]
--register power-up is low

W1_acq_data_in_pipe_reg[0][165] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[165]);


--W1_acq_data_in_pipe_reg[1][166] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][166]
--register power-up is low

W1_acq_data_in_pipe_reg[1][166] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][166]);


--W1_acq_data_in_pipe_reg[2][167] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][167]
--register power-up is low

W1_acq_data_in_pipe_reg[2][167] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][167]);


--W1_acq_data_in_pipe_reg[3][168] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][168]
--register power-up is low

W1_acq_data_in_pipe_reg[3][168] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][168]);


--W1_acq_data_in_pipe_reg[0][166] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][166]
--register power-up is low

W1_acq_data_in_pipe_reg[0][166] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[166]);


--W1_acq_data_in_pipe_reg[1][167] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][167]
--register power-up is low

W1_acq_data_in_pipe_reg[1][167] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][167]);


--W1_acq_data_in_pipe_reg[2][168] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][168]
--register power-up is low

W1_acq_data_in_pipe_reg[2][168] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][168]);


--W1_acq_data_in_pipe_reg[3][169] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][169]
--register power-up is low

W1_acq_data_in_pipe_reg[3][169] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][169]);


--W1_acq_data_in_pipe_reg[0][167] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][167]
--register power-up is low

W1_acq_data_in_pipe_reg[0][167] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[167]);


--W1_acq_data_in_pipe_reg[1][168] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][168]
--register power-up is low

W1_acq_data_in_pipe_reg[1][168] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][168]);


--W1_acq_data_in_pipe_reg[2][169] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][169]
--register power-up is low

W1_acq_data_in_pipe_reg[2][169] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][169]);


--W1_acq_data_in_pipe_reg[3][170] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][170]
--register power-up is low

W1_acq_data_in_pipe_reg[3][170] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][170]);


--W1_acq_data_in_pipe_reg[0][168] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][168]
--register power-up is low

W1_acq_data_in_pipe_reg[0][168] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[168]);


--W1_acq_data_in_pipe_reg[1][169] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][169]
--register power-up is low

W1_acq_data_in_pipe_reg[1][169] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][169]);


--W1_acq_data_in_pipe_reg[2][170] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][170]
--register power-up is low

W1_acq_data_in_pipe_reg[2][170] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][170]);


--W1_acq_data_in_pipe_reg[3][171] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][171]
--register power-up is low

W1_acq_data_in_pipe_reg[3][171] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][171]);


--W1_acq_data_in_pipe_reg[0][169] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][169]
--register power-up is low

W1_acq_data_in_pipe_reg[0][169] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[169]);


--W1_acq_data_in_pipe_reg[1][170] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][170]
--register power-up is low

W1_acq_data_in_pipe_reg[1][170] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][170]);


--W1_acq_data_in_pipe_reg[2][171] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][171]
--register power-up is low

W1_acq_data_in_pipe_reg[2][171] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][171]);


--W1_acq_data_in_pipe_reg[3][172] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][172]
--register power-up is low

W1_acq_data_in_pipe_reg[3][172] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][172]);


--W1_acq_data_in_pipe_reg[0][170] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][170]
--register power-up is low

W1_acq_data_in_pipe_reg[0][170] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[170]);


--W1_acq_data_in_pipe_reg[1][171] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][171]
--register power-up is low

W1_acq_data_in_pipe_reg[1][171] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][171]);


--W1_acq_data_in_pipe_reg[2][172] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][172]
--register power-up is low

W1_acq_data_in_pipe_reg[2][172] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][172]);


--W1_acq_data_in_pipe_reg[3][173] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][173]
--register power-up is low

W1_acq_data_in_pipe_reg[3][173] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][173]);


--W1_acq_data_in_pipe_reg[0][171] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][171]
--register power-up is low

W1_acq_data_in_pipe_reg[0][171] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[171]);


--W1_acq_data_in_pipe_reg[1][172] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][172]
--register power-up is low

W1_acq_data_in_pipe_reg[1][172] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][172]);


--W1_acq_data_in_pipe_reg[2][173] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][173]
--register power-up is low

W1_acq_data_in_pipe_reg[2][173] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][173]);


--W1_acq_data_in_pipe_reg[3][174] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][174]
--register power-up is low

W1_acq_data_in_pipe_reg[3][174] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][174]);


--W1_acq_data_in_pipe_reg[0][172] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][172]
--register power-up is low

W1_acq_data_in_pipe_reg[0][172] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[172]);


--W1_acq_data_in_pipe_reg[1][173] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][173]
--register power-up is low

W1_acq_data_in_pipe_reg[1][173] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][173]);


--W1_acq_data_in_pipe_reg[2][174] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][174]
--register power-up is low

W1_acq_data_in_pipe_reg[2][174] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][174]);


--W1_acq_data_in_pipe_reg[3][175] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][175]
--register power-up is low

W1_acq_data_in_pipe_reg[3][175] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][175]);


--W1_acq_data_in_pipe_reg[0][173] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][173]
--register power-up is low

W1_acq_data_in_pipe_reg[0][173] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[173]);


--W1_acq_data_in_pipe_reg[1][174] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][174]
--register power-up is low

W1_acq_data_in_pipe_reg[1][174] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][174]);


--W1_acq_data_in_pipe_reg[2][175] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][175]
--register power-up is low

W1_acq_data_in_pipe_reg[2][175] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][175]);


--W1_acq_data_in_pipe_reg[3][176] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][176]
--register power-up is low

W1_acq_data_in_pipe_reg[3][176] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][176]);


--W1_acq_data_in_pipe_reg[0][174] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][174]
--register power-up is low

W1_acq_data_in_pipe_reg[0][174] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[174]);


--W1_acq_data_in_pipe_reg[1][175] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][175]
--register power-up is low

W1_acq_data_in_pipe_reg[1][175] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][175]);


--W1_acq_data_in_pipe_reg[2][176] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][176]
--register power-up is low

W1_acq_data_in_pipe_reg[2][176] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][176]);


--W1_acq_data_in_pipe_reg[3][177] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][177]
--register power-up is low

W1_acq_data_in_pipe_reg[3][177] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][177]);


--W1_acq_data_in_pipe_reg[0][175] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][175]
--register power-up is low

W1_acq_data_in_pipe_reg[0][175] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[175]);


--W1_acq_data_in_pipe_reg[1][176] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][176]
--register power-up is low

W1_acq_data_in_pipe_reg[1][176] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][176]);


--W1_acq_data_in_pipe_reg[2][177] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][177]
--register power-up is low

W1_acq_data_in_pipe_reg[2][177] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][177]);


--W1_acq_data_in_pipe_reg[3][178] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][178]
--register power-up is low

W1_acq_data_in_pipe_reg[3][178] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][178]);


--W1_acq_data_in_pipe_reg[0][176] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][176]
--register power-up is low

W1_acq_data_in_pipe_reg[0][176] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[176]);


--W1_acq_data_in_pipe_reg[1][177] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][177]
--register power-up is low

W1_acq_data_in_pipe_reg[1][177] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][177]);


--W1_acq_data_in_pipe_reg[2][178] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][178]
--register power-up is low

W1_acq_data_in_pipe_reg[2][178] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][178]);


--W1_acq_data_in_pipe_reg[3][179] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][179]
--register power-up is low

W1_acq_data_in_pipe_reg[3][179] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][179]);


--W1_acq_data_in_pipe_reg[0][177] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][177]
--register power-up is low

W1_acq_data_in_pipe_reg[0][177] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[177]);


--W1_acq_data_in_pipe_reg[1][178] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][178]
--register power-up is low

W1_acq_data_in_pipe_reg[1][178] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][178]);


--W1_acq_data_in_pipe_reg[2][179] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][179]
--register power-up is low

W1_acq_data_in_pipe_reg[2][179] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][179]);


--W1_acq_data_in_pipe_reg[3][180] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][180]
--register power-up is low

W1_acq_data_in_pipe_reg[3][180] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][180]);


--W1_acq_data_in_pipe_reg[0][178] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][178]
--register power-up is low

W1_acq_data_in_pipe_reg[0][178] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[178]);


--W1_acq_data_in_pipe_reg[1][179] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][179]
--register power-up is low

W1_acq_data_in_pipe_reg[1][179] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][179]);


--W1_acq_data_in_pipe_reg[2][180] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][180]
--register power-up is low

W1_acq_data_in_pipe_reg[2][180] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][180]);


--W1_acq_data_in_pipe_reg[3][181] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][181]
--register power-up is low

W1_acq_data_in_pipe_reg[3][181] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][181]);


--W1_acq_data_in_pipe_reg[0][179] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][179]
--register power-up is low

W1_acq_data_in_pipe_reg[0][179] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[179]);


--W1_acq_data_in_pipe_reg[1][180] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][180]
--register power-up is low

W1_acq_data_in_pipe_reg[1][180] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][180]);


--W1_acq_data_in_pipe_reg[2][181] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][181]
--register power-up is low

W1_acq_data_in_pipe_reg[2][181] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][181]);


--W1_acq_data_in_pipe_reg[3][182] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][182]
--register power-up is low

W1_acq_data_in_pipe_reg[3][182] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][182]);


--W1_acq_data_in_pipe_reg[0][180] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][180]
--register power-up is low

W1_acq_data_in_pipe_reg[0][180] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[180]);


--W1_acq_data_in_pipe_reg[1][181] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][181]
--register power-up is low

W1_acq_data_in_pipe_reg[1][181] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][181]);


--W1_acq_data_in_pipe_reg[2][182] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][182]
--register power-up is low

W1_acq_data_in_pipe_reg[2][182] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][182]);


--W1_acq_data_in_pipe_reg[3][183] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][183]
--register power-up is low

W1_acq_data_in_pipe_reg[3][183] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][183]);


--W1_acq_data_in_pipe_reg[0][181] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][181]
--register power-up is low

W1_acq_data_in_pipe_reg[0][181] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[181]);


--W1_acq_data_in_pipe_reg[1][182] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][182]
--register power-up is low

W1_acq_data_in_pipe_reg[1][182] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][182]);


--W1_acq_data_in_pipe_reg[2][183] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][183]
--register power-up is low

W1_acq_data_in_pipe_reg[2][183] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][183]);


--W1_acq_data_in_pipe_reg[3][184] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][184]
--register power-up is low

W1_acq_data_in_pipe_reg[3][184] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][184]);


--W1_acq_data_in_pipe_reg[0][182] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][182]
--register power-up is low

W1_acq_data_in_pipe_reg[0][182] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[182]);


--W1_acq_data_in_pipe_reg[1][183] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][183]
--register power-up is low

W1_acq_data_in_pipe_reg[1][183] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][183]);


--W1_acq_data_in_pipe_reg[2][184] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][184]
--register power-up is low

W1_acq_data_in_pipe_reg[2][184] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][184]);


--W1_acq_data_in_pipe_reg[3][185] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][185]
--register power-up is low

W1_acq_data_in_pipe_reg[3][185] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][185]);


--W1_acq_data_in_pipe_reg[0][183] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][183]
--register power-up is low

W1_acq_data_in_pipe_reg[0][183] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[183]);


--W1_acq_data_in_pipe_reg[1][184] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][184]
--register power-up is low

W1_acq_data_in_pipe_reg[1][184] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][184]);


--W1_acq_data_in_pipe_reg[2][185] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][185]
--register power-up is low

W1_acq_data_in_pipe_reg[2][185] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][185]);


--W1_acq_data_in_pipe_reg[3][186] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][186]
--register power-up is low

W1_acq_data_in_pipe_reg[3][186] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][186]);


--W1_acq_data_in_pipe_reg[0][184] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][184]
--register power-up is low

W1_acq_data_in_pipe_reg[0][184] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[184]);


--W1_acq_data_in_pipe_reg[1][185] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][185]
--register power-up is low

W1_acq_data_in_pipe_reg[1][185] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][185]);


--W1_acq_data_in_pipe_reg[2][186] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][186]
--register power-up is low

W1_acq_data_in_pipe_reg[2][186] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][186]);


--W1_acq_data_in_pipe_reg[3][187] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][187]
--register power-up is low

W1_acq_data_in_pipe_reg[3][187] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][187]);


--W1_acq_data_in_pipe_reg[0][185] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][185]
--register power-up is low

W1_acq_data_in_pipe_reg[0][185] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[185]);


--W1_acq_data_in_pipe_reg[1][186] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][186]
--register power-up is low

W1_acq_data_in_pipe_reg[1][186] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][186]);


--W1_acq_data_in_pipe_reg[2][187] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][187]
--register power-up is low

W1_acq_data_in_pipe_reg[2][187] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][187]);


--W1_acq_data_in_pipe_reg[3][188] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][188]
--register power-up is low

W1_acq_data_in_pipe_reg[3][188] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][188]);


--W1_acq_data_in_pipe_reg[0][186] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][186]
--register power-up is low

W1_acq_data_in_pipe_reg[0][186] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[186]);


--W1_acq_data_in_pipe_reg[1][187] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][187]
--register power-up is low

W1_acq_data_in_pipe_reg[1][187] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][187]);


--W1_acq_data_in_pipe_reg[2][188] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][188]
--register power-up is low

W1_acq_data_in_pipe_reg[2][188] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][188]);


--W1_acq_data_in_pipe_reg[3][189] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][189]
--register power-up is low

W1_acq_data_in_pipe_reg[3][189] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][189]);


--W1_acq_data_in_pipe_reg[0][187] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][187]
--register power-up is low

W1_acq_data_in_pipe_reg[0][187] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[187]);


--W1_acq_data_in_pipe_reg[1][188] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][188]
--register power-up is low

W1_acq_data_in_pipe_reg[1][188] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][188]);


--W1_acq_data_in_pipe_reg[2][189] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][189]
--register power-up is low

W1_acq_data_in_pipe_reg[2][189] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][189]);


--W1_acq_data_in_pipe_reg[3][190] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][190]
--register power-up is low

W1_acq_data_in_pipe_reg[3][190] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][190]);


--W1_acq_data_in_pipe_reg[0][188] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][188]
--register power-up is low

W1_acq_data_in_pipe_reg[0][188] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[188]);


--W1_acq_data_in_pipe_reg[1][189] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][189]
--register power-up is low

W1_acq_data_in_pipe_reg[1][189] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][189]);


--W1_acq_data_in_pipe_reg[2][190] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][190]
--register power-up is low

W1_acq_data_in_pipe_reg[2][190] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][190]);


--W1_acq_data_in_pipe_reg[3][191] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][191]
--register power-up is low

W1_acq_data_in_pipe_reg[3][191] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][191]);


--W1_acq_data_in_pipe_reg[0][189] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][189]
--register power-up is low

W1_acq_data_in_pipe_reg[0][189] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[189]);


--W1_acq_data_in_pipe_reg[1][190] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][190]
--register power-up is low

W1_acq_data_in_pipe_reg[1][190] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][190]);


--W1_acq_data_in_pipe_reg[2][191] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][191]
--register power-up is low

W1_acq_data_in_pipe_reg[2][191] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][191]);


--W1_acq_data_in_pipe_reg[3][192] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][192]
--register power-up is low

W1_acq_data_in_pipe_reg[3][192] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][192]);


--W1_acq_data_in_pipe_reg[0][190] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][190]
--register power-up is low

W1_acq_data_in_pipe_reg[0][190] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[190]);


--W1_acq_data_in_pipe_reg[1][191] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][191]
--register power-up is low

W1_acq_data_in_pipe_reg[1][191] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][191]);


--W1_acq_data_in_pipe_reg[2][192] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][192]
--register power-up is low

W1_acq_data_in_pipe_reg[2][192] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][192]);


--W1_acq_data_in_pipe_reg[3][193] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][193]
--register power-up is low

W1_acq_data_in_pipe_reg[3][193] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][193]);


--W1_acq_data_in_pipe_reg[0][191] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][191]
--register power-up is low

W1_acq_data_in_pipe_reg[0][191] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[191]);


--W1_acq_data_in_pipe_reg[1][192] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][192]
--register power-up is low

W1_acq_data_in_pipe_reg[1][192] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][192]);


--W1_acq_data_in_pipe_reg[2][193] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][193]
--register power-up is low

W1_acq_data_in_pipe_reg[2][193] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][193]);


--W1_acq_data_in_pipe_reg[3][194] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][194]
--register power-up is low

W1_acq_data_in_pipe_reg[3][194] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][194]);


--W1_acq_data_in_pipe_reg[0][192] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][192]
--register power-up is low

W1_acq_data_in_pipe_reg[0][192] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[192]);


--W1_acq_data_in_pipe_reg[1][193] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][193]
--register power-up is low

W1_acq_data_in_pipe_reg[1][193] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][193]);


--W1_acq_data_in_pipe_reg[2][194] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][194]
--register power-up is low

W1_acq_data_in_pipe_reg[2][194] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][194]);


--W1_acq_data_in_pipe_reg[3][195] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][195]
--register power-up is low

W1_acq_data_in_pipe_reg[3][195] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][195]);


--W1_acq_data_in_pipe_reg[0][193] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][193]
--register power-up is low

W1_acq_data_in_pipe_reg[0][193] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[193]);


--W1_acq_data_in_pipe_reg[1][194] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][194]
--register power-up is low

W1_acq_data_in_pipe_reg[1][194] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][194]);


--W1_acq_data_in_pipe_reg[2][195] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][195]
--register power-up is low

W1_acq_data_in_pipe_reg[2][195] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][195]);


--W1_acq_data_in_pipe_reg[3][196] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][196]
--register power-up is low

W1_acq_data_in_pipe_reg[3][196] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][196]);


--W1_acq_data_in_pipe_reg[0][194] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][194]
--register power-up is low

W1_acq_data_in_pipe_reg[0][194] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[194]);


--W1_acq_data_in_pipe_reg[1][195] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][195]
--register power-up is low

W1_acq_data_in_pipe_reg[1][195] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][195]);


--W1_acq_data_in_pipe_reg[2][196] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][196]
--register power-up is low

W1_acq_data_in_pipe_reg[2][196] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][196]);


--W1_acq_data_in_pipe_reg[3][197] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][197]
--register power-up is low

W1_acq_data_in_pipe_reg[3][197] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][197]);


--W1_acq_data_in_pipe_reg[0][195] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][195]
--register power-up is low

W1_acq_data_in_pipe_reg[0][195] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[195]);


--W1_acq_data_in_pipe_reg[1][196] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][196]
--register power-up is low

W1_acq_data_in_pipe_reg[1][196] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][196]);


--W1_acq_data_in_pipe_reg[2][197] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][197]
--register power-up is low

W1_acq_data_in_pipe_reg[2][197] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][197]);


--W1_acq_data_in_pipe_reg[3][198] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][198]
--register power-up is low

W1_acq_data_in_pipe_reg[3][198] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][198]);


--W1_acq_data_in_pipe_reg[0][196] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][196]
--register power-up is low

W1_acq_data_in_pipe_reg[0][196] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[196]);


--W1_acq_data_in_pipe_reg[1][197] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][197]
--register power-up is low

W1_acq_data_in_pipe_reg[1][197] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][197]);


--W1_acq_data_in_pipe_reg[2][198] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][198]
--register power-up is low

W1_acq_data_in_pipe_reg[2][198] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][198]);


--W1_acq_data_in_pipe_reg[3][199] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][199]
--register power-up is low

W1_acq_data_in_pipe_reg[3][199] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][199]);


--W1_acq_data_in_pipe_reg[0][197] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][197]
--register power-up is low

W1_acq_data_in_pipe_reg[0][197] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[197]);


--W1_acq_data_in_pipe_reg[1][198] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][198]
--register power-up is low

W1_acq_data_in_pipe_reg[1][198] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][198]);


--W1_acq_data_in_pipe_reg[2][199] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][199]
--register power-up is low

W1_acq_data_in_pipe_reg[2][199] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][199]);


--W1_acq_data_in_pipe_reg[3][200] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][200]
--register power-up is low

W1_acq_data_in_pipe_reg[3][200] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][200]);


--W1_acq_data_in_pipe_reg[0][198] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][198]
--register power-up is low

W1_acq_data_in_pipe_reg[0][198] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[198]);


--W1_acq_data_in_pipe_reg[1][199] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][199]
--register power-up is low

W1_acq_data_in_pipe_reg[1][199] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][199]);


--W1_acq_data_in_pipe_reg[2][200] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][200]
--register power-up is low

W1_acq_data_in_pipe_reg[2][200] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][200]);


--W1_acq_data_in_pipe_reg[3][201] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][201]
--register power-up is low

W1_acq_data_in_pipe_reg[3][201] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][201]);


--W1_acq_data_in_pipe_reg[0][199] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][199]
--register power-up is low

W1_acq_data_in_pipe_reg[0][199] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[199]);


--W1_acq_data_in_pipe_reg[1][200] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][200]
--register power-up is low

W1_acq_data_in_pipe_reg[1][200] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][200]);


--W1_acq_data_in_pipe_reg[2][201] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][201]
--register power-up is low

W1_acq_data_in_pipe_reg[2][201] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][201]);


--W1_acq_data_in_pipe_reg[3][202] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][202]
--register power-up is low

W1_acq_data_in_pipe_reg[3][202] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][202]);


--W1_acq_data_in_pipe_reg[0][200] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][200]
--register power-up is low

W1_acq_data_in_pipe_reg[0][200] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[200]);


--W1_acq_data_in_pipe_reg[1][201] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][201]
--register power-up is low

W1_acq_data_in_pipe_reg[1][201] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][201]);


--W1_acq_data_in_pipe_reg[2][202] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][202]
--register power-up is low

W1_acq_data_in_pipe_reg[2][202] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][202]);


--W1_acq_data_in_pipe_reg[3][203] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][203]
--register power-up is low

W1_acq_data_in_pipe_reg[3][203] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][203]);


--W1_acq_data_in_pipe_reg[0][201] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][201]
--register power-up is low

W1_acq_data_in_pipe_reg[0][201] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[201]);


--W1_acq_data_in_pipe_reg[1][202] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][202]
--register power-up is low

W1_acq_data_in_pipe_reg[1][202] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][202]);


--W1_acq_data_in_pipe_reg[2][203] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][203]
--register power-up is low

W1_acq_data_in_pipe_reg[2][203] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][203]);


--W1_acq_data_in_pipe_reg[3][204] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][204]
--register power-up is low

W1_acq_data_in_pipe_reg[3][204] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][204]);


--W1_acq_data_in_pipe_reg[0][202] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][202]
--register power-up is low

W1_acq_data_in_pipe_reg[0][202] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[202]);


--W1_acq_data_in_pipe_reg[1][203] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][203]
--register power-up is low

W1_acq_data_in_pipe_reg[1][203] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][203]);


--W1_acq_data_in_pipe_reg[2][204] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][204]
--register power-up is low

W1_acq_data_in_pipe_reg[2][204] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][204]);


--W1_acq_data_in_pipe_reg[3][205] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][205]
--register power-up is low

W1_acq_data_in_pipe_reg[3][205] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][205]);


--W1_acq_data_in_pipe_reg[0][203] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][203]
--register power-up is low

W1_acq_data_in_pipe_reg[0][203] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[203]);


--W1_acq_data_in_pipe_reg[1][204] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][204]
--register power-up is low

W1_acq_data_in_pipe_reg[1][204] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][204]);


--W1_acq_data_in_pipe_reg[2][205] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][205]
--register power-up is low

W1_acq_data_in_pipe_reg[2][205] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][205]);


--W1_acq_data_in_pipe_reg[3][206] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][206]
--register power-up is low

W1_acq_data_in_pipe_reg[3][206] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][206]);


--W1_acq_data_in_pipe_reg[0][204] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][204]
--register power-up is low

W1_acq_data_in_pipe_reg[0][204] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[204]);


--W1_acq_data_in_pipe_reg[1][205] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][205]
--register power-up is low

W1_acq_data_in_pipe_reg[1][205] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][205]);


--W1_acq_data_in_pipe_reg[2][206] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][206]
--register power-up is low

W1_acq_data_in_pipe_reg[2][206] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][206]);


--W1_acq_data_in_pipe_reg[3][207] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][207]
--register power-up is low

W1_acq_data_in_pipe_reg[3][207] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][207]);


--W1_acq_data_in_pipe_reg[0][205] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][205]
--register power-up is low

W1_acq_data_in_pipe_reg[0][205] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[205]);


--W1_acq_data_in_pipe_reg[1][206] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][206]
--register power-up is low

W1_acq_data_in_pipe_reg[1][206] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][206]);


--W1_acq_data_in_pipe_reg[2][207] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][207]
--register power-up is low

W1_acq_data_in_pipe_reg[2][207] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][207]);


--W1_acq_data_in_pipe_reg[3][208] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][208]
--register power-up is low

W1_acq_data_in_pipe_reg[3][208] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][208]);


--W1_acq_data_in_pipe_reg[0][206] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][206]
--register power-up is low

W1_acq_data_in_pipe_reg[0][206] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[206]);


--W1_acq_data_in_pipe_reg[1][207] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][207]
--register power-up is low

W1_acq_data_in_pipe_reg[1][207] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][207]);


--W1_acq_data_in_pipe_reg[2][208] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][208]
--register power-up is low

W1_acq_data_in_pipe_reg[2][208] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][208]);


--W1_acq_data_in_pipe_reg[3][209] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][209]
--register power-up is low

W1_acq_data_in_pipe_reg[3][209] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][209]);


--W1_acq_data_in_pipe_reg[0][207] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][207]
--register power-up is low

W1_acq_data_in_pipe_reg[0][207] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[207]);


--W1_acq_data_in_pipe_reg[1][208] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][208]
--register power-up is low

W1_acq_data_in_pipe_reg[1][208] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][208]);


--W1_acq_data_in_pipe_reg[2][209] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][209]
--register power-up is low

W1_acq_data_in_pipe_reg[2][209] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][209]);


--W1_acq_data_in_pipe_reg[3][210] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][210]
--register power-up is low

W1_acq_data_in_pipe_reg[3][210] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][210]);


--W1_acq_data_in_pipe_reg[0][208] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][208]
--register power-up is low

W1_acq_data_in_pipe_reg[0][208] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[208]);


--W1_acq_data_in_pipe_reg[1][209] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][209]
--register power-up is low

W1_acq_data_in_pipe_reg[1][209] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][209]);


--W1_acq_data_in_pipe_reg[2][210] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][210]
--register power-up is low

W1_acq_data_in_pipe_reg[2][210] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][210]);


--W1_acq_data_in_pipe_reg[3][211] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][211]
--register power-up is low

W1_acq_data_in_pipe_reg[3][211] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][211]);


--W1_acq_data_in_pipe_reg[0][209] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][209]
--register power-up is low

W1_acq_data_in_pipe_reg[0][209] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[209]);


--W1_acq_data_in_pipe_reg[1][210] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][210]
--register power-up is low

W1_acq_data_in_pipe_reg[1][210] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][210]);


--W1_acq_data_in_pipe_reg[2][211] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][211]
--register power-up is low

W1_acq_data_in_pipe_reg[2][211] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][211]);


--W1_acq_data_in_pipe_reg[3][212] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][212]
--register power-up is low

W1_acq_data_in_pipe_reg[3][212] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][212]);


--W1_acq_data_in_pipe_reg[0][210] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][210]
--register power-up is low

W1_acq_data_in_pipe_reg[0][210] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[210]);


--W1_acq_data_in_pipe_reg[1][211] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][211]
--register power-up is low

W1_acq_data_in_pipe_reg[1][211] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][211]);


--W1_acq_data_in_pipe_reg[2][212] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][212]
--register power-up is low

W1_acq_data_in_pipe_reg[2][212] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][212]);


--W1_acq_data_in_pipe_reg[3][213] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][213]
--register power-up is low

W1_acq_data_in_pipe_reg[3][213] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][213]);


--W1_acq_data_in_pipe_reg[0][211] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][211]
--register power-up is low

W1_acq_data_in_pipe_reg[0][211] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[211]);


--W1_acq_data_in_pipe_reg[1][212] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][212]
--register power-up is low

W1_acq_data_in_pipe_reg[1][212] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][212]);


--W1_acq_data_in_pipe_reg[2][213] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][213]
--register power-up is low

W1_acq_data_in_pipe_reg[2][213] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][213]);


--W1_acq_data_in_pipe_reg[3][214] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][214]
--register power-up is low

W1_acq_data_in_pipe_reg[3][214] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][214]);


--W1_acq_data_in_pipe_reg[0][212] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][212]
--register power-up is low

W1_acq_data_in_pipe_reg[0][212] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[212]);


--W1_acq_data_in_pipe_reg[1][213] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][213]
--register power-up is low

W1_acq_data_in_pipe_reg[1][213] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][213]);


--W1_acq_data_in_pipe_reg[2][214] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][214]
--register power-up is low

W1_acq_data_in_pipe_reg[2][214] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][214]);


--W1_acq_data_in_pipe_reg[3][215] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][215]
--register power-up is low

W1_acq_data_in_pipe_reg[3][215] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][215]);


--W1_acq_data_in_pipe_reg[0][213] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][213]
--register power-up is low

W1_acq_data_in_pipe_reg[0][213] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[213]);


--W1_acq_data_in_pipe_reg[1][214] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][214]
--register power-up is low

W1_acq_data_in_pipe_reg[1][214] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][214]);


--W1_acq_data_in_pipe_reg[2][215] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][215]
--register power-up is low

W1_acq_data_in_pipe_reg[2][215] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][215]);


--W1_acq_data_in_pipe_reg[3][216] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][216]
--register power-up is low

W1_acq_data_in_pipe_reg[3][216] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][216]);


--W1_acq_data_in_pipe_reg[0][214] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][214]
--register power-up is low

W1_acq_data_in_pipe_reg[0][214] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[214]);


--W1_acq_data_in_pipe_reg[1][215] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][215]
--register power-up is low

W1_acq_data_in_pipe_reg[1][215] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][215]);


--W1_acq_data_in_pipe_reg[2][216] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][216]
--register power-up is low

W1_acq_data_in_pipe_reg[2][216] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][216]);


--W1_acq_data_in_pipe_reg[3][217] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][217]
--register power-up is low

W1_acq_data_in_pipe_reg[3][217] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][217]);


--W1_acq_data_in_pipe_reg[0][215] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][215]
--register power-up is low

W1_acq_data_in_pipe_reg[0][215] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[215]);


--W1_acq_data_in_pipe_reg[1][216] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][216]
--register power-up is low

W1_acq_data_in_pipe_reg[1][216] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][216]);


--W1_acq_data_in_pipe_reg[2][217] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][217]
--register power-up is low

W1_acq_data_in_pipe_reg[2][217] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][217]);


--W1_acq_data_in_pipe_reg[3][218] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][218]
--register power-up is low

W1_acq_data_in_pipe_reg[3][218] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][218]);


--W1_acq_data_in_pipe_reg[0][216] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][216]
--register power-up is low

W1_acq_data_in_pipe_reg[0][216] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[216]);


--W1_acq_data_in_pipe_reg[1][217] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][217]
--register power-up is low

W1_acq_data_in_pipe_reg[1][217] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][217]);


--W1_acq_data_in_pipe_reg[2][218] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][218]
--register power-up is low

W1_acq_data_in_pipe_reg[2][218] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][218]);


--W1_acq_data_in_pipe_reg[3][219] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][219]
--register power-up is low

W1_acq_data_in_pipe_reg[3][219] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][219]);


--W1_acq_data_in_pipe_reg[0][217] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][217]
--register power-up is low

W1_acq_data_in_pipe_reg[0][217] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[217]);


--W1_acq_data_in_pipe_reg[1][218] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][218]
--register power-up is low

W1_acq_data_in_pipe_reg[1][218] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][218]);


--W1_acq_data_in_pipe_reg[2][219] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][219]
--register power-up is low

W1_acq_data_in_pipe_reg[2][219] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][219]);


--W1_acq_data_in_pipe_reg[3][220] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][220]
--register power-up is low

W1_acq_data_in_pipe_reg[3][220] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][220]);


--W1_acq_data_in_pipe_reg[0][218] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][218]
--register power-up is low

W1_acq_data_in_pipe_reg[0][218] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[218]);


--W1_acq_data_in_pipe_reg[1][219] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][219]
--register power-up is low

W1_acq_data_in_pipe_reg[1][219] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][219]);


--W1_acq_data_in_pipe_reg[2][220] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][220]
--register power-up is low

W1_acq_data_in_pipe_reg[2][220] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][220]);


--W1_acq_data_in_pipe_reg[3][221] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][221]
--register power-up is low

W1_acq_data_in_pipe_reg[3][221] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][221]);


--W1_acq_data_in_pipe_reg[0][219] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][219]
--register power-up is low

W1_acq_data_in_pipe_reg[0][219] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[219]);


--W1_acq_data_in_pipe_reg[1][220] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][220]
--register power-up is low

W1_acq_data_in_pipe_reg[1][220] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][220]);


--W1_acq_data_in_pipe_reg[2][221] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][221]
--register power-up is low

W1_acq_data_in_pipe_reg[2][221] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][221]);


--W1_acq_data_in_pipe_reg[3][222] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][222]
--register power-up is low

W1_acq_data_in_pipe_reg[3][222] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][222]);


--W1_acq_data_in_pipe_reg[0][220] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][220]
--register power-up is low

W1_acq_data_in_pipe_reg[0][220] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[220]);


--W1_acq_data_in_pipe_reg[1][221] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][221]
--register power-up is low

W1_acq_data_in_pipe_reg[1][221] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][221]);


--W1_acq_data_in_pipe_reg[2][222] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][222]
--register power-up is low

W1_acq_data_in_pipe_reg[2][222] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][222]);


--W1_acq_data_in_pipe_reg[3][223] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][223]
--register power-up is low

W1_acq_data_in_pipe_reg[3][223] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][223]);


--W1_acq_data_in_pipe_reg[0][221] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][221]
--register power-up is low

W1_acq_data_in_pipe_reg[0][221] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[221]);


--W1_acq_data_in_pipe_reg[1][222] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][222]
--register power-up is low

W1_acq_data_in_pipe_reg[1][222] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][222]);


--W1_acq_data_in_pipe_reg[2][223] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][223]
--register power-up is low

W1_acq_data_in_pipe_reg[2][223] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][223]);


--W1_acq_data_in_pipe_reg[3][224] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][224]
--register power-up is low

W1_acq_data_in_pipe_reg[3][224] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][224]);


--W1_acq_data_in_pipe_reg[0][222] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][222]
--register power-up is low

W1_acq_data_in_pipe_reg[0][222] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[222]);


--W1_acq_data_in_pipe_reg[1][223] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][223]
--register power-up is low

W1_acq_data_in_pipe_reg[1][223] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][223]);


--W1_acq_data_in_pipe_reg[2][224] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][224]
--register power-up is low

W1_acq_data_in_pipe_reg[2][224] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][224]);


--W1_acq_data_in_pipe_reg[3][225] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][225]
--register power-up is low

W1_acq_data_in_pipe_reg[3][225] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][225]);


--W1_acq_data_in_pipe_reg[0][223] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][223]
--register power-up is low

W1_acq_data_in_pipe_reg[0][223] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[223]);


--W1_acq_data_in_pipe_reg[1][224] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][224]
--register power-up is low

W1_acq_data_in_pipe_reg[1][224] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][224]);


--W1_acq_data_in_pipe_reg[2][225] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][225]
--register power-up is low

W1_acq_data_in_pipe_reg[2][225] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][225]);


--W1_acq_data_in_pipe_reg[3][226] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][226]
--register power-up is low

W1_acq_data_in_pipe_reg[3][226] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][226]);


--W1_acq_data_in_pipe_reg[0][224] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][224]
--register power-up is low

W1_acq_data_in_pipe_reg[0][224] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[224]);


--W1_acq_data_in_pipe_reg[1][225] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][225]
--register power-up is low

W1_acq_data_in_pipe_reg[1][225] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][225]);


--W1_acq_data_in_pipe_reg[2][226] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][226]
--register power-up is low

W1_acq_data_in_pipe_reg[2][226] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][226]);


--W1_acq_data_in_pipe_reg[3][227] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][227]
--register power-up is low

W1_acq_data_in_pipe_reg[3][227] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][227]);


--W1_acq_data_in_pipe_reg[0][225] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][225]
--register power-up is low

W1_acq_data_in_pipe_reg[0][225] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[225]);


--W1_acq_data_in_pipe_reg[1][226] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][226]
--register power-up is low

W1_acq_data_in_pipe_reg[1][226] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][226]);


--W1_acq_data_in_pipe_reg[2][227] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][227]
--register power-up is low

W1_acq_data_in_pipe_reg[2][227] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][227]);


--W1_acq_data_in_pipe_reg[3][228] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][228]
--register power-up is low

W1_acq_data_in_pipe_reg[3][228] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][228]);


--W1_acq_data_in_pipe_reg[0][226] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][226]
--register power-up is low

W1_acq_data_in_pipe_reg[0][226] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[226]);


--W1_acq_data_in_pipe_reg[1][227] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][227]
--register power-up is low

W1_acq_data_in_pipe_reg[1][227] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][227]);


--W1_acq_data_in_pipe_reg[2][228] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][228]
--register power-up is low

W1_acq_data_in_pipe_reg[2][228] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][228]);


--W1_acq_data_in_pipe_reg[3][229] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][229]
--register power-up is low

W1_acq_data_in_pipe_reg[3][229] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][229]);


--W1_acq_data_in_pipe_reg[0][227] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][227]
--register power-up is low

W1_acq_data_in_pipe_reg[0][227] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[227]);


--W1_acq_data_in_pipe_reg[1][228] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][228]
--register power-up is low

W1_acq_data_in_pipe_reg[1][228] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][228]);


--W1_acq_data_in_pipe_reg[2][229] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][229]
--register power-up is low

W1_acq_data_in_pipe_reg[2][229] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][229]);


--W1_acq_data_in_pipe_reg[3][230] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][230]
--register power-up is low

W1_acq_data_in_pipe_reg[3][230] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][230]);


--W1_acq_data_in_pipe_reg[0][228] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][228]
--register power-up is low

W1_acq_data_in_pipe_reg[0][228] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[228]);


--W1_acq_data_in_pipe_reg[1][229] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][229]
--register power-up is low

W1_acq_data_in_pipe_reg[1][229] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][229]);


--W1_acq_data_in_pipe_reg[2][230] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][230]
--register power-up is low

W1_acq_data_in_pipe_reg[2][230] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][230]);


--W1_acq_data_in_pipe_reg[3][231] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][231]
--register power-up is low

W1_acq_data_in_pipe_reg[3][231] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][231]);


--W1_acq_data_in_pipe_reg[0][229] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][229]
--register power-up is low

W1_acq_data_in_pipe_reg[0][229] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[229]);


--W1_acq_data_in_pipe_reg[1][230] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][230]
--register power-up is low

W1_acq_data_in_pipe_reg[1][230] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][230]);


--W1_acq_data_in_pipe_reg[2][231] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][231]
--register power-up is low

W1_acq_data_in_pipe_reg[2][231] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][231]);


--W1_acq_data_in_pipe_reg[3][232] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][232]
--register power-up is low

W1_acq_data_in_pipe_reg[3][232] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][232]);


--W1_acq_data_in_pipe_reg[0][230] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][230]
--register power-up is low

W1_acq_data_in_pipe_reg[0][230] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[230]);


--W1_acq_data_in_pipe_reg[1][231] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][231]
--register power-up is low

W1_acq_data_in_pipe_reg[1][231] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][231]);


--W1_acq_data_in_pipe_reg[2][232] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][232]
--register power-up is low

W1_acq_data_in_pipe_reg[2][232] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][232]);


--W1_acq_data_in_pipe_reg[3][233] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][233]
--register power-up is low

W1_acq_data_in_pipe_reg[3][233] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][233]);


--W1_acq_data_in_pipe_reg[0][231] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][231]
--register power-up is low

W1_acq_data_in_pipe_reg[0][231] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[231]);


--W1_acq_data_in_pipe_reg[1][232] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][232]
--register power-up is low

W1_acq_data_in_pipe_reg[1][232] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][232]);


--W1_acq_data_in_pipe_reg[2][233] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][233]
--register power-up is low

W1_acq_data_in_pipe_reg[2][233] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][233]);


--W1_acq_data_in_pipe_reg[3][234] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][234]
--register power-up is low

W1_acq_data_in_pipe_reg[3][234] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][234]);


--W1_acq_data_in_pipe_reg[0][232] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][232]
--register power-up is low

W1_acq_data_in_pipe_reg[0][232] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[232]);


--W1_acq_data_in_pipe_reg[1][233] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][233]
--register power-up is low

W1_acq_data_in_pipe_reg[1][233] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][233]);


--W1_acq_data_in_pipe_reg[2][234] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][234]
--register power-up is low

W1_acq_data_in_pipe_reg[2][234] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][234]);


--W1_acq_data_in_pipe_reg[3][235] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][235]
--register power-up is low

W1_acq_data_in_pipe_reg[3][235] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][235]);


--W1_acq_data_in_pipe_reg[0][233] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][233]
--register power-up is low

W1_acq_data_in_pipe_reg[0][233] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[233]);


--W1_acq_data_in_pipe_reg[1][234] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][234]
--register power-up is low

W1_acq_data_in_pipe_reg[1][234] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][234]);


--W1_acq_data_in_pipe_reg[2][235] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][235]
--register power-up is low

W1_acq_data_in_pipe_reg[2][235] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][235]);


--W1_acq_data_in_pipe_reg[3][236] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][236]
--register power-up is low

W1_acq_data_in_pipe_reg[3][236] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][236]);


--W1_acq_data_in_pipe_reg[0][234] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][234]
--register power-up is low

W1_acq_data_in_pipe_reg[0][234] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[234]);


--W1_acq_data_in_pipe_reg[1][235] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][235]
--register power-up is low

W1_acq_data_in_pipe_reg[1][235] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][235]);


--W1_acq_data_in_pipe_reg[2][236] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][236]
--register power-up is low

W1_acq_data_in_pipe_reg[2][236] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][236]);


--W1_acq_data_in_pipe_reg[3][237] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][237]
--register power-up is low

W1_acq_data_in_pipe_reg[3][237] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][237]);


--W1_acq_data_in_pipe_reg[0][235] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][235]
--register power-up is low

W1_acq_data_in_pipe_reg[0][235] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[235]);


--W1_acq_data_in_pipe_reg[1][236] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][236]
--register power-up is low

W1_acq_data_in_pipe_reg[1][236] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][236]);


--W1_acq_data_in_pipe_reg[2][237] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][237]
--register power-up is low

W1_acq_data_in_pipe_reg[2][237] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][237]);


--W1_acq_data_in_pipe_reg[3][238] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][238]
--register power-up is low

W1_acq_data_in_pipe_reg[3][238] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][238]);


--W1_acq_data_in_pipe_reg[0][236] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][236]
--register power-up is low

W1_acq_data_in_pipe_reg[0][236] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[236]);


--W1_acq_data_in_pipe_reg[1][237] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][237]
--register power-up is low

W1_acq_data_in_pipe_reg[1][237] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][237]);


--W1_acq_data_in_pipe_reg[2][238] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][238]
--register power-up is low

W1_acq_data_in_pipe_reg[2][238] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][238]);


--W1_acq_data_in_pipe_reg[3][239] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][239]
--register power-up is low

W1_acq_data_in_pipe_reg[3][239] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][239]);


--W1_acq_data_in_pipe_reg[0][237] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][237]
--register power-up is low

W1_acq_data_in_pipe_reg[0][237] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[237]);


--W1_acq_data_in_pipe_reg[1][238] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][238]
--register power-up is low

W1_acq_data_in_pipe_reg[1][238] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][238]);


--W1_acq_data_in_pipe_reg[2][239] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][239]
--register power-up is low

W1_acq_data_in_pipe_reg[2][239] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][239]);


--W1_acq_data_in_pipe_reg[3][240] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][240]
--register power-up is low

W1_acq_data_in_pipe_reg[3][240] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][240]);


--W1_acq_data_in_pipe_reg[0][238] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][238]
--register power-up is low

W1_acq_data_in_pipe_reg[0][238] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[238]);


--W1_acq_data_in_pipe_reg[1][239] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][239]
--register power-up is low

W1_acq_data_in_pipe_reg[1][239] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][239]);


--W1_acq_data_in_pipe_reg[2][240] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][240]
--register power-up is low

W1_acq_data_in_pipe_reg[2][240] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][240]);


--W1_acq_data_in_pipe_reg[3][241] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][241]
--register power-up is low

W1_acq_data_in_pipe_reg[3][241] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][241]);


--W1_acq_data_in_pipe_reg[0][239] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][239]
--register power-up is low

W1_acq_data_in_pipe_reg[0][239] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[239]);


--W1_acq_data_in_pipe_reg[1][240] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][240]
--register power-up is low

W1_acq_data_in_pipe_reg[1][240] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][240]);


--W1_acq_data_in_pipe_reg[2][241] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][241]
--register power-up is low

W1_acq_data_in_pipe_reg[2][241] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][241]);


--W1_acq_data_in_pipe_reg[3][242] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][242]
--register power-up is low

W1_acq_data_in_pipe_reg[3][242] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][242]);


--W1_acq_data_in_pipe_reg[0][240] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][240]
--register power-up is low

W1_acq_data_in_pipe_reg[0][240] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[240]);


--W1_acq_data_in_pipe_reg[1][241] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][241]
--register power-up is low

W1_acq_data_in_pipe_reg[1][241] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][241]);


--W1_acq_data_in_pipe_reg[2][242] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][242]
--register power-up is low

W1_acq_data_in_pipe_reg[2][242] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][242]);


--W1_acq_data_in_pipe_reg[3][243] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][243]
--register power-up is low

W1_acq_data_in_pipe_reg[3][243] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][243]);


--W1_acq_data_in_pipe_reg[0][241] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][241]
--register power-up is low

W1_acq_data_in_pipe_reg[0][241] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[241]);


--W1_acq_data_in_pipe_reg[1][242] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][242]
--register power-up is low

W1_acq_data_in_pipe_reg[1][242] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][242]);


--W1_acq_data_in_pipe_reg[2][243] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][243]
--register power-up is low

W1_acq_data_in_pipe_reg[2][243] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][243]);


--W1_acq_data_in_pipe_reg[3][244] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][244]
--register power-up is low

W1_acq_data_in_pipe_reg[3][244] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][244]);


--W1_acq_data_in_pipe_reg[0][242] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][242]
--register power-up is low

W1_acq_data_in_pipe_reg[0][242] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[242]);


--W1_acq_data_in_pipe_reg[1][243] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][243]
--register power-up is low

W1_acq_data_in_pipe_reg[1][243] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][243]);


--W1_acq_data_in_pipe_reg[2][244] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][244]
--register power-up is low

W1_acq_data_in_pipe_reg[2][244] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][244]);


--W1_acq_data_in_pipe_reg[3][245] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][245]
--register power-up is low

W1_acq_data_in_pipe_reg[3][245] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][245]);


--W1_acq_data_in_pipe_reg[0][243] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][243]
--register power-up is low

W1_acq_data_in_pipe_reg[0][243] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[243]);


--W1_acq_data_in_pipe_reg[1][244] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][244]
--register power-up is low

W1_acq_data_in_pipe_reg[1][244] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][244]);


--W1_acq_data_in_pipe_reg[2][245] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][245]
--register power-up is low

W1_acq_data_in_pipe_reg[2][245] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][245]);


--W1_acq_data_in_pipe_reg[3][246] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][246]
--register power-up is low

W1_acq_data_in_pipe_reg[3][246] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][246]);


--W1_acq_data_in_pipe_reg[0][244] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][244]
--register power-up is low

W1_acq_data_in_pipe_reg[0][244] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[244]);


--W1_acq_data_in_pipe_reg[1][245] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][245]
--register power-up is low

W1_acq_data_in_pipe_reg[1][245] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][245]);


--W1_acq_data_in_pipe_reg[2][246] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][246]
--register power-up is low

W1_acq_data_in_pipe_reg[2][246] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][246]);


--W1_acq_data_in_pipe_reg[3][247] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][247]
--register power-up is low

W1_acq_data_in_pipe_reg[3][247] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][247]);


--W1_acq_data_in_pipe_reg[0][245] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][245]
--register power-up is low

W1_acq_data_in_pipe_reg[0][245] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[245]);


--W1_acq_data_in_pipe_reg[1][246] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][246]
--register power-up is low

W1_acq_data_in_pipe_reg[1][246] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][246]);


--W1_acq_data_in_pipe_reg[2][247] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][247]
--register power-up is low

W1_acq_data_in_pipe_reg[2][247] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][247]);


--W1_acq_data_in_pipe_reg[3][248] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][248]
--register power-up is low

W1_acq_data_in_pipe_reg[3][248] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][248]);


--W1_acq_data_in_pipe_reg[0][246] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][246]
--register power-up is low

W1_acq_data_in_pipe_reg[0][246] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[246]);


--W1_acq_data_in_pipe_reg[1][247] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][247]
--register power-up is low

W1_acq_data_in_pipe_reg[1][247] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][247]);


--W1_acq_data_in_pipe_reg[2][248] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][248]
--register power-up is low

W1_acq_data_in_pipe_reg[2][248] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][248]);


--W1_acq_data_in_pipe_reg[3][249] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][249]
--register power-up is low

W1_acq_data_in_pipe_reg[3][249] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][249]);


--W1_acq_data_in_pipe_reg[0][247] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][247]
--register power-up is low

W1_acq_data_in_pipe_reg[0][247] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[247]);


--W1_acq_data_in_pipe_reg[1][248] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][248]
--register power-up is low

W1_acq_data_in_pipe_reg[1][248] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][248]);


--W1_acq_data_in_pipe_reg[2][249] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][249]
--register power-up is low

W1_acq_data_in_pipe_reg[2][249] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][249]);


--W1_acq_data_in_pipe_reg[3][250] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][250]
--register power-up is low

W1_acq_data_in_pipe_reg[3][250] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][250]);


--W1_acq_data_in_pipe_reg[0][248] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][248]
--register power-up is low

W1_acq_data_in_pipe_reg[0][248] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[248]);


--W1_acq_data_in_pipe_reg[1][249] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][249]
--register power-up is low

W1_acq_data_in_pipe_reg[1][249] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][249]);


--W1_acq_data_in_pipe_reg[2][250] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][250]
--register power-up is low

W1_acq_data_in_pipe_reg[2][250] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][250]);


--W1_acq_data_in_pipe_reg[3][251] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][251]
--register power-up is low

W1_acq_data_in_pipe_reg[3][251] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][251]);


--W1_acq_data_in_pipe_reg[0][249] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][249]
--register power-up is low

W1_acq_data_in_pipe_reg[0][249] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[249]);


--W1_acq_data_in_pipe_reg[1][250] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][250]
--register power-up is low

W1_acq_data_in_pipe_reg[1][250] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][250]);


--W1_acq_data_in_pipe_reg[2][251] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][251]
--register power-up is low

W1_acq_data_in_pipe_reg[2][251] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][251]);


--W1_acq_data_in_pipe_reg[3][252] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][252]
--register power-up is low

W1_acq_data_in_pipe_reg[3][252] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][252]);


--W1_acq_data_in_pipe_reg[0][250] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][250]
--register power-up is low

W1_acq_data_in_pipe_reg[0][250] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[250]);


--W1_acq_data_in_pipe_reg[1][251] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][251]
--register power-up is low

W1_acq_data_in_pipe_reg[1][251] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][251]);


--W1_acq_data_in_pipe_reg[2][252] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][252]
--register power-up is low

W1_acq_data_in_pipe_reg[2][252] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][252]);


--W1_acq_data_in_pipe_reg[3][253] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][253]
--register power-up is low

W1_acq_data_in_pipe_reg[3][253] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][253]);


--W1_acq_data_in_pipe_reg[0][251] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][251]
--register power-up is low

W1_acq_data_in_pipe_reg[0][251] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[251]);


--W1_acq_data_in_pipe_reg[1][252] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][252]
--register power-up is low

W1_acq_data_in_pipe_reg[1][252] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][252]);


--W1_acq_data_in_pipe_reg[2][253] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][253]
--register power-up is low

W1_acq_data_in_pipe_reg[2][253] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][253]);


--W1_acq_data_in_pipe_reg[3][254] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][254]
--register power-up is low

W1_acq_data_in_pipe_reg[3][254] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][254]);


--W1_acq_data_in_pipe_reg[0][252] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][252]
--register power-up is low

W1_acq_data_in_pipe_reg[0][252] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[252]);


--W1_acq_data_in_pipe_reg[1][253] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][253]
--register power-up is low

W1_acq_data_in_pipe_reg[1][253] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][253]);


--W1_acq_data_in_pipe_reg[2][254] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][254]
--register power-up is low

W1_acq_data_in_pipe_reg[2][254] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][254]);


--W1_acq_data_in_pipe_reg[3][255] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][255]
--register power-up is low

W1_acq_data_in_pipe_reg[3][255] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][255]);


--W1_acq_data_in_pipe_reg[0][253] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][253]
--register power-up is low

W1_acq_data_in_pipe_reg[0][253] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[253]);


--W1_acq_data_in_pipe_reg[1][254] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][254]
--register power-up is low

W1_acq_data_in_pipe_reg[1][254] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][254]);


--W1_acq_data_in_pipe_reg[2][255] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][255]
--register power-up is low

W1_acq_data_in_pipe_reg[2][255] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][255]);


--W1_acq_data_in_pipe_reg[3][256] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][256]
--register power-up is low

W1_acq_data_in_pipe_reg[3][256] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][256]);


--W1_acq_data_in_pipe_reg[0][254] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][254]
--register power-up is low

W1_acq_data_in_pipe_reg[0][254] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[254]);


--W1_acq_data_in_pipe_reg[1][255] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][255]
--register power-up is low

W1_acq_data_in_pipe_reg[1][255] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][255]);


--W1_acq_data_in_pipe_reg[2][256] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][256]
--register power-up is low

W1_acq_data_in_pipe_reg[2][256] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][256]);


--W1_acq_data_in_pipe_reg[3][257] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][257]
--register power-up is low

W1_acq_data_in_pipe_reg[3][257] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][257]);


--W1_acq_data_in_pipe_reg[0][255] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][255]
--register power-up is low

W1_acq_data_in_pipe_reg[0][255] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[255]);


--W1_acq_data_in_pipe_reg[1][256] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][256]
--register power-up is low

W1_acq_data_in_pipe_reg[1][256] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][256]);


--W1_acq_data_in_pipe_reg[2][257] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][257]
--register power-up is low

W1_acq_data_in_pipe_reg[2][257] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][257]);


--W1_acq_data_in_pipe_reg[3][258] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][258]
--register power-up is low

W1_acq_data_in_pipe_reg[3][258] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][258]);


--W1_acq_data_in_pipe_reg[0][256] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][256]
--register power-up is low

W1_acq_data_in_pipe_reg[0][256] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[256]);


--W1_acq_data_in_pipe_reg[1][257] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][257]
--register power-up is low

W1_acq_data_in_pipe_reg[1][257] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][257]);


--W1_acq_data_in_pipe_reg[2][258] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][258]
--register power-up is low

W1_acq_data_in_pipe_reg[2][258] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][258]);


--W1_acq_data_in_pipe_reg[3][259] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][259]
--register power-up is low

W1_acq_data_in_pipe_reg[3][259] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][259]);


--W1_acq_data_in_pipe_reg[0][257] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][257]
--register power-up is low

W1_acq_data_in_pipe_reg[0][257] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[257]);


--W1_acq_data_in_pipe_reg[1][258] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][258]
--register power-up is low

W1_acq_data_in_pipe_reg[1][258] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][258]);


--W1_acq_data_in_pipe_reg[2][259] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][259]
--register power-up is low

W1_acq_data_in_pipe_reg[2][259] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][259]);


--W1_acq_data_in_pipe_reg[3][260] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][260]
--register power-up is low

W1_acq_data_in_pipe_reg[3][260] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][260]);


--W1_acq_data_in_pipe_reg[0][258] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][258]
--register power-up is low

W1_acq_data_in_pipe_reg[0][258] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[258]);


--W1_acq_data_in_pipe_reg[1][259] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][259]
--register power-up is low

W1_acq_data_in_pipe_reg[1][259] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][259]);


--W1_acq_data_in_pipe_reg[2][260] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][260]
--register power-up is low

W1_acq_data_in_pipe_reg[2][260] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][260]);


--W1_acq_data_in_pipe_reg[3][261] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][261]
--register power-up is low

W1_acq_data_in_pipe_reg[3][261] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][261]);


--W1_acq_data_in_pipe_reg[0][259] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][259]
--register power-up is low

W1_acq_data_in_pipe_reg[0][259] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[259]);


--W1_acq_data_in_pipe_reg[1][260] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][260]
--register power-up is low

W1_acq_data_in_pipe_reg[1][260] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][260]);


--W1_acq_data_in_pipe_reg[2][261] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][261]
--register power-up is low

W1_acq_data_in_pipe_reg[2][261] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][261]);


--W1_acq_data_in_pipe_reg[3][262] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][262]
--register power-up is low

W1_acq_data_in_pipe_reg[3][262] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][262]);


--W1_acq_data_in_pipe_reg[0][260] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][260]
--register power-up is low

W1_acq_data_in_pipe_reg[0][260] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[260]);


--W1_acq_data_in_pipe_reg[1][261] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][261]
--register power-up is low

W1_acq_data_in_pipe_reg[1][261] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][261]);


--W1_acq_data_in_pipe_reg[2][262] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][262]
--register power-up is low

W1_acq_data_in_pipe_reg[2][262] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][262]);


--W1_acq_data_in_pipe_reg[3][263] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][263]
--register power-up is low

W1_acq_data_in_pipe_reg[3][263] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][263]);


--W1_acq_data_in_pipe_reg[0][261] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][261]
--register power-up is low

W1_acq_data_in_pipe_reg[0][261] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[261]);


--W1_acq_data_in_pipe_reg[1][262] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][262]
--register power-up is low

W1_acq_data_in_pipe_reg[1][262] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][262]);


--W1_acq_data_in_pipe_reg[2][263] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][263]
--register power-up is low

W1_acq_data_in_pipe_reg[2][263] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][263]);


--W1_acq_data_in_pipe_reg[3][264] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][264]
--register power-up is low

W1_acq_data_in_pipe_reg[3][264] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][264]);


--W1_acq_data_in_pipe_reg[0][262] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][262]
--register power-up is low

W1_acq_data_in_pipe_reg[0][262] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[262]);


--W1_acq_data_in_pipe_reg[1][263] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][263]
--register power-up is low

W1_acq_data_in_pipe_reg[1][263] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][263]);


--W1_acq_data_in_pipe_reg[2][264] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][264]
--register power-up is low

W1_acq_data_in_pipe_reg[2][264] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][264]);


--W1_acq_data_in_pipe_reg[3][265] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][265]
--register power-up is low

W1_acq_data_in_pipe_reg[3][265] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][265]);


--W1_acq_data_in_pipe_reg[0][263] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][263]
--register power-up is low

W1_acq_data_in_pipe_reg[0][263] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[263]);


--W1_acq_data_in_pipe_reg[1][264] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][264]
--register power-up is low

W1_acq_data_in_pipe_reg[1][264] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][264]);


--W1_acq_data_in_pipe_reg[2][265] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][265]
--register power-up is low

W1_acq_data_in_pipe_reg[2][265] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][265]);


--W1_acq_data_in_pipe_reg[3][266] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][266]
--register power-up is low

W1_acq_data_in_pipe_reg[3][266] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][266]);


--W1_acq_data_in_pipe_reg[0][264] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][264]
--register power-up is low

W1_acq_data_in_pipe_reg[0][264] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[264]);


--W1_acq_data_in_pipe_reg[1][265] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][265]
--register power-up is low

W1_acq_data_in_pipe_reg[1][265] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][265]);


--W1_acq_data_in_pipe_reg[2][266] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][266]
--register power-up is low

W1_acq_data_in_pipe_reg[2][266] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][266]);


--W1_acq_data_in_pipe_reg[3][267] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][267]
--register power-up is low

W1_acq_data_in_pipe_reg[3][267] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][267]);


--W1_acq_data_in_pipe_reg[0][265] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][265]
--register power-up is low

W1_acq_data_in_pipe_reg[0][265] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[265]);


--W1_acq_data_in_pipe_reg[1][266] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][266]
--register power-up is low

W1_acq_data_in_pipe_reg[1][266] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][266]);


--W1_acq_data_in_pipe_reg[2][267] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][267]
--register power-up is low

W1_acq_data_in_pipe_reg[2][267] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][267]);


--W1_acq_data_in_pipe_reg[3][268] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][268]
--register power-up is low

W1_acq_data_in_pipe_reg[3][268] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][268]);


--W1_acq_data_in_pipe_reg[0][266] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][266]
--register power-up is low

W1_acq_data_in_pipe_reg[0][266] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[266]);


--W1_acq_data_in_pipe_reg[1][267] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][267]
--register power-up is low

W1_acq_data_in_pipe_reg[1][267] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][267]);


--W1_acq_data_in_pipe_reg[2][268] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][268]
--register power-up is low

W1_acq_data_in_pipe_reg[2][268] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][268]);


--W1_acq_data_in_pipe_reg[3][269] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][269]
--register power-up is low

W1_acq_data_in_pipe_reg[3][269] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][269]);


--W1_acq_data_in_pipe_reg[0][267] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][267]
--register power-up is low

W1_acq_data_in_pipe_reg[0][267] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[267]);


--W1_acq_data_in_pipe_reg[1][268] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][268]
--register power-up is low

W1_acq_data_in_pipe_reg[1][268] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][268]);


--W1_acq_data_in_pipe_reg[2][269] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][269]
--register power-up is low

W1_acq_data_in_pipe_reg[2][269] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][269]);


--W1_acq_data_in_pipe_reg[3][270] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][270]
--register power-up is low

W1_acq_data_in_pipe_reg[3][270] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][270]);


--W1_acq_data_in_pipe_reg[0][268] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][268]
--register power-up is low

W1_acq_data_in_pipe_reg[0][268] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[268]);


--W1_acq_data_in_pipe_reg[1][269] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][269]
--register power-up is low

W1_acq_data_in_pipe_reg[1][269] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][269]);


--W1_acq_data_in_pipe_reg[2][270] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][270]
--register power-up is low

W1_acq_data_in_pipe_reg[2][270] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][270]);


--W1_acq_data_in_pipe_reg[3][271] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][271]
--register power-up is low

W1_acq_data_in_pipe_reg[3][271] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][271]);


--W1_acq_data_in_pipe_reg[0][269] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][269]
--register power-up is low

W1_acq_data_in_pipe_reg[0][269] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[269]);


--W1_acq_data_in_pipe_reg[1][270] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][270]
--register power-up is low

W1_acq_data_in_pipe_reg[1][270] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][270]);


--W1_acq_data_in_pipe_reg[2][271] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][271]
--register power-up is low

W1_acq_data_in_pipe_reg[2][271] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][271]);


--W1_acq_data_in_pipe_reg[3][272] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][272]
--register power-up is low

W1_acq_data_in_pipe_reg[3][272] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][272]);


--W1_acq_data_in_pipe_reg[0][270] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][270]
--register power-up is low

W1_acq_data_in_pipe_reg[0][270] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[270]);


--W1_acq_data_in_pipe_reg[1][271] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][271]
--register power-up is low

W1_acq_data_in_pipe_reg[1][271] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][271]);


--W1_acq_data_in_pipe_reg[2][272] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][272]
--register power-up is low

W1_acq_data_in_pipe_reg[2][272] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][272]);


--W1_acq_data_in_pipe_reg[3][273] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][273]
--register power-up is low

W1_acq_data_in_pipe_reg[3][273] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][273]);


--W1_acq_data_in_pipe_reg[0][271] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][271]
--register power-up is low

W1_acq_data_in_pipe_reg[0][271] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[271]);


--W1_acq_data_in_pipe_reg[1][272] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][272]
--register power-up is low

W1_acq_data_in_pipe_reg[1][272] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][272]);


--W1_acq_data_in_pipe_reg[2][273] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][273]
--register power-up is low

W1_acq_data_in_pipe_reg[2][273] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][273]);


--W1_acq_data_in_pipe_reg[3][274] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][274]
--register power-up is low

W1_acq_data_in_pipe_reg[3][274] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][274]);


--W1_acq_data_in_pipe_reg[0][272] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][272]
--register power-up is low

W1_acq_data_in_pipe_reg[0][272] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[272]);


--W1_acq_data_in_pipe_reg[1][273] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][273]
--register power-up is low

W1_acq_data_in_pipe_reg[1][273] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][273]);


--W1_acq_data_in_pipe_reg[2][274] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][274]
--register power-up is low

W1_acq_data_in_pipe_reg[2][274] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][274]);


--W1_acq_data_in_pipe_reg[3][275] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][275]
--register power-up is low

W1_acq_data_in_pipe_reg[3][275] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][275]);


--W1_acq_data_in_pipe_reg[0][273] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][273]
--register power-up is low

W1_acq_data_in_pipe_reg[0][273] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[273]);


--W1_acq_data_in_pipe_reg[1][274] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][274]
--register power-up is low

W1_acq_data_in_pipe_reg[1][274] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][274]);


--W1_acq_data_in_pipe_reg[2][275] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][275]
--register power-up is low

W1_acq_data_in_pipe_reg[2][275] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][275]);


--W1_acq_data_in_pipe_reg[3][276] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][276]
--register power-up is low

W1_acq_data_in_pipe_reg[3][276] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][276]);


--W1_acq_data_in_pipe_reg[0][274] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][274]
--register power-up is low

W1_acq_data_in_pipe_reg[0][274] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[274]);


--W1_acq_data_in_pipe_reg[1][275] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][275]
--register power-up is low

W1_acq_data_in_pipe_reg[1][275] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][275]);


--W1_acq_data_in_pipe_reg[2][276] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][276]
--register power-up is low

W1_acq_data_in_pipe_reg[2][276] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][276]);


--W1_acq_data_in_pipe_reg[3][277] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][277]
--register power-up is low

W1_acq_data_in_pipe_reg[3][277] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][277]);


--W1_acq_data_in_pipe_reg[0][275] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][275]
--register power-up is low

W1_acq_data_in_pipe_reg[0][275] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[275]);


--W1_acq_data_in_pipe_reg[1][276] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][276]
--register power-up is low

W1_acq_data_in_pipe_reg[1][276] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][276]);


--W1_acq_data_in_pipe_reg[2][277] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][277]
--register power-up is low

W1_acq_data_in_pipe_reg[2][277] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][277]);


--W1_acq_data_in_pipe_reg[3][278] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][278]
--register power-up is low

W1_acq_data_in_pipe_reg[3][278] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][278]);


--W1_acq_data_in_pipe_reg[0][276] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][276]
--register power-up is low

W1_acq_data_in_pipe_reg[0][276] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[276]);


--W1_acq_data_in_pipe_reg[1][277] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][277]
--register power-up is low

W1_acq_data_in_pipe_reg[1][277] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][277]);


--W1_acq_data_in_pipe_reg[2][278] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][278]
--register power-up is low

W1_acq_data_in_pipe_reg[2][278] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][278]);


--W1_acq_data_in_pipe_reg[3][279] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][279]
--register power-up is low

W1_acq_data_in_pipe_reg[3][279] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][279]);


--W1_acq_data_in_pipe_reg[0][277] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][277]
--register power-up is low

W1_acq_data_in_pipe_reg[0][277] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[277]);


--W1_acq_data_in_pipe_reg[1][278] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][278]
--register power-up is low

W1_acq_data_in_pipe_reg[1][278] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][278]);


--W1_acq_data_in_pipe_reg[2][279] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][279]
--register power-up is low

W1_acq_data_in_pipe_reg[2][279] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][279]);


--W1_acq_data_in_pipe_reg[3][280] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][280]
--register power-up is low

W1_acq_data_in_pipe_reg[3][280] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][280]);


--W1_acq_data_in_pipe_reg[0][278] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][278]
--register power-up is low

W1_acq_data_in_pipe_reg[0][278] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[278]);


--W1_acq_data_in_pipe_reg[1][279] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][279]
--register power-up is low

W1_acq_data_in_pipe_reg[1][279] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][279]);


--W1_acq_data_in_pipe_reg[2][280] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][280]
--register power-up is low

W1_acq_data_in_pipe_reg[2][280] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][280]);


--W1_acq_data_in_pipe_reg[3][281] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][281]
--register power-up is low

W1_acq_data_in_pipe_reg[3][281] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][281]);


--W1_acq_data_in_pipe_reg[0][279] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][279]
--register power-up is low

W1_acq_data_in_pipe_reg[0][279] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[279]);


--W1_acq_data_in_pipe_reg[1][280] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][280]
--register power-up is low

W1_acq_data_in_pipe_reg[1][280] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][280]);


--W1_acq_data_in_pipe_reg[2][281] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][281]
--register power-up is low

W1_acq_data_in_pipe_reg[2][281] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][281]);


--W1_acq_data_in_pipe_reg[3][282] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][282]
--register power-up is low

W1_acq_data_in_pipe_reg[3][282] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][282]);


--W1_acq_data_in_pipe_reg[0][280] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][280]
--register power-up is low

W1_acq_data_in_pipe_reg[0][280] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[280]);


--W1_acq_data_in_pipe_reg[1][281] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][281]
--register power-up is low

W1_acq_data_in_pipe_reg[1][281] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][281]);


--W1_acq_data_in_pipe_reg[2][282] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][282]
--register power-up is low

W1_acq_data_in_pipe_reg[2][282] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][282]);


--W1_acq_data_in_pipe_reg[3][283] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][283]
--register power-up is low

W1_acq_data_in_pipe_reg[3][283] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][283]);


--W1_acq_data_in_pipe_reg[0][281] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][281]
--register power-up is low

W1_acq_data_in_pipe_reg[0][281] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[281]);


--W1_acq_data_in_pipe_reg[1][282] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][282]
--register power-up is low

W1_acq_data_in_pipe_reg[1][282] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][282]);


--W1_acq_data_in_pipe_reg[2][283] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][283]
--register power-up is low

W1_acq_data_in_pipe_reg[2][283] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][283]);


--W1_acq_data_in_pipe_reg[3][284] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][284]
--register power-up is low

W1_acq_data_in_pipe_reg[3][284] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][284]);


--W1_acq_data_in_pipe_reg[0][282] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][282]
--register power-up is low

W1_acq_data_in_pipe_reg[0][282] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[282]);


--W1_acq_data_in_pipe_reg[1][283] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][283]
--register power-up is low

W1_acq_data_in_pipe_reg[1][283] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][283]);


--W1_acq_data_in_pipe_reg[2][284] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][284]
--register power-up is low

W1_acq_data_in_pipe_reg[2][284] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][284]);


--W1_acq_data_in_pipe_reg[3][285] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][285]
--register power-up is low

W1_acq_data_in_pipe_reg[3][285] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][285]);


--W1_acq_data_in_pipe_reg[0][283] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][283]
--register power-up is low

W1_acq_data_in_pipe_reg[0][283] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[283]);


--W1_acq_data_in_pipe_reg[1][284] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][284]
--register power-up is low

W1_acq_data_in_pipe_reg[1][284] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][284]);


--W1_acq_data_in_pipe_reg[2][285] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][285]
--register power-up is low

W1_acq_data_in_pipe_reg[2][285] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][285]);


--W1_acq_data_in_pipe_reg[3][286] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][286]
--register power-up is low

W1_acq_data_in_pipe_reg[3][286] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][286]);


--W1_acq_data_in_pipe_reg[0][284] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][284]
--register power-up is low

W1_acq_data_in_pipe_reg[0][284] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[284]);


--W1_acq_data_in_pipe_reg[1][285] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][285]
--register power-up is low

W1_acq_data_in_pipe_reg[1][285] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][285]);


--W1_acq_data_in_pipe_reg[2][286] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][286]
--register power-up is low

W1_acq_data_in_pipe_reg[2][286] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][286]);


--W1_acq_data_in_pipe_reg[3][287] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][287]
--register power-up is low

W1_acq_data_in_pipe_reg[3][287] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][287]);


--W1_acq_data_in_pipe_reg[0][285] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][285]
--register power-up is low

W1_acq_data_in_pipe_reg[0][285] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[285]);


--W1_acq_data_in_pipe_reg[1][286] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][286]
--register power-up is low

W1_acq_data_in_pipe_reg[1][286] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][286]);


--W1_acq_data_in_pipe_reg[2][287] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][287]
--register power-up is low

W1_acq_data_in_pipe_reg[2][287] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][287]);


--W1_acq_data_in_pipe_reg[3][288] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][288]
--register power-up is low

W1_acq_data_in_pipe_reg[3][288] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][288]);


--W1_acq_data_in_pipe_reg[0][286] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][286]
--register power-up is low

W1_acq_data_in_pipe_reg[0][286] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[286]);


--W1_acq_data_in_pipe_reg[1][287] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][287]
--register power-up is low

W1_acq_data_in_pipe_reg[1][287] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][287]);


--W1_acq_data_in_pipe_reg[2][288] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][288]
--register power-up is low

W1_acq_data_in_pipe_reg[2][288] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][288]);


--W1_acq_data_in_pipe_reg[3][289] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][289]
--register power-up is low

W1_acq_data_in_pipe_reg[3][289] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][289]);


--W1_acq_data_in_pipe_reg[0][287] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][287]
--register power-up is low

W1_acq_data_in_pipe_reg[0][287] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[287]);


--W1_acq_data_in_pipe_reg[1][288] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][288]
--register power-up is low

W1_acq_data_in_pipe_reg[1][288] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][288]);


--W1_acq_data_in_pipe_reg[2][289] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][289]
--register power-up is low

W1_acq_data_in_pipe_reg[2][289] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][289]);


--W1_acq_data_in_pipe_reg[3][290] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][290]
--register power-up is low

W1_acq_data_in_pipe_reg[3][290] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][290]);


--W1_acq_data_in_pipe_reg[0][288] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][288]
--register power-up is low

W1_acq_data_in_pipe_reg[0][288] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[288]);


--W1_acq_data_in_pipe_reg[1][289] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][289]
--register power-up is low

W1_acq_data_in_pipe_reg[1][289] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][289]);


--W1_acq_data_in_pipe_reg[2][290] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][290]
--register power-up is low

W1_acq_data_in_pipe_reg[2][290] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][290]);


--W1_acq_data_in_pipe_reg[3][291] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][291]
--register power-up is low

W1_acq_data_in_pipe_reg[3][291] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][291]);


--W1_acq_data_in_pipe_reg[0][289] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][289]
--register power-up is low

W1_acq_data_in_pipe_reg[0][289] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[289]);


--W1_acq_data_in_pipe_reg[1][290] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][290]
--register power-up is low

W1_acq_data_in_pipe_reg[1][290] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][290]);


--W1_acq_data_in_pipe_reg[2][291] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][291]
--register power-up is low

W1_acq_data_in_pipe_reg[2][291] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][291]);


--W1_acq_data_in_pipe_reg[3][292] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][292]
--register power-up is low

W1_acq_data_in_pipe_reg[3][292] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][292]);


--W1_acq_data_in_pipe_reg[0][290] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][290]
--register power-up is low

W1_acq_data_in_pipe_reg[0][290] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[290]);


--W1_acq_data_in_pipe_reg[1][291] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][291]
--register power-up is low

W1_acq_data_in_pipe_reg[1][291] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][291]);


--W1_acq_data_in_pipe_reg[2][292] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][292]
--register power-up is low

W1_acq_data_in_pipe_reg[2][292] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][292]);


--W1_acq_data_in_pipe_reg[3][293] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][293]
--register power-up is low

W1_acq_data_in_pipe_reg[3][293] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][293]);


--W1_acq_data_in_pipe_reg[0][291] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][291]
--register power-up is low

W1_acq_data_in_pipe_reg[0][291] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[291]);


--W1_acq_data_in_pipe_reg[1][292] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][292]
--register power-up is low

W1_acq_data_in_pipe_reg[1][292] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][292]);


--W1_acq_data_in_pipe_reg[2][293] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][293]
--register power-up is low

W1_acq_data_in_pipe_reg[2][293] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][293]);


--W1_acq_data_in_pipe_reg[3][294] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][294]
--register power-up is low

W1_acq_data_in_pipe_reg[3][294] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][294]);


--W1_acq_data_in_pipe_reg[0][292] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][292]
--register power-up is low

W1_acq_data_in_pipe_reg[0][292] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[292]);


--W1_acq_data_in_pipe_reg[1][293] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][293]
--register power-up is low

W1_acq_data_in_pipe_reg[1][293] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][293]);


--W1_acq_data_in_pipe_reg[2][294] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][294]
--register power-up is low

W1_acq_data_in_pipe_reg[2][294] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][294]);


--W1_acq_data_in_pipe_reg[3][295] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][295]
--register power-up is low

W1_acq_data_in_pipe_reg[3][295] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][295]);


--W1_acq_data_in_pipe_reg[0][293] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][293]
--register power-up is low

W1_acq_data_in_pipe_reg[0][293] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[293]);


--W1_acq_data_in_pipe_reg[1][294] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][294]
--register power-up is low

W1_acq_data_in_pipe_reg[1][294] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][294]);


--W1_acq_data_in_pipe_reg[2][295] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][295]
--register power-up is low

W1_acq_data_in_pipe_reg[2][295] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][295]);


--W1_acq_data_in_pipe_reg[3][296] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][296]
--register power-up is low

W1_acq_data_in_pipe_reg[3][296] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][296]);


--W1_acq_data_in_pipe_reg[0][294] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][294]
--register power-up is low

W1_acq_data_in_pipe_reg[0][294] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[294]);


--W1_acq_data_in_pipe_reg[1][295] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][295]
--register power-up is low

W1_acq_data_in_pipe_reg[1][295] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][295]);


--W1_acq_data_in_pipe_reg[2][296] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][296]
--register power-up is low

W1_acq_data_in_pipe_reg[2][296] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][296]);


--W1_acq_data_in_pipe_reg[3][297] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][297]
--register power-up is low

W1_acq_data_in_pipe_reg[3][297] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][297]);


--W1_acq_data_in_pipe_reg[0][295] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][295]
--register power-up is low

W1_acq_data_in_pipe_reg[0][295] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[295]);


--W1_acq_data_in_pipe_reg[1][296] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][296]
--register power-up is low

W1_acq_data_in_pipe_reg[1][296] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][296]);


--W1_acq_data_in_pipe_reg[2][297] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][297]
--register power-up is low

W1_acq_data_in_pipe_reg[2][297] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][297]);


--W1_acq_data_in_pipe_reg[3][298] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][298]
--register power-up is low

W1_acq_data_in_pipe_reg[3][298] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][298]);


--W1_acq_data_in_pipe_reg[0][296] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][296]
--register power-up is low

W1_acq_data_in_pipe_reg[0][296] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[296]);


--W1_acq_data_in_pipe_reg[1][297] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][297]
--register power-up is low

W1_acq_data_in_pipe_reg[1][297] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][297]);


--W1_acq_data_in_pipe_reg[2][298] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][298]
--register power-up is low

W1_acq_data_in_pipe_reg[2][298] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][298]);


--W1_acq_data_in_pipe_reg[3][299] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][299]
--register power-up is low

W1_acq_data_in_pipe_reg[3][299] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][299]);


--W1_acq_data_in_pipe_reg[0][297] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][297]
--register power-up is low

W1_acq_data_in_pipe_reg[0][297] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[297]);


--W1_acq_data_in_pipe_reg[1][298] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][298]
--register power-up is low

W1_acq_data_in_pipe_reg[1][298] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][298]);


--W1_acq_data_in_pipe_reg[2][299] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][299]
--register power-up is low

W1_acq_data_in_pipe_reg[2][299] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][299]);


--W1_acq_data_in_pipe_reg[3][300] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][300]
--register power-up is low

W1_acq_data_in_pipe_reg[3][300] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][300]);


--W1_acq_data_in_pipe_reg[0][298] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][298]
--register power-up is low

W1_acq_data_in_pipe_reg[0][298] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[298]);


--W1_acq_data_in_pipe_reg[1][299] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][299]
--register power-up is low

W1_acq_data_in_pipe_reg[1][299] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][299]);


--W1_acq_data_in_pipe_reg[2][300] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][300]
--register power-up is low

W1_acq_data_in_pipe_reg[2][300] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][300]);


--W1_acq_data_in_pipe_reg[3][301] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][301]
--register power-up is low

W1_acq_data_in_pipe_reg[3][301] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][301]);


--W1_acq_data_in_pipe_reg[0][299] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][299]
--register power-up is low

W1_acq_data_in_pipe_reg[0][299] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[299]);


--W1_acq_data_in_pipe_reg[1][300] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][300]
--register power-up is low

W1_acq_data_in_pipe_reg[1][300] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][300]);


--W1_acq_data_in_pipe_reg[2][301] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][301]
--register power-up is low

W1_acq_data_in_pipe_reg[2][301] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][301]);


--W1_acq_data_in_pipe_reg[3][302] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][302]
--register power-up is low

W1_acq_data_in_pipe_reg[3][302] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][302]);


--W1_acq_data_in_pipe_reg[0][300] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][300]
--register power-up is low

W1_acq_data_in_pipe_reg[0][300] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[300]);


--W1_acq_data_in_pipe_reg[1][301] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][301]
--register power-up is low

W1_acq_data_in_pipe_reg[1][301] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][301]);


--W1_acq_data_in_pipe_reg[2][302] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][302]
--register power-up is low

W1_acq_data_in_pipe_reg[2][302] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][302]);


--W1_acq_data_in_pipe_reg[3][303] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][303]
--register power-up is low

W1_acq_data_in_pipe_reg[3][303] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][303]);


--W1_acq_data_in_pipe_reg[0][301] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][301]
--register power-up is low

W1_acq_data_in_pipe_reg[0][301] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[301]);


--W1_acq_data_in_pipe_reg[1][302] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][302]
--register power-up is low

W1_acq_data_in_pipe_reg[1][302] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][302]);


--W1_acq_data_in_pipe_reg[2][303] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][303]
--register power-up is low

W1_acq_data_in_pipe_reg[2][303] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][303]);


--W1_acq_data_in_pipe_reg[3][304] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][304]
--register power-up is low

W1_acq_data_in_pipe_reg[3][304] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][304]);


--W1_acq_data_in_pipe_reg[0][302] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][302]
--register power-up is low

W1_acq_data_in_pipe_reg[0][302] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[302]);


--W1_acq_data_in_pipe_reg[1][303] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][303]
--register power-up is low

W1_acq_data_in_pipe_reg[1][303] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][303]);


--W1_acq_data_in_pipe_reg[2][304] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][304]
--register power-up is low

W1_acq_data_in_pipe_reg[2][304] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][304]);


--W1_acq_data_in_pipe_reg[3][305] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][305]
--register power-up is low

W1_acq_data_in_pipe_reg[3][305] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][305]);


--W1_acq_data_in_pipe_reg[0][303] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][303]
--register power-up is low

W1_acq_data_in_pipe_reg[0][303] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[303]);


--W1_acq_data_in_pipe_reg[1][304] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][304]
--register power-up is low

W1_acq_data_in_pipe_reg[1][304] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][304]);


--W1_acq_data_in_pipe_reg[2][305] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][305]
--register power-up is low

W1_acq_data_in_pipe_reg[2][305] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][305]);


--W1_acq_data_in_pipe_reg[3][306] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][306]
--register power-up is low

W1_acq_data_in_pipe_reg[3][306] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][306]);


--W1_acq_data_in_pipe_reg[0][304] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][304]
--register power-up is low

W1_acq_data_in_pipe_reg[0][304] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[304]);


--W1_acq_data_in_pipe_reg[1][305] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][305]
--register power-up is low

W1_acq_data_in_pipe_reg[1][305] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][305]);


--W1_acq_data_in_pipe_reg[2][306] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][306]
--register power-up is low

W1_acq_data_in_pipe_reg[2][306] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][306]);


--W1_acq_data_in_pipe_reg[3][307] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][307]
--register power-up is low

W1_acq_data_in_pipe_reg[3][307] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][307]);


--W1_acq_data_in_pipe_reg[0][305] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][305]
--register power-up is low

W1_acq_data_in_pipe_reg[0][305] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[305]);


--W1_acq_data_in_pipe_reg[1][306] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][306]
--register power-up is low

W1_acq_data_in_pipe_reg[1][306] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][306]);


--W1_acq_data_in_pipe_reg[2][307] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][307]
--register power-up is low

W1_acq_data_in_pipe_reg[2][307] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][307]);


--W1_acq_data_in_pipe_reg[3][308] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][308]
--register power-up is low

W1_acq_data_in_pipe_reg[3][308] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][308]);


--W1_acq_data_in_pipe_reg[0][306] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][306]
--register power-up is low

W1_acq_data_in_pipe_reg[0][306] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[306]);


--W1_acq_data_in_pipe_reg[1][307] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][307]
--register power-up is low

W1_acq_data_in_pipe_reg[1][307] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][307]);


--W1_acq_data_in_pipe_reg[2][308] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][308]
--register power-up is low

W1_acq_data_in_pipe_reg[2][308] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][308]);


--W1_acq_data_in_pipe_reg[3][309] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][309]
--register power-up is low

W1_acq_data_in_pipe_reg[3][309] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][309]);


--W1_acq_data_in_pipe_reg[0][307] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][307]
--register power-up is low

W1_acq_data_in_pipe_reg[0][307] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[307]);


--W1_acq_data_in_pipe_reg[1][308] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][308]
--register power-up is low

W1_acq_data_in_pipe_reg[1][308] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][308]);


--W1_acq_data_in_pipe_reg[2][309] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][309]
--register power-up is low

W1_acq_data_in_pipe_reg[2][309] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][309]);


--W1_acq_data_in_pipe_reg[3][310] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][310]
--register power-up is low

W1_acq_data_in_pipe_reg[3][310] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][310]);


--W1_acq_data_in_pipe_reg[0][308] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][308]
--register power-up is low

W1_acq_data_in_pipe_reg[0][308] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[308]);


--W1_acq_data_in_pipe_reg[1][309] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][309]
--register power-up is low

W1_acq_data_in_pipe_reg[1][309] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][309]);


--W1_acq_data_in_pipe_reg[2][310] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][310]
--register power-up is low

W1_acq_data_in_pipe_reg[2][310] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][310]);


--W1_acq_data_in_pipe_reg[3][311] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][311]
--register power-up is low

W1_acq_data_in_pipe_reg[3][311] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][311]);


--W1_acq_data_in_pipe_reg[0][309] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][309]
--register power-up is low

W1_acq_data_in_pipe_reg[0][309] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[309]);


--W1_acq_data_in_pipe_reg[1][310] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][310]
--register power-up is low

W1_acq_data_in_pipe_reg[1][310] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][310]);


--W1_acq_data_in_pipe_reg[2][311] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][311]
--register power-up is low

W1_acq_data_in_pipe_reg[2][311] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][311]);


--W1_acq_data_in_pipe_reg[3][312] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][312]
--register power-up is low

W1_acq_data_in_pipe_reg[3][312] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][312]);


--W1_acq_data_in_pipe_reg[0][310] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][310]
--register power-up is low

W1_acq_data_in_pipe_reg[0][310] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[310]);


--W1_acq_data_in_pipe_reg[1][311] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][311]
--register power-up is low

W1_acq_data_in_pipe_reg[1][311] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][311]);


--W1_acq_data_in_pipe_reg[2][312] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][312]
--register power-up is low

W1_acq_data_in_pipe_reg[2][312] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][312]);


--W1_acq_data_in_pipe_reg[3][313] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][313]
--register power-up is low

W1_acq_data_in_pipe_reg[3][313] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][313]);


--W1_acq_data_in_pipe_reg[0][311] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][311]
--register power-up is low

W1_acq_data_in_pipe_reg[0][311] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[311]);


--W1_acq_data_in_pipe_reg[1][312] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][312]
--register power-up is low

W1_acq_data_in_pipe_reg[1][312] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][312]);


--W1_acq_data_in_pipe_reg[2][313] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][313]
--register power-up is low

W1_acq_data_in_pipe_reg[2][313] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][313]);


--W1_acq_data_in_pipe_reg[3][314] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][314]
--register power-up is low

W1_acq_data_in_pipe_reg[3][314] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][314]);


--W1_acq_data_in_pipe_reg[0][312] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][312]
--register power-up is low

W1_acq_data_in_pipe_reg[0][312] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[312]);


--W1_acq_data_in_pipe_reg[1][313] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][313]
--register power-up is low

W1_acq_data_in_pipe_reg[1][313] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][313]);


--W1_acq_data_in_pipe_reg[2][314] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][314]
--register power-up is low

W1_acq_data_in_pipe_reg[2][314] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][314]);


--W1_acq_data_in_pipe_reg[3][315] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][315]
--register power-up is low

W1_acq_data_in_pipe_reg[3][315] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][315]);


--W1_acq_data_in_pipe_reg[0][313] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][313]
--register power-up is low

W1_acq_data_in_pipe_reg[0][313] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[313]);


--W1_acq_data_in_pipe_reg[1][314] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][314]
--register power-up is low

W1_acq_data_in_pipe_reg[1][314] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][314]);


--W1_acq_data_in_pipe_reg[2][315] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][315]
--register power-up is low

W1_acq_data_in_pipe_reg[2][315] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][315]);


--W1_acq_data_in_pipe_reg[3][316] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][316]
--register power-up is low

W1_acq_data_in_pipe_reg[3][316] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][316]);


--W1_acq_data_in_pipe_reg[0][314] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][314]
--register power-up is low

W1_acq_data_in_pipe_reg[0][314] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[314]);


--W1_acq_data_in_pipe_reg[1][315] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][315]
--register power-up is low

W1_acq_data_in_pipe_reg[1][315] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][315]);


--W1_acq_data_in_pipe_reg[2][316] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][316]
--register power-up is low

W1_acq_data_in_pipe_reg[2][316] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][316]);


--W1_acq_data_in_pipe_reg[3][317] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][317]
--register power-up is low

W1_acq_data_in_pipe_reg[3][317] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][317]);


--W1_acq_data_in_pipe_reg[0][315] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][315]
--register power-up is low

W1_acq_data_in_pipe_reg[0][315] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[315]);


--W1_acq_data_in_pipe_reg[1][316] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][316]
--register power-up is low

W1_acq_data_in_pipe_reg[1][316] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][316]);


--W1_acq_data_in_pipe_reg[2][317] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][317]
--register power-up is low

W1_acq_data_in_pipe_reg[2][317] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][317]);


--W1_acq_data_in_pipe_reg[3][318] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][318]
--register power-up is low

W1_acq_data_in_pipe_reg[3][318] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][318]);


--W1_acq_data_in_pipe_reg[0][316] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][316]
--register power-up is low

W1_acq_data_in_pipe_reg[0][316] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[316]);


--W1_acq_data_in_pipe_reg[1][317] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][317]
--register power-up is low

W1_acq_data_in_pipe_reg[1][317] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][317]);


--W1_acq_data_in_pipe_reg[2][318] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][318]
--register power-up is low

W1_acq_data_in_pipe_reg[2][318] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][318]);


--W1_acq_data_in_pipe_reg[3][319] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][319]
--register power-up is low

W1_acq_data_in_pipe_reg[3][319] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][319]);


--W1_acq_data_in_pipe_reg[0][317] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][317]
--register power-up is low

W1_acq_data_in_pipe_reg[0][317] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[317]);


--W1_acq_data_in_pipe_reg[1][318] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][318]
--register power-up is low

W1_acq_data_in_pipe_reg[1][318] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][318]);


--W1_acq_data_in_pipe_reg[2][319] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][319]
--register power-up is low

W1_acq_data_in_pipe_reg[2][319] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][319]);


--W1_acq_data_in_pipe_reg[3][320] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][320]
--register power-up is low

W1_acq_data_in_pipe_reg[3][320] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][320]);


--W1_acq_data_in_pipe_reg[0][318] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][318]
--register power-up is low

W1_acq_data_in_pipe_reg[0][318] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[318]);


--W1_acq_data_in_pipe_reg[1][319] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][319]
--register power-up is low

W1_acq_data_in_pipe_reg[1][319] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][319]);


--W1_acq_data_in_pipe_reg[2][320] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][320]
--register power-up is low

W1_acq_data_in_pipe_reg[2][320] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][320]);


--W1_acq_data_in_pipe_reg[3][321] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][321]
--register power-up is low

W1_acq_data_in_pipe_reg[3][321] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][321]);


--W1_acq_data_in_pipe_reg[0][319] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][319]
--register power-up is low

W1_acq_data_in_pipe_reg[0][319] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[319]);


--W1_acq_data_in_pipe_reg[1][320] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][320]
--register power-up is low

W1_acq_data_in_pipe_reg[1][320] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][320]);


--W1_acq_data_in_pipe_reg[2][321] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][321]
--register power-up is low

W1_acq_data_in_pipe_reg[2][321] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][321]);


--W1_acq_data_in_pipe_reg[3][322] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][322]
--register power-up is low

W1_acq_data_in_pipe_reg[3][322] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][322]);


--W1_acq_data_in_pipe_reg[0][320] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][320]
--register power-up is low

W1_acq_data_in_pipe_reg[0][320] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[320]);


--W1_acq_data_in_pipe_reg[1][321] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][321]
--register power-up is low

W1_acq_data_in_pipe_reg[1][321] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][321]);


--W1_acq_data_in_pipe_reg[2][322] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][322]
--register power-up is low

W1_acq_data_in_pipe_reg[2][322] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][322]);


--W1_acq_data_in_pipe_reg[3][323] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][323]
--register power-up is low

W1_acq_data_in_pipe_reg[3][323] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][323]);


--W1_acq_data_in_pipe_reg[0][321] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][321]
--register power-up is low

W1_acq_data_in_pipe_reg[0][321] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[321]);


--W1_acq_data_in_pipe_reg[1][322] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][322]
--register power-up is low

W1_acq_data_in_pipe_reg[1][322] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][322]);


--W1_acq_data_in_pipe_reg[2][323] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][323]
--register power-up is low

W1_acq_data_in_pipe_reg[2][323] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][323]);


--W1_acq_data_in_pipe_reg[3][324] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][324]
--register power-up is low

W1_acq_data_in_pipe_reg[3][324] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][324]);


--W1_acq_data_in_pipe_reg[0][322] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][322]
--register power-up is low

W1_acq_data_in_pipe_reg[0][322] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[322]);


--W1_acq_data_in_pipe_reg[1][323] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][323]
--register power-up is low

W1_acq_data_in_pipe_reg[1][323] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][323]);


--W1_acq_data_in_pipe_reg[2][324] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][324]
--register power-up is low

W1_acq_data_in_pipe_reg[2][324] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][324]);


--W1_acq_data_in_pipe_reg[3][325] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][325]
--register power-up is low

W1_acq_data_in_pipe_reg[3][325] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][325]);


--W1_acq_data_in_pipe_reg[0][323] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][323]
--register power-up is low

W1_acq_data_in_pipe_reg[0][323] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[323]);


--W1_acq_data_in_pipe_reg[1][324] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][324]
--register power-up is low

W1_acq_data_in_pipe_reg[1][324] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][324]);


--W1_acq_data_in_pipe_reg[2][325] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][325]
--register power-up is low

W1_acq_data_in_pipe_reg[2][325] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][325]);


--W1_acq_data_in_pipe_reg[3][326] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][326]
--register power-up is low

W1_acq_data_in_pipe_reg[3][326] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][326]);


--W1_acq_data_in_pipe_reg[0][324] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][324]
--register power-up is low

W1_acq_data_in_pipe_reg[0][324] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[324]);


--W1_acq_data_in_pipe_reg[1][325] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][325]
--register power-up is low

W1_acq_data_in_pipe_reg[1][325] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][325]);


--W1_acq_data_in_pipe_reg[2][326] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][326]
--register power-up is low

W1_acq_data_in_pipe_reg[2][326] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][326]);


--W1_acq_data_in_pipe_reg[3][327] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][327]
--register power-up is low

W1_acq_data_in_pipe_reg[3][327] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][327]);


--W1_acq_data_in_pipe_reg[0][325] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][325]
--register power-up is low

W1_acq_data_in_pipe_reg[0][325] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[325]);


--W1_acq_data_in_pipe_reg[1][326] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][326]
--register power-up is low

W1_acq_data_in_pipe_reg[1][326] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][326]);


--W1_acq_data_in_pipe_reg[2][327] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][327]
--register power-up is low

W1_acq_data_in_pipe_reg[2][327] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][327]);


--W1_acq_data_in_pipe_reg[3][328] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][328]
--register power-up is low

W1_acq_data_in_pipe_reg[3][328] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][328]);


--W1_acq_data_in_pipe_reg[0][326] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][326]
--register power-up is low

W1_acq_data_in_pipe_reg[0][326] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[326]);


--W1_acq_data_in_pipe_reg[1][327] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][327]
--register power-up is low

W1_acq_data_in_pipe_reg[1][327] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][327]);


--W1_acq_data_in_pipe_reg[2][328] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][328]
--register power-up is low

W1_acq_data_in_pipe_reg[2][328] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][328]);


--W1_acq_data_in_pipe_reg[3][329] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][329]
--register power-up is low

W1_acq_data_in_pipe_reg[3][329] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][329]);


--W1_acq_data_in_pipe_reg[0][327] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][327]
--register power-up is low

W1_acq_data_in_pipe_reg[0][327] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[327]);


--W1_acq_data_in_pipe_reg[1][328] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][328]
--register power-up is low

W1_acq_data_in_pipe_reg[1][328] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][328]);


--W1_acq_data_in_pipe_reg[2][329] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][329]
--register power-up is low

W1_acq_data_in_pipe_reg[2][329] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][329]);


--W1_acq_data_in_pipe_reg[3][330] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][330]
--register power-up is low

W1_acq_data_in_pipe_reg[3][330] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][330]);


--W1_acq_data_in_pipe_reg[0][328] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][328]
--register power-up is low

W1_acq_data_in_pipe_reg[0][328] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[328]);


--W1_acq_data_in_pipe_reg[1][329] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][329]
--register power-up is low

W1_acq_data_in_pipe_reg[1][329] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][329]);


--W1_acq_data_in_pipe_reg[2][330] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][330]
--register power-up is low

W1_acq_data_in_pipe_reg[2][330] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][330]);


--W1_acq_data_in_pipe_reg[3][331] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][331]
--register power-up is low

W1_acq_data_in_pipe_reg[3][331] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][331]);


--W1_acq_data_in_pipe_reg[0][329] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][329]
--register power-up is low

W1_acq_data_in_pipe_reg[0][329] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[329]);


--W1_acq_data_in_pipe_reg[1][330] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][330]
--register power-up is low

W1_acq_data_in_pipe_reg[1][330] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][330]);


--W1_acq_data_in_pipe_reg[2][331] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][331]
--register power-up is low

W1_acq_data_in_pipe_reg[2][331] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][331]);


--W1_acq_data_in_pipe_reg[3][332] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][332]
--register power-up is low

W1_acq_data_in_pipe_reg[3][332] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][332]);


--W1_acq_data_in_pipe_reg[0][330] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][330]
--register power-up is low

W1_acq_data_in_pipe_reg[0][330] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[330]);


--W1_acq_data_in_pipe_reg[1][331] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][331]
--register power-up is low

W1_acq_data_in_pipe_reg[1][331] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][331]);


--W1_acq_data_in_pipe_reg[2][332] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][332]
--register power-up is low

W1_acq_data_in_pipe_reg[2][332] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][332]);


--W1_acq_data_in_pipe_reg[3][333] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][333]
--register power-up is low

W1_acq_data_in_pipe_reg[3][333] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][333]);


--W1_acq_data_in_pipe_reg[0][331] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][331]
--register power-up is low

W1_acq_data_in_pipe_reg[0][331] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[331]);


--W1_acq_data_in_pipe_reg[1][332] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][332]
--register power-up is low

W1_acq_data_in_pipe_reg[1][332] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][332]);


--W1_acq_data_in_pipe_reg[2][333] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][333]
--register power-up is low

W1_acq_data_in_pipe_reg[2][333] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][333]);


--W1_acq_data_in_pipe_reg[3][334] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][334]
--register power-up is low

W1_acq_data_in_pipe_reg[3][334] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][334]);


--W1_acq_data_in_pipe_reg[0][332] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][332]
--register power-up is low

W1_acq_data_in_pipe_reg[0][332] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[332]);


--W1_acq_data_in_pipe_reg[1][333] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][333]
--register power-up is low

W1_acq_data_in_pipe_reg[1][333] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][333]);


--W1_acq_data_in_pipe_reg[2][334] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][334]
--register power-up is low

W1_acq_data_in_pipe_reg[2][334] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][334]);


--W1_acq_data_in_pipe_reg[3][335] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][335]
--register power-up is low

W1_acq_data_in_pipe_reg[3][335] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][335]);


--W1_acq_data_in_pipe_reg[0][333] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][333]
--register power-up is low

W1_acq_data_in_pipe_reg[0][333] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[333]);


--W1_acq_data_in_pipe_reg[1][334] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][334]
--register power-up is low

W1_acq_data_in_pipe_reg[1][334] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][334]);


--W1_acq_data_in_pipe_reg[2][335] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][335]
--register power-up is low

W1_acq_data_in_pipe_reg[2][335] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][335]);


--W1_acq_data_in_pipe_reg[3][336] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][336]
--register power-up is low

W1_acq_data_in_pipe_reg[3][336] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][336]);


--W1_acq_data_in_pipe_reg[0][334] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][334]
--register power-up is low

W1_acq_data_in_pipe_reg[0][334] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[334]);


--W1_acq_data_in_pipe_reg[1][335] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][335]
--register power-up is low

W1_acq_data_in_pipe_reg[1][335] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][335]);


--W1_acq_data_in_pipe_reg[2][336] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][336]
--register power-up is low

W1_acq_data_in_pipe_reg[2][336] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][336]);


--W1_acq_data_in_pipe_reg[3][337] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][337]
--register power-up is low

W1_acq_data_in_pipe_reg[3][337] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][337]);


--W1_acq_data_in_pipe_reg[0][335] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][335]
--register power-up is low

W1_acq_data_in_pipe_reg[0][335] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[335]);


--W1_acq_data_in_pipe_reg[1][336] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][336]
--register power-up is low

W1_acq_data_in_pipe_reg[1][336] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][336]);


--W1_acq_data_in_pipe_reg[2][337] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][337]
--register power-up is low

W1_acq_data_in_pipe_reg[2][337] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][337]);


--W1_acq_data_in_pipe_reg[3][338] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][338]
--register power-up is low

W1_acq_data_in_pipe_reg[3][338] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][338]);


--CB5_dffs[340] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|dffs[340]
--register power-up is low

CB5_dffs[340] = AMPP_FUNCTION(C1_raw_tck, CB5L1, !W1_reset_all);


--W1_acq_data_in_pipe_reg[0][336] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][336]
--register power-up is low

W1_acq_data_in_pipe_reg[0][336] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[336]);


--W1_acq_data_in_pipe_reg[1][337] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][337]
--register power-up is low

W1_acq_data_in_pipe_reg[1][337] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][337]);


--W1_acq_data_in_pipe_reg[2][338] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][338]
--register power-up is low

W1_acq_data_in_pipe_reg[2][338] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][338]);


--W1_acq_data_in_pipe_reg[3][339] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][339]
--register power-up is low

W1_acq_data_in_pipe_reg[3][339] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][339]);


--CB5L1 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_offload_buffer_mgr:\stp_non_zero_depth_offload_gen:stp_offload_buff_mgr_inst|lpm_shiftreg:ram_data_shift_out|_~0
CB5L1 = AMPP_FUNCTION(!X1_offload_shift_ena, !X1L2, !X1L4, !SB1_ram_block1a340);


--W1_acq_data_in_pipe_reg[0][337] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][337]
--register power-up is low

W1_acq_data_in_pipe_reg[0][337] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[337]);


--W1_acq_data_in_pipe_reg[1][338] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][338]
--register power-up is low

W1_acq_data_in_pipe_reg[1][338] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][338]);


--W1_acq_data_in_pipe_reg[2][339] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][339]
--register power-up is low

W1_acq_data_in_pipe_reg[2][339] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][339]);


--W1_acq_data_in_pipe_reg[3][340] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[3][340]
--register power-up is low

W1_acq_data_in_pipe_reg[3][340] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[2][340]);


--W1_acq_data_in_pipe_reg[0][338] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][338]
--register power-up is low

W1_acq_data_in_pipe_reg[0][338] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[338]);


--W1_acq_data_in_pipe_reg[1][339] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][339]
--register power-up is low

W1_acq_data_in_pipe_reg[1][339] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][339]);


--W1_acq_data_in_pipe_reg[2][340] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[2][340]
--register power-up is low

W1_acq_data_in_pipe_reg[2][340] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[1][340]);


--W1_acq_data_in_pipe_reg[0][339] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][339]
--register power-up is low

W1_acq_data_in_pipe_reg[0][339] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[339]);


--W1_acq_data_in_pipe_reg[1][340] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[1][340]
--register power-up is low

W1_acq_data_in_pipe_reg[1][340] = AMPP_FUNCTION(C1_acq_clk, W1_acq_data_in_pipe_reg[0][340]);


--W1_acq_data_in_pipe_reg[0][340] is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|acq_data_in_pipe_reg[0][340]
--register power-up is low

W1_acq_data_in_pipe_reg[0][340] = AMPP_FUNCTION(C1_acq_clk, C1_acq_data_in_reg[340]);


--W1L1509 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|buffer_write_enable_delayed~0
W1L1509 = AMPP_FUNCTION(!DB1_\buffer_manager:done);


--DB1L224 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[9]~0
DB1L224 = AMPP_FUNCTION(!DB1L27);


--DB1L226 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[10]~1
DB1L226 = AMPP_FUNCTION(!DB1L31);


--DB1L218 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[6]~2
DB1L218 = AMPP_FUNCTION(!DB1L35);


--DB1L220 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[7]~3
DB1L220 = AMPP_FUNCTION(!DB1L39);


--DB1L222 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[8]~4
DB1L222 = AMPP_FUNCTION(!DB1L43);


--DB1L208 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[1]~5
DB1L208 = AMPP_FUNCTION(!DB1L47);


--DB1L210 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[2]~6
DB1L210 = AMPP_FUNCTION(!DB1L51);


--DB1L212 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[3]~7
DB1L212 = AMPP_FUNCTION(!DB1L55);


--DB1L214 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[4]~8
DB1L214 = AMPP_FUNCTION(!DB1L59);


--DB1L216 is sld_signaltap:auto_signaltap_0|sld_signaltap_impl:sld_signaltap_body|sld_signaltap_implb:sld_signaltap_body|sld_buffer_manager:sld_buffer_manager_inst|modified_post_count[5]~9
DB1L216 = AMPP_FUNCTION(!DB1L63);


--C1L1465 is sld_signaltap:auto_signaltap_0|~GND
C1L1465 = GND;


--C1L1466 is sld_signaltap:auto_signaltap_0|~VCC
C1L1466 = VCC;


