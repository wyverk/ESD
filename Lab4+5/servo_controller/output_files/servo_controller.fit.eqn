-- Copyright (C) 2018  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files from any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Intel Program License 
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.
--currCount[7] is currCount[7] at FF_X61_Y5_N23
--register power-up is low

currCount[7] = DFFEAS(A1L2, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[6] is currCount[6] at FF_X61_Y5_N20
--register power-up is low

currCount[6] = DFFEAS(A1L6, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[5] is currCount[5] at FF_X61_Y5_N16
--register power-up is low

currCount[5] = DFFEAS(A1L10, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[4] is currCount[4] at FF_X61_Y5_N14
--register power-up is low

currCount[4] = DFFEAS(A1L14, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[1] is currCount[1] at FF_X61_Y5_N5
--register power-up is low

currCount[1] = DFFEAS(A1L18, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[0] is currCount[0] at FF_X61_Y5_N1
--register power-up is low

currCount[0] = DFFEAS(A1L22, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[3] is currCount[3] at FF_X61_Y5_N10
--register power-up is low

currCount[3] = DFFEAS(A1L26, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[2] is currCount[2] at FF_X62_Y6_N35
--register power-up is low

currCount[2] = DFFEAS( , GLOBAL(A1L426), A1L786,  ,  , A1L30,  , A1L489, VCC);


--currCount[14] is currCount[14] at FF_X61_Y5_N43
--register power-up is low

currCount[14] = DFFEAS(A1L34, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[13] is currCount[13] at FF_X61_Y5_N40
--register power-up is low

currCount[13] = DFFEAS(A1L38, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[12] is currCount[12] at FF_X61_Y5_N38
--register power-up is low

currCount[12] = DFFEAS(A1L42, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[11] is currCount[11] at FF_X61_Y5_N34
--register power-up is low

currCount[11] = DFFEAS(A1L46, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[9] is currCount[9] at FF_X61_Y5_N29
--register power-up is low

currCount[9] = DFFEAS(A1L50, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[10] is currCount[10] at FF_X61_Y5_N32
--register power-up is low

currCount[10] = DFFEAS(A1L54, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[8] is currCount[8] at FF_X61_Y5_N26
--register power-up is low

currCount[8] = DFFEAS(A1L58, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[18] is currCount[18] at FF_X61_Y5_N55
--register power-up is low

currCount[18] = DFFEAS(A1L62, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[21] is currCount[21] at FF_X61_Y4_N5
--register power-up is low

currCount[21] = DFFEAS(A1L66, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[20] is currCount[20] at FF_X61_Y4_N1
--register power-up is low

currCount[20] = DFFEAS(A1L70, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[19] is currCount[19] at FF_X61_Y5_N58
--register power-up is low

currCount[19] = DFFEAS(A1L74, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[17] is currCount[17] at FF_X61_Y5_N52
--register power-up is low

currCount[17] = DFFEAS(A1L78, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[16] is currCount[16] at FF_X61_Y5_N50
--register power-up is low

currCount[16] = DFFEAS(A1L82, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[15] is currCount[15] at FF_X61_Y5_N47
--register power-up is low

currCount[15] = DFFEAS(A1L86, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[25] is currCount[25] at FF_X61_Y4_N17
--register power-up is low

currCount[25] = DFFEAS(A1L90, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[28] is currCount[28] at FF_X61_Y4_N26
--register power-up is low

currCount[28] = DFFEAS(A1L94, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[27] is currCount[27] at FF_X61_Y4_N23
--register power-up is low

currCount[27] = DFFEAS(A1L98, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[26] is currCount[26] at FF_X61_Y4_N19
--register power-up is low

currCount[26] = DFFEAS(A1L102, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[24] is currCount[24] at FF_X61_Y4_N14
--register power-up is low

currCount[24] = DFFEAS(A1L106, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[23] is currCount[23] at FF_X61_Y4_N11
--register power-up is low

currCount[23] = DFFEAS(A1L110, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[22] is currCount[22] at FF_X61_Y4_N8
--register power-up is low

currCount[22] = DFFEAS(A1L114, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[31] is currCount[31] at FF_X61_Y4_N34
--register power-up is low

currCount[31] = DFFEAS(A1L118, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[30] is currCount[30] at FF_X61_Y4_N31
--register power-up is low

currCount[30] = DFFEAS(A1L122, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--currCount[29] is currCount[29] at FF_X61_Y4_N28
--register power-up is low

currCount[29] = DFFEAS(A1L126, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L130 is Add1~1 at MLABCELL_X59_Y7_N21
A1L130_adder_eqn = ( angleCount[7] ) + ( GND ) + ( A1L135 );
A1L130 = SUM(A1L130_adder_eqn);

--A1L131 is Add1~2 at MLABCELL_X59_Y7_N21
A1L131_adder_eqn = ( angleCount[7] ) + ( GND ) + ( A1L135 );
A1L131 = CARRY(A1L131_adder_eqn);


--A1L258 is Add2~1 at LABCELL_X61_Y7_N21
A1L258_adder_eqn = ( angleCount[7] ) + ( VCC ) + ( A1L263 );
A1L258 = SUM(A1L258_adder_eqn);

--A1L259 is Add2~2 at LABCELL_X61_Y7_N21
A1L259_adder_eqn = ( angleCount[7] ) + ( VCC ) + ( A1L263 );
A1L259 = CARRY(A1L259_adder_eqn);


--A1L2 is Add0~1 at LABCELL_X61_Y5_N21
A1L2_adder_eqn = ( currCount[7] ) + ( GND ) + ( A1L7 );
A1L2 = SUM(A1L2_adder_eqn);

--A1L3 is Add0~2 at LABCELL_X61_Y5_N21
A1L3_adder_eqn = ( currCount[7] ) + ( GND ) + ( A1L7 );
A1L3 = CARRY(A1L3_adder_eqn);


--A1L134 is Add1~5 at MLABCELL_X59_Y7_N18
A1L134_adder_eqn = ( angleCount[6] ) + ( GND ) + ( A1L139 );
A1L134 = SUM(A1L134_adder_eqn);

--A1L135 is Add1~6 at MLABCELL_X59_Y7_N18
A1L135_adder_eqn = ( angleCount[6] ) + ( GND ) + ( A1L139 );
A1L135 = CARRY(A1L135_adder_eqn);


--A1L262 is Add2~5 at LABCELL_X61_Y7_N18
A1L262_adder_eqn = ( angleCount[6] ) + ( VCC ) + ( A1L267 );
A1L262 = SUM(A1L262_adder_eqn);

--A1L263 is Add2~6 at LABCELL_X61_Y7_N18
A1L263_adder_eqn = ( angleCount[6] ) + ( VCC ) + ( A1L267 );
A1L263 = CARRY(A1L263_adder_eqn);


--A1L6 is Add0~5 at LABCELL_X61_Y5_N18
A1L6_adder_eqn = ( currCount[6] ) + ( GND ) + ( A1L11 );
A1L6 = SUM(A1L6_adder_eqn);

--A1L7 is Add0~6 at LABCELL_X61_Y5_N18
A1L7_adder_eqn = ( currCount[6] ) + ( GND ) + ( A1L11 );
A1L7 = CARRY(A1L7_adder_eqn);


--A1L138 is Add1~9 at MLABCELL_X59_Y7_N15
A1L138_adder_eqn = ( angleCount[5] ) + ( GND ) + ( A1L143 );
A1L138 = SUM(A1L138_adder_eqn);

--A1L139 is Add1~10 at MLABCELL_X59_Y7_N15
A1L139_adder_eqn = ( angleCount[5] ) + ( GND ) + ( A1L143 );
A1L139 = CARRY(A1L139_adder_eqn);


--A1L266 is Add2~9 at LABCELL_X61_Y7_N15
A1L266_adder_eqn = ( angleCount[5] ) + ( VCC ) + ( A1L271 );
A1L266 = SUM(A1L266_adder_eqn);

--A1L267 is Add2~10 at LABCELL_X61_Y7_N15
A1L267_adder_eqn = ( angleCount[5] ) + ( VCC ) + ( A1L271 );
A1L267 = CARRY(A1L267_adder_eqn);


--A1L10 is Add0~9 at LABCELL_X61_Y5_N15
A1L10_adder_eqn = ( currCount[5] ) + ( GND ) + ( A1L15 );
A1L10 = SUM(A1L10_adder_eqn);

--A1L11 is Add0~10 at LABCELL_X61_Y5_N15
A1L11_adder_eqn = ( currCount[5] ) + ( GND ) + ( A1L15 );
A1L11 = CARRY(A1L11_adder_eqn);


--A1L142 is Add1~13 at MLABCELL_X59_Y7_N12
A1L142_adder_eqn = ( angleCount[4] ) + ( GND ) + ( A1L155 );
A1L142 = SUM(A1L142_adder_eqn);

--A1L143 is Add1~14 at MLABCELL_X59_Y7_N12
A1L143_adder_eqn = ( angleCount[4] ) + ( GND ) + ( A1L155 );
A1L143 = CARRY(A1L143_adder_eqn);


--A1L270 is Add2~13 at LABCELL_X61_Y7_N12
A1L270_adder_eqn = ( angleCount[4] ) + ( VCC ) + ( A1L283 );
A1L270 = SUM(A1L270_adder_eqn);

--A1L271 is Add2~14 at LABCELL_X61_Y7_N12
A1L271_adder_eqn = ( angleCount[4] ) + ( VCC ) + ( A1L283 );
A1L271 = CARRY(A1L271_adder_eqn);


--A1L14 is Add0~13 at LABCELL_X61_Y5_N12
A1L14_adder_eqn = ( currCount[4] ) + ( GND ) + ( A1L27 );
A1L14 = SUM(A1L14_adder_eqn);

--A1L15 is Add0~14 at LABCELL_X61_Y5_N12
A1L15_adder_eqn = ( currCount[4] ) + ( GND ) + ( A1L27 );
A1L15 = CARRY(A1L15_adder_eqn);


--A1L146 is Add1~17 at MLABCELL_X59_Y7_N3
A1L146_adder_eqn = ( angleCount[1] ) + ( GND ) + ( A1L151 );
A1L146 = SUM(A1L146_adder_eqn);

--A1L147 is Add1~18 at MLABCELL_X59_Y7_N3
A1L147_adder_eqn = ( angleCount[1] ) + ( GND ) + ( A1L151 );
A1L147 = CARRY(A1L147_adder_eqn);


--A1L274 is Add2~17 at LABCELL_X61_Y7_N3
A1L274_adder_eqn = ( angleCount[1] ) + ( VCC ) + ( A1L279 );
A1L274 = SUM(A1L274_adder_eqn);

--A1L275 is Add2~18 at LABCELL_X61_Y7_N3
A1L275_adder_eqn = ( angleCount[1] ) + ( VCC ) + ( A1L279 );
A1L275 = CARRY(A1L275_adder_eqn);


--A1L18 is Add0~17 at LABCELL_X61_Y5_N3
A1L18_adder_eqn = ( currCount[1] ) + ( GND ) + ( A1L23 );
A1L18 = SUM(A1L18_adder_eqn);

--A1L19 is Add0~18 at LABCELL_X61_Y5_N3
A1L19_adder_eqn = ( currCount[1] ) + ( GND ) + ( A1L23 );
A1L19 = CARRY(A1L19_adder_eqn);


--A1L150 is Add1~21 at MLABCELL_X59_Y7_N0
A1L150_adder_eqn = ( angleCount[0] ) + ( VCC ) + ( !VCC );
A1L150 = SUM(A1L150_adder_eqn);

--A1L151 is Add1~22 at MLABCELL_X59_Y7_N0
A1L151_adder_eqn = ( angleCount[0] ) + ( VCC ) + ( !VCC );
A1L151 = CARRY(A1L151_adder_eqn);


--A1L278 is Add2~21 at LABCELL_X61_Y7_N0
A1L278_adder_eqn = ( angleCount[0] ) + ( VCC ) + ( !VCC );
A1L278 = SUM(A1L278_adder_eqn);

--A1L279 is Add2~22 at LABCELL_X61_Y7_N0
A1L279_adder_eqn = ( angleCount[0] ) + ( VCC ) + ( !VCC );
A1L279 = CARRY(A1L279_adder_eqn);


--A1L22 is Add0~21 at LABCELL_X61_Y5_N0
A1L22_adder_eqn = ( A1L429Q ) + ( VCC ) + ( !VCC );
A1L22 = SUM(A1L22_adder_eqn);

--A1L23 is Add0~22 at LABCELL_X61_Y5_N0
A1L23_adder_eqn = ( A1L429Q ) + ( VCC ) + ( !VCC );
A1L23 = CARRY(A1L23_adder_eqn);


--A1L154 is Add1~25 at MLABCELL_X59_Y7_N9
A1L154_adder_eqn = ( angleCount[3] ) + ( GND ) + ( A1L159 );
A1L154 = SUM(A1L154_adder_eqn);

--A1L155 is Add1~26 at MLABCELL_X59_Y7_N9
A1L155_adder_eqn = ( angleCount[3] ) + ( GND ) + ( A1L159 );
A1L155 = CARRY(A1L155_adder_eqn);


--A1L282 is Add2~25 at LABCELL_X61_Y7_N9
A1L282_adder_eqn = ( angleCount[3] ) + ( VCC ) + ( A1L287 );
A1L282 = SUM(A1L282_adder_eqn);

--A1L283 is Add2~26 at LABCELL_X61_Y7_N9
A1L283_adder_eqn = ( angleCount[3] ) + ( VCC ) + ( A1L287 );
A1L283 = CARRY(A1L283_adder_eqn);


--A1L26 is Add0~25 at LABCELL_X61_Y5_N9
A1L26_adder_eqn = ( currCount[3] ) + ( GND ) + ( A1L31 );
A1L26 = SUM(A1L26_adder_eqn);

--A1L27 is Add0~26 at LABCELL_X61_Y5_N9
A1L27_adder_eqn = ( currCount[3] ) + ( GND ) + ( A1L31 );
A1L27 = CARRY(A1L27_adder_eqn);


--A1L158 is Add1~29 at MLABCELL_X59_Y7_N6
A1L158_adder_eqn = ( angleCount[2] ) + ( GND ) + ( A1L147 );
A1L158 = SUM(A1L158_adder_eqn);

--A1L159 is Add1~30 at MLABCELL_X59_Y7_N6
A1L159_adder_eqn = ( angleCount[2] ) + ( GND ) + ( A1L147 );
A1L159 = CARRY(A1L159_adder_eqn);


--A1L286 is Add2~29 at LABCELL_X61_Y7_N6
A1L286_adder_eqn = ( angleCount[2] ) + ( VCC ) + ( A1L275 );
A1L286 = SUM(A1L286_adder_eqn);

--A1L287 is Add2~30 at LABCELL_X61_Y7_N6
A1L287_adder_eqn = ( angleCount[2] ) + ( VCC ) + ( A1L275 );
A1L287 = CARRY(A1L287_adder_eqn);


--A1L30 is Add0~29 at LABCELL_X61_Y5_N6
A1L30_adder_eqn = ( A1L432Q ) + ( GND ) + ( A1L19 );
A1L30 = SUM(A1L30_adder_eqn);

--A1L31 is Add0~30 at LABCELL_X61_Y5_N6
A1L31_adder_eqn = ( A1L432Q ) + ( GND ) + ( A1L19 );
A1L31 = CARRY(A1L31_adder_eqn);


--A1L162 is Add1~33 at MLABCELL_X59_Y7_N42
A1L162_adder_eqn = ( angleCount[14] ) + ( GND ) + ( A1L167 );
A1L162 = SUM(A1L162_adder_eqn);

--A1L163 is Add1~34 at MLABCELL_X59_Y7_N42
A1L163_adder_eqn = ( angleCount[14] ) + ( GND ) + ( A1L167 );
A1L163 = CARRY(A1L163_adder_eqn);


--A1L290 is Add2~33 at LABCELL_X61_Y7_N42
A1L290_adder_eqn = ( angleCount[14] ) + ( VCC ) + ( A1L295 );
A1L290 = SUM(A1L290_adder_eqn);

--A1L291 is Add2~34 at LABCELL_X61_Y7_N42
A1L291_adder_eqn = ( angleCount[14] ) + ( VCC ) + ( A1L295 );
A1L291 = CARRY(A1L291_adder_eqn);


--A1L34 is Add0~33 at LABCELL_X61_Y5_N42
A1L34_adder_eqn = ( currCount[14] ) + ( GND ) + ( A1L39 );
A1L34 = SUM(A1L34_adder_eqn);

--A1L35 is Add0~34 at LABCELL_X61_Y5_N42
A1L35_adder_eqn = ( currCount[14] ) + ( GND ) + ( A1L39 );
A1L35 = CARRY(A1L35_adder_eqn);


--A1L166 is Add1~37 at MLABCELL_X59_Y7_N39
A1L166_adder_eqn = ( angleCount[13] ) + ( GND ) + ( A1L171 );
A1L166 = SUM(A1L166_adder_eqn);

--A1L167 is Add1~38 at MLABCELL_X59_Y7_N39
A1L167_adder_eqn = ( angleCount[13] ) + ( GND ) + ( A1L171 );
A1L167 = CARRY(A1L167_adder_eqn);


--A1L294 is Add2~37 at LABCELL_X61_Y7_N39
A1L294_adder_eqn = ( angleCount[13] ) + ( VCC ) + ( A1L299 );
A1L294 = SUM(A1L294_adder_eqn);

--A1L295 is Add2~38 at LABCELL_X61_Y7_N39
A1L295_adder_eqn = ( angleCount[13] ) + ( VCC ) + ( A1L299 );
A1L295 = CARRY(A1L295_adder_eqn);


--A1L38 is Add0~37 at LABCELL_X61_Y5_N39
A1L38_adder_eqn = ( currCount[13] ) + ( GND ) + ( A1L43 );
A1L38 = SUM(A1L38_adder_eqn);

--A1L39 is Add0~38 at LABCELL_X61_Y5_N39
A1L39_adder_eqn = ( currCount[13] ) + ( GND ) + ( A1L43 );
A1L39 = CARRY(A1L39_adder_eqn);


--A1L170 is Add1~41 at MLABCELL_X59_Y7_N36
A1L170_adder_eqn = ( angleCount[12] ) + ( GND ) + ( A1L175 );
A1L170 = SUM(A1L170_adder_eqn);

--A1L171 is Add1~42 at MLABCELL_X59_Y7_N36
A1L171_adder_eqn = ( angleCount[12] ) + ( GND ) + ( A1L175 );
A1L171 = CARRY(A1L171_adder_eqn);


--A1L298 is Add2~41 at LABCELL_X61_Y7_N36
A1L298_adder_eqn = ( angleCount[12] ) + ( VCC ) + ( A1L303 );
A1L298 = SUM(A1L298_adder_eqn);

--A1L299 is Add2~42 at LABCELL_X61_Y7_N36
A1L299_adder_eqn = ( angleCount[12] ) + ( VCC ) + ( A1L303 );
A1L299 = CARRY(A1L299_adder_eqn);


--A1L42 is Add0~41 at LABCELL_X61_Y5_N36
A1L42_adder_eqn = ( currCount[12] ) + ( GND ) + ( A1L47 );
A1L42 = SUM(A1L42_adder_eqn);

--A1L43 is Add0~42 at LABCELL_X61_Y5_N36
A1L43_adder_eqn = ( currCount[12] ) + ( GND ) + ( A1L47 );
A1L43 = CARRY(A1L43_adder_eqn);


--A1L174 is Add1~45 at MLABCELL_X59_Y7_N33
A1L174_adder_eqn = ( angleCount[11] ) + ( GND ) + ( A1L183 );
A1L174 = SUM(A1L174_adder_eqn);

--A1L175 is Add1~46 at MLABCELL_X59_Y7_N33
A1L175_adder_eqn = ( angleCount[11] ) + ( GND ) + ( A1L183 );
A1L175 = CARRY(A1L175_adder_eqn);


--A1L302 is Add2~45 at LABCELL_X61_Y7_N33
A1L302_adder_eqn = ( angleCount[11] ) + ( VCC ) + ( A1L311 );
A1L302 = SUM(A1L302_adder_eqn);

--A1L303 is Add2~46 at LABCELL_X61_Y7_N33
A1L303_adder_eqn = ( angleCount[11] ) + ( VCC ) + ( A1L311 );
A1L303 = CARRY(A1L303_adder_eqn);


--A1L46 is Add0~45 at LABCELL_X61_Y5_N33
A1L46_adder_eqn = ( A1L448Q ) + ( GND ) + ( A1L55 );
A1L46 = SUM(A1L46_adder_eqn);

--A1L47 is Add0~46 at LABCELL_X61_Y5_N33
A1L47_adder_eqn = ( A1L448Q ) + ( GND ) + ( A1L55 );
A1L47 = CARRY(A1L47_adder_eqn);


--A1L178 is Add1~49 at MLABCELL_X59_Y7_N27
A1L178_adder_eqn = ( angleCount[9] ) + ( GND ) + ( A1L187 );
A1L178 = SUM(A1L178_adder_eqn);

--A1L179 is Add1~50 at MLABCELL_X59_Y7_N27
A1L179_adder_eqn = ( angleCount[9] ) + ( GND ) + ( A1L187 );
A1L179 = CARRY(A1L179_adder_eqn);


--A1L306 is Add2~49 at LABCELL_X61_Y7_N27
A1L306_adder_eqn = ( angleCount[9] ) + ( VCC ) + ( A1L315 );
A1L306 = SUM(A1L306_adder_eqn);

--A1L307 is Add2~50 at LABCELL_X61_Y7_N27
A1L307_adder_eqn = ( angleCount[9] ) + ( VCC ) + ( A1L315 );
A1L307 = CARRY(A1L307_adder_eqn);


--A1L50 is Add0~49 at LABCELL_X61_Y5_N27
A1L50_adder_eqn = ( A1L444Q ) + ( GND ) + ( A1L59 );
A1L50 = SUM(A1L50_adder_eqn);

--A1L51 is Add0~50 at LABCELL_X61_Y5_N27
A1L51_adder_eqn = ( A1L444Q ) + ( GND ) + ( A1L59 );
A1L51 = CARRY(A1L51_adder_eqn);


--A1L182 is Add1~53 at MLABCELL_X59_Y7_N30
A1L182_adder_eqn = ( angleCount[10] ) + ( GND ) + ( A1L179 );
A1L182 = SUM(A1L182_adder_eqn);

--A1L183 is Add1~54 at MLABCELL_X59_Y7_N30
A1L183_adder_eqn = ( angleCount[10] ) + ( GND ) + ( A1L179 );
A1L183 = CARRY(A1L183_adder_eqn);


--A1L310 is Add2~53 at LABCELL_X61_Y7_N30
A1L310_adder_eqn = ( angleCount[10] ) + ( VCC ) + ( A1L307 );
A1L310 = SUM(A1L310_adder_eqn);

--A1L311 is Add2~54 at LABCELL_X61_Y7_N30
A1L311_adder_eqn = ( angleCount[10] ) + ( VCC ) + ( A1L307 );
A1L311 = CARRY(A1L311_adder_eqn);


--A1L54 is Add0~53 at LABCELL_X61_Y5_N30
A1L54_adder_eqn = ( currCount[10] ) + ( GND ) + ( A1L51 );
A1L54 = SUM(A1L54_adder_eqn);

--A1L55 is Add0~54 at LABCELL_X61_Y5_N30
A1L55_adder_eqn = ( currCount[10] ) + ( GND ) + ( A1L51 );
A1L55 = CARRY(A1L55_adder_eqn);


--A1L186 is Add1~57 at MLABCELL_X59_Y7_N24
A1L186_adder_eqn = ( angleCount[8] ) + ( GND ) + ( A1L131 );
A1L186 = SUM(A1L186_adder_eqn);

--A1L187 is Add1~58 at MLABCELL_X59_Y7_N24
A1L187_adder_eqn = ( angleCount[8] ) + ( GND ) + ( A1L131 );
A1L187 = CARRY(A1L187_adder_eqn);


--A1L314 is Add2~57 at LABCELL_X61_Y7_N24
A1L314_adder_eqn = ( angleCount[8] ) + ( VCC ) + ( A1L259 );
A1L314 = SUM(A1L314_adder_eqn);

--A1L315 is Add2~58 at LABCELL_X61_Y7_N24
A1L315_adder_eqn = ( angleCount[8] ) + ( VCC ) + ( A1L259 );
A1L315 = CARRY(A1L315_adder_eqn);


--A1L58 is Add0~57 at LABCELL_X61_Y5_N24
A1L58_adder_eqn = ( currCount[8] ) + ( GND ) + ( A1L3 );
A1L58 = SUM(A1L58_adder_eqn);

--A1L59 is Add0~58 at LABCELL_X61_Y5_N24
A1L59_adder_eqn = ( currCount[8] ) + ( GND ) + ( A1L3 );
A1L59 = CARRY(A1L59_adder_eqn);


--A1L190 is Add1~61 at MLABCELL_X59_Y7_N54
A1L190_adder_eqn = ( angleCount[18] ) + ( GND ) + ( A1L207 );
A1L190 = SUM(A1L190_adder_eqn);

--A1L191 is Add1~62 at MLABCELL_X59_Y7_N54
A1L191_adder_eqn = ( angleCount[18] ) + ( GND ) + ( A1L207 );
A1L191 = CARRY(A1L191_adder_eqn);


--A1L318 is Add2~61 at LABCELL_X61_Y7_N54
A1L318_adder_eqn = ( angleCount[18] ) + ( VCC ) + ( A1L335 );
A1L318 = SUM(A1L318_adder_eqn);

--A1L319 is Add2~62 at LABCELL_X61_Y7_N54
A1L319_adder_eqn = ( angleCount[18] ) + ( VCC ) + ( A1L335 );
A1L319 = CARRY(A1L319_adder_eqn);


--A1L62 is Add0~61 at LABCELL_X61_Y5_N54
A1L62_adder_eqn = ( currCount[18] ) + ( GND ) + ( A1L79 );
A1L62 = SUM(A1L62_adder_eqn);

--A1L63 is Add0~62 at LABCELL_X61_Y5_N54
A1L63_adder_eqn = ( currCount[18] ) + ( GND ) + ( A1L79 );
A1L63 = CARRY(A1L63_adder_eqn);


--A1L194 is Add1~65 at MLABCELL_X59_Y6_N3
A1L194_adder_eqn = ( angleCount[21] ) + ( GND ) + ( A1L199 );
A1L194 = SUM(A1L194_adder_eqn);

--A1L195 is Add1~66 at MLABCELL_X59_Y6_N3
A1L195_adder_eqn = ( angleCount[21] ) + ( GND ) + ( A1L199 );
A1L195 = CARRY(A1L195_adder_eqn);


--A1L322 is Add2~65 at LABCELL_X61_Y6_N3
A1L322_adder_eqn = ( angleCount[21] ) + ( VCC ) + ( A1L327 );
A1L322 = SUM(A1L322_adder_eqn);

--A1L323 is Add2~66 at LABCELL_X61_Y6_N3
A1L323_adder_eqn = ( angleCount[21] ) + ( VCC ) + ( A1L327 );
A1L323 = CARRY(A1L323_adder_eqn);


--A1L66 is Add0~65 at LABCELL_X61_Y4_N3
A1L66_adder_eqn = ( currCount[21] ) + ( GND ) + ( A1L71 );
A1L66 = SUM(A1L66_adder_eqn);

--A1L67 is Add0~66 at LABCELL_X61_Y4_N3
A1L67_adder_eqn = ( currCount[21] ) + ( GND ) + ( A1L71 );
A1L67 = CARRY(A1L67_adder_eqn);


--A1L198 is Add1~69 at MLABCELL_X59_Y6_N0
A1L198_adder_eqn = ( angleCount[20] ) + ( GND ) + ( A1L203 );
A1L198 = SUM(A1L198_adder_eqn);

--A1L199 is Add1~70 at MLABCELL_X59_Y6_N0
A1L199_adder_eqn = ( angleCount[20] ) + ( GND ) + ( A1L203 );
A1L199 = CARRY(A1L199_adder_eqn);


--A1L326 is Add2~69 at LABCELL_X61_Y6_N0
A1L326_adder_eqn = ( angleCount[20] ) + ( VCC ) + ( A1L331 );
A1L326 = SUM(A1L326_adder_eqn);

--A1L327 is Add2~70 at LABCELL_X61_Y6_N0
A1L327_adder_eqn = ( angleCount[20] ) + ( VCC ) + ( A1L331 );
A1L327 = CARRY(A1L327_adder_eqn);


--A1L70 is Add0~69 at LABCELL_X61_Y4_N0
A1L70_adder_eqn = ( currCount[20] ) + ( GND ) + ( A1L75 );
A1L70 = SUM(A1L70_adder_eqn);

--A1L71 is Add0~70 at LABCELL_X61_Y4_N0
A1L71_adder_eqn = ( currCount[20] ) + ( GND ) + ( A1L75 );
A1L71 = CARRY(A1L71_adder_eqn);


--A1L202 is Add1~73 at MLABCELL_X59_Y7_N57
A1L202_adder_eqn = ( angleCount[19] ) + ( GND ) + ( A1L191 );
A1L202 = SUM(A1L202_adder_eqn);

--A1L203 is Add1~74 at MLABCELL_X59_Y7_N57
A1L203_adder_eqn = ( angleCount[19] ) + ( GND ) + ( A1L191 );
A1L203 = CARRY(A1L203_adder_eqn);


--A1L330 is Add2~73 at LABCELL_X61_Y7_N57
A1L330_adder_eqn = ( angleCount[19] ) + ( VCC ) + ( A1L319 );
A1L330 = SUM(A1L330_adder_eqn);

--A1L331 is Add2~74 at LABCELL_X61_Y7_N57
A1L331_adder_eqn = ( angleCount[19] ) + ( VCC ) + ( A1L319 );
A1L331 = CARRY(A1L331_adder_eqn);


--A1L74 is Add0~73 at LABCELL_X61_Y5_N57
A1L74_adder_eqn = ( A1L461Q ) + ( GND ) + ( A1L63 );
A1L74 = SUM(A1L74_adder_eqn);

--A1L75 is Add0~74 at LABCELL_X61_Y5_N57
A1L75_adder_eqn = ( A1L461Q ) + ( GND ) + ( A1L63 );
A1L75 = CARRY(A1L75_adder_eqn);


--A1L206 is Add1~77 at MLABCELL_X59_Y7_N51
A1L206_adder_eqn = ( angleCount[17] ) + ( GND ) + ( A1L211 );
A1L206 = SUM(A1L206_adder_eqn);

--A1L207 is Add1~78 at MLABCELL_X59_Y7_N51
A1L207_adder_eqn = ( angleCount[17] ) + ( GND ) + ( A1L211 );
A1L207 = CARRY(A1L207_adder_eqn);


--A1L334 is Add2~77 at LABCELL_X61_Y7_N51
A1L334_adder_eqn = ( angleCount[17] ) + ( VCC ) + ( A1L339 );
A1L334 = SUM(A1L334_adder_eqn);

--A1L335 is Add2~78 at LABCELL_X61_Y7_N51
A1L335_adder_eqn = ( angleCount[17] ) + ( VCC ) + ( A1L339 );
A1L335 = CARRY(A1L335_adder_eqn);


--A1L78 is Add0~77 at LABCELL_X61_Y5_N51
A1L78_adder_eqn = ( currCount[17] ) + ( GND ) + ( A1L83 );
A1L78 = SUM(A1L78_adder_eqn);

--A1L79 is Add0~78 at LABCELL_X61_Y5_N51
A1L79_adder_eqn = ( currCount[17] ) + ( GND ) + ( A1L83 );
A1L79 = CARRY(A1L79_adder_eqn);


--A1L210 is Add1~81 at MLABCELL_X59_Y7_N48
A1L210_adder_eqn = ( angleCount[16] ) + ( GND ) + ( A1L215 );
A1L210 = SUM(A1L210_adder_eqn);

--A1L211 is Add1~82 at MLABCELL_X59_Y7_N48
A1L211_adder_eqn = ( angleCount[16] ) + ( GND ) + ( A1L215 );
A1L211 = CARRY(A1L211_adder_eqn);


--A1L338 is Add2~81 at LABCELL_X61_Y7_N48
A1L338_adder_eqn = ( angleCount[16] ) + ( VCC ) + ( A1L343 );
A1L338 = SUM(A1L338_adder_eqn);

--A1L339 is Add2~82 at LABCELL_X61_Y7_N48
A1L339_adder_eqn = ( angleCount[16] ) + ( VCC ) + ( A1L343 );
A1L339 = CARRY(A1L339_adder_eqn);


--A1L82 is Add0~81 at LABCELL_X61_Y5_N48
A1L82_adder_eqn = ( currCount[16] ) + ( GND ) + ( A1L87 );
A1L82 = SUM(A1L82_adder_eqn);

--A1L83 is Add0~82 at LABCELL_X61_Y5_N48
A1L83_adder_eqn = ( currCount[16] ) + ( GND ) + ( A1L87 );
A1L83 = CARRY(A1L83_adder_eqn);


--A1L214 is Add1~85 at MLABCELL_X59_Y7_N45
A1L214_adder_eqn = ( angleCount[15] ) + ( GND ) + ( A1L163 );
A1L214 = SUM(A1L214_adder_eqn);

--A1L215 is Add1~86 at MLABCELL_X59_Y7_N45
A1L215_adder_eqn = ( angleCount[15] ) + ( GND ) + ( A1L163 );
A1L215 = CARRY(A1L215_adder_eqn);


--A1L342 is Add2~85 at LABCELL_X61_Y7_N45
A1L342_adder_eqn = ( angleCount[15] ) + ( VCC ) + ( A1L291 );
A1L342 = SUM(A1L342_adder_eqn);

--A1L343 is Add2~86 at LABCELL_X61_Y7_N45
A1L343_adder_eqn = ( angleCount[15] ) + ( VCC ) + ( A1L291 );
A1L343 = CARRY(A1L343_adder_eqn);


--A1L86 is Add0~85 at LABCELL_X61_Y5_N45
A1L86_adder_eqn = ( currCount[15] ) + ( GND ) + ( A1L35 );
A1L86 = SUM(A1L86_adder_eqn);

--A1L87 is Add0~86 at LABCELL_X61_Y5_N45
A1L87_adder_eqn = ( currCount[15] ) + ( GND ) + ( A1L35 );
A1L87 = CARRY(A1L87_adder_eqn);


--A1L218 is Add1~89 at MLABCELL_X59_Y6_N15
A1L218_adder_eqn = ( angleCount[25] ) + ( GND ) + ( A1L235 );
A1L218 = SUM(A1L218_adder_eqn);

--A1L219 is Add1~90 at MLABCELL_X59_Y6_N15
A1L219_adder_eqn = ( angleCount[25] ) + ( GND ) + ( A1L235 );
A1L219 = CARRY(A1L219_adder_eqn);


--A1L346 is Add2~89 at LABCELL_X61_Y6_N15
A1L346_adder_eqn = ( angleCount[25] ) + ( VCC ) + ( A1L363 );
A1L346 = SUM(A1L346_adder_eqn);

--A1L347 is Add2~90 at LABCELL_X61_Y6_N15
A1L347_adder_eqn = ( angleCount[25] ) + ( VCC ) + ( A1L363 );
A1L347 = CARRY(A1L347_adder_eqn);


--A1L90 is Add0~89 at LABCELL_X61_Y4_N15
A1L90_adder_eqn = ( currCount[25] ) + ( GND ) + ( A1L107 );
A1L90 = SUM(A1L90_adder_eqn);

--A1L91 is Add0~90 at LABCELL_X61_Y4_N15
A1L91_adder_eqn = ( currCount[25] ) + ( GND ) + ( A1L107 );
A1L91 = CARRY(A1L91_adder_eqn);


--A1L222 is Add1~93 at MLABCELL_X59_Y6_N24
A1L222_adder_eqn = ( angleCount[28] ) + ( GND ) + ( A1L227 );
A1L222 = SUM(A1L222_adder_eqn);

--A1L223 is Add1~94 at MLABCELL_X59_Y6_N24
A1L223_adder_eqn = ( angleCount[28] ) + ( GND ) + ( A1L227 );
A1L223 = CARRY(A1L223_adder_eqn);


--A1L350 is Add2~93 at LABCELL_X61_Y6_N24
A1L350_adder_eqn = ( angleCount[28] ) + ( VCC ) + ( A1L355 );
A1L350 = SUM(A1L350_adder_eqn);

--A1L351 is Add2~94 at LABCELL_X61_Y6_N24
A1L351_adder_eqn = ( angleCount[28] ) + ( VCC ) + ( A1L355 );
A1L351 = CARRY(A1L351_adder_eqn);


--A1L94 is Add0~93 at LABCELL_X61_Y4_N24
A1L94_adder_eqn = ( currCount[28] ) + ( GND ) + ( A1L99 );
A1L94 = SUM(A1L94_adder_eqn);

--A1L95 is Add0~94 at LABCELL_X61_Y4_N24
A1L95_adder_eqn = ( currCount[28] ) + ( GND ) + ( A1L99 );
A1L95 = CARRY(A1L95_adder_eqn);


--A1L226 is Add1~97 at MLABCELL_X59_Y6_N21
A1L226_adder_eqn = ( angleCount[27] ) + ( GND ) + ( A1L231 );
A1L226 = SUM(A1L226_adder_eqn);

--A1L227 is Add1~98 at MLABCELL_X59_Y6_N21
A1L227_adder_eqn = ( angleCount[27] ) + ( GND ) + ( A1L231 );
A1L227 = CARRY(A1L227_adder_eqn);


--A1L354 is Add2~97 at LABCELL_X61_Y6_N21
A1L354_adder_eqn = ( angleCount[27] ) + ( VCC ) + ( A1L359 );
A1L354 = SUM(A1L354_adder_eqn);

--A1L355 is Add2~98 at LABCELL_X61_Y6_N21
A1L355_adder_eqn = ( angleCount[27] ) + ( VCC ) + ( A1L359 );
A1L355 = CARRY(A1L355_adder_eqn);


--A1L98 is Add0~97 at LABCELL_X61_Y4_N21
A1L98_adder_eqn = ( currCount[27] ) + ( GND ) + ( A1L103 );
A1L98 = SUM(A1L98_adder_eqn);

--A1L99 is Add0~98 at LABCELL_X61_Y4_N21
A1L99_adder_eqn = ( currCount[27] ) + ( GND ) + ( A1L103 );
A1L99 = CARRY(A1L99_adder_eqn);


--A1L230 is Add1~101 at MLABCELL_X59_Y6_N18
A1L230_adder_eqn = ( angleCount[26] ) + ( GND ) + ( A1L219 );
A1L230 = SUM(A1L230_adder_eqn);

--A1L231 is Add1~102 at MLABCELL_X59_Y6_N18
A1L231_adder_eqn = ( angleCount[26] ) + ( GND ) + ( A1L219 );
A1L231 = CARRY(A1L231_adder_eqn);


--A1L358 is Add2~101 at LABCELL_X61_Y6_N18
A1L358_adder_eqn = ( angleCount[26] ) + ( VCC ) + ( A1L347 );
A1L358 = SUM(A1L358_adder_eqn);

--A1L359 is Add2~102 at LABCELL_X61_Y6_N18
A1L359_adder_eqn = ( angleCount[26] ) + ( VCC ) + ( A1L347 );
A1L359 = CARRY(A1L359_adder_eqn);


--A1L102 is Add0~101 at LABCELL_X61_Y4_N18
A1L102_adder_eqn = ( A1L470Q ) + ( GND ) + ( A1L91 );
A1L102 = SUM(A1L102_adder_eqn);

--A1L103 is Add0~102 at LABCELL_X61_Y4_N18
A1L103_adder_eqn = ( A1L470Q ) + ( GND ) + ( A1L91 );
A1L103 = CARRY(A1L103_adder_eqn);


--A1L234 is Add1~105 at MLABCELL_X59_Y6_N12
A1L234_adder_eqn = ( angleCount[24] ) + ( GND ) + ( A1L239 );
A1L234 = SUM(A1L234_adder_eqn);

--A1L235 is Add1~106 at MLABCELL_X59_Y6_N12
A1L235_adder_eqn = ( angleCount[24] ) + ( GND ) + ( A1L239 );
A1L235 = CARRY(A1L235_adder_eqn);


--A1L362 is Add2~105 at LABCELL_X61_Y6_N12
A1L362_adder_eqn = ( angleCount[24] ) + ( VCC ) + ( A1L367 );
A1L362 = SUM(A1L362_adder_eqn);

--A1L363 is Add2~106 at LABCELL_X61_Y6_N12
A1L363_adder_eqn = ( angleCount[24] ) + ( VCC ) + ( A1L367 );
A1L363 = CARRY(A1L363_adder_eqn);


--A1L106 is Add0~105 at LABCELL_X61_Y4_N12
A1L106_adder_eqn = ( currCount[24] ) + ( GND ) + ( A1L111 );
A1L106 = SUM(A1L106_adder_eqn);

--A1L107 is Add0~106 at LABCELL_X61_Y4_N12
A1L107_adder_eqn = ( currCount[24] ) + ( GND ) + ( A1L111 );
A1L107 = CARRY(A1L107_adder_eqn);


--A1L238 is Add1~109 at MLABCELL_X59_Y6_N9
A1L238_adder_eqn = ( angleCount[23] ) + ( GND ) + ( A1L243 );
A1L238 = SUM(A1L238_adder_eqn);

--A1L239 is Add1~110 at MLABCELL_X59_Y6_N9
A1L239_adder_eqn = ( angleCount[23] ) + ( GND ) + ( A1L243 );
A1L239 = CARRY(A1L239_adder_eqn);


--A1L366 is Add2~109 at LABCELL_X61_Y6_N9
A1L366_adder_eqn = ( angleCount[23] ) + ( VCC ) + ( A1L371 );
A1L366 = SUM(A1L366_adder_eqn);

--A1L367 is Add2~110 at LABCELL_X61_Y6_N9
A1L367_adder_eqn = ( angleCount[23] ) + ( VCC ) + ( A1L371 );
A1L367 = CARRY(A1L367_adder_eqn);


--A1L110 is Add0~109 at LABCELL_X61_Y4_N9
A1L110_adder_eqn = ( currCount[23] ) + ( GND ) + ( A1L115 );
A1L110 = SUM(A1L110_adder_eqn);

--A1L111 is Add0~110 at LABCELL_X61_Y4_N9
A1L111_adder_eqn = ( currCount[23] ) + ( GND ) + ( A1L115 );
A1L111 = CARRY(A1L111_adder_eqn);


--A1L242 is Add1~113 at MLABCELL_X59_Y6_N6
A1L242_adder_eqn = ( angleCount[22] ) + ( GND ) + ( A1L195 );
A1L242 = SUM(A1L242_adder_eqn);

--A1L243 is Add1~114 at MLABCELL_X59_Y6_N6
A1L243_adder_eqn = ( angleCount[22] ) + ( GND ) + ( A1L195 );
A1L243 = CARRY(A1L243_adder_eqn);


--A1L370 is Add2~113 at LABCELL_X61_Y6_N6
A1L370_adder_eqn = ( angleCount[22] ) + ( VCC ) + ( A1L323 );
A1L370 = SUM(A1L370_adder_eqn);

--A1L371 is Add2~114 at LABCELL_X61_Y6_N6
A1L371_adder_eqn = ( angleCount[22] ) + ( VCC ) + ( A1L323 );
A1L371 = CARRY(A1L371_adder_eqn);


--A1L114 is Add0~113 at LABCELL_X61_Y4_N6
A1L114_adder_eqn = ( currCount[22] ) + ( GND ) + ( A1L67 );
A1L114 = SUM(A1L114_adder_eqn);

--A1L115 is Add0~114 at LABCELL_X61_Y4_N6
A1L115_adder_eqn = ( currCount[22] ) + ( GND ) + ( A1L67 );
A1L115 = CARRY(A1L115_adder_eqn);


--A1L246 is Add1~117 at MLABCELL_X59_Y6_N33
A1L246_adder_eqn = ( angleCount[31] ) + ( GND ) + ( A1L251 );
A1L246 = SUM(A1L246_adder_eqn);


--A1L374 is Add2~117 at LABCELL_X61_Y6_N33
A1L374_adder_eqn = ( angleCount[31] ) + ( VCC ) + ( A1L379 );
A1L374 = SUM(A1L374_adder_eqn);


--A1L118 is Add0~117 at LABCELL_X61_Y4_N33
A1L118_adder_eqn = ( currCount[31] ) + ( GND ) + ( A1L123 );
A1L118 = SUM(A1L118_adder_eqn);


--A1L250 is Add1~121 at MLABCELL_X59_Y6_N30
A1L250_adder_eqn = ( angleCount[30] ) + ( GND ) + ( A1L255 );
A1L250 = SUM(A1L250_adder_eqn);

--A1L251 is Add1~122 at MLABCELL_X59_Y6_N30
A1L251_adder_eqn = ( angleCount[30] ) + ( GND ) + ( A1L255 );
A1L251 = CARRY(A1L251_adder_eqn);


--A1L378 is Add2~121 at LABCELL_X61_Y6_N30
A1L378_adder_eqn = ( angleCount[30] ) + ( VCC ) + ( A1L383 );
A1L378 = SUM(A1L378_adder_eqn);

--A1L379 is Add2~122 at LABCELL_X61_Y6_N30
A1L379_adder_eqn = ( angleCount[30] ) + ( VCC ) + ( A1L383 );
A1L379 = CARRY(A1L379_adder_eqn);


--A1L122 is Add0~121 at LABCELL_X61_Y4_N30
A1L122_adder_eqn = ( currCount[30] ) + ( GND ) + ( A1L127 );
A1L122 = SUM(A1L122_adder_eqn);

--A1L123 is Add0~122 at LABCELL_X61_Y4_N30
A1L123_adder_eqn = ( currCount[30] ) + ( GND ) + ( A1L127 );
A1L123 = CARRY(A1L123_adder_eqn);


--A1L254 is Add1~125 at MLABCELL_X59_Y6_N27
A1L254_adder_eqn = ( angleCount[29] ) + ( GND ) + ( A1L223 );
A1L254 = SUM(A1L254_adder_eqn);

--A1L255 is Add1~126 at MLABCELL_X59_Y6_N27
A1L255_adder_eqn = ( angleCount[29] ) + ( GND ) + ( A1L223 );
A1L255 = CARRY(A1L255_adder_eqn);


--A1L382 is Add2~125 at LABCELL_X61_Y6_N27
A1L382_adder_eqn = ( angleCount[29] ) + ( VCC ) + ( A1L351 );
A1L382 = SUM(A1L382_adder_eqn);

--A1L383 is Add2~126 at LABCELL_X61_Y6_N27
A1L383_adder_eqn = ( angleCount[29] ) + ( VCC ) + ( A1L351 );
A1L383 = CARRY(A1L383_adder_eqn);


--A1L126 is Add0~125 at LABCELL_X61_Y4_N27
A1L126_adder_eqn = ( currCount[29] ) + ( GND ) + ( A1L95 );
A1L126 = SUM(A1L126_adder_eqn);

--A1L127 is Add0~126 at LABCELL_X61_Y4_N27
A1L127_adder_eqn = ( currCount[29] ) + ( GND ) + ( A1L95 );
A1L127 = CARRY(A1L127_adder_eqn);


--out_wave is out_wave at FF_X61_Y6_N40
--register power-up is low

out_wave = DFFEAS(A1L691, GLOBAL(A1L426),  ,  ,  ,  ,  ,  ,  );


--A1L483Q is irq~reg0 at FF_X56_Y6_N53
--register power-up is low

A1L483Q = DFFEAS(A1L819, GLOBAL(A1L426),  ,  , A1L786,  ,  ,  ,  );


--current_state.INT_RIGHT is current_state.INT_RIGHT at FF_X57_Y5_N5
--register power-up is low

current_state.INT_RIGHT = DFFEAS( , GLOBAL(A1L426), A1L786,  ,  , next_state.INT_RIGHT,  ,  , VCC);


--current_state.INT_LEFT is current_state.INT_LEFT at FF_X57_Y5_N59
--register power-up is low

current_state.INT_LEFT = DFFEAS( , GLOBAL(A1L426), A1L786,  ,  , next_state.INT_LEFT,  ,  , VCC);


--angleCount[7] is angleCount[7] at FF_X60_Y6_N2
--register power-up is low

angleCount[7] = DFFEAS(A1L811, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[6] is angleCount[6] at FF_X61_Y6_N56
--register power-up is low

angleCount[6] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L422, A1L812,  ,  , VCC);


--A1L490 is LessThan1~0 at LABCELL_X60_Y6_N21
A1L490 = ( A1L440Q & ( (angleCount[7] & (!angleCount[6] $ (currCount[6]))) ) ) # ( !A1L440Q & ( (!angleCount[7] & (!angleCount[6] $ (currCount[6]))) ) );


--angleCount[5] is angleCount[5] at FF_X62_Y6_N44
--register power-up is low

angleCount[5] = DFFEAS(A1L813, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[4] is angleCount[4] at FF_X62_Y6_N14
--register power-up is low

angleCount[4] = DFFEAS(A1L814, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[1] is angleCount[1] at FF_X60_Y8_N47
--register power-up is low

angleCount[1] = DFFEAS(A1L817, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[0] is angleCount[0] at FF_X62_Y6_N20
--register power-up is low

angleCount[0] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L422, A1L818,  ,  , VCC);


--angleCount[3] is angleCount[3] at FF_X62_Y6_N26
--register power-up is low

angleCount[3] = DFFEAS(A1L815, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[2] is angleCount[2] at FF_X62_Y6_N56
--register power-up is low

angleCount[2] = DFFEAS(A1L816, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--A1L491 is LessThan1~1 at LABCELL_X62_Y6_N3
A1L491 = ( currCount[2] & ( (angleCount[2] & (!angleCount[3] $ (currCount[3]))) ) ) # ( !currCount[2] & ( (!angleCount[2] & (!angleCount[3] $ (currCount[3]))) ) );


--A1L492 is LessThan1~2 at LABCELL_X62_Y6_N6
A1L492 = ( currCount[3] & ( (!currCount[2] & (angleCount[3] & angleCount[2])) ) ) # ( !currCount[3] & ( ((!currCount[2] & angleCount[2])) # (angleCount[3]) ) );


--A1L493 is LessThan1~3 at LABCELL_X62_Y6_N30
A1L493 = ( A1L516 & ( A1L517 & ( (!A1L491 & (A1L492 & (!angleCount[7] $ (A1L440Q)))) # (A1L491 & (!angleCount[7] $ ((A1L440Q)))) ) ) ) # ( A1L516 & ( !A1L517 & ( (A1L492 & (!angleCount[7] $ (A1L440Q))) ) ) );


--A1L494 is LessThan1~4 at LABCELL_X60_Y6_N24
A1L494 = ( A1L440Q & ( (angleCount[6] & (angleCount[7] & !currCount[6])) ) ) # ( !A1L440Q & ( ((angleCount[6] & !currCount[6])) # (angleCount[7]) ) );


--A1L495 is LessThan1~5 at LABCELL_X61_Y6_N57
A1L495 = ( A1L490 & ( !A1L494 & ( (!currCount[5] & (!angleCount[5] & ((!angleCount[4]) # (currCount[4])))) # (currCount[5] & (((!angleCount[4]) # (!angleCount[5])) # (currCount[4]))) ) ) ) # ( !A1L490 & ( !A1L494 ) );


--angleCount[14] is angleCount[14] at FF_X60_Y7_N38
--register power-up is low

angleCount[14] = DFFEAS(A1L804, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[13] is angleCount[13] at FF_X61_Y7_N26
--register power-up is low

angleCount[13] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L422, A1L805,  ,  , VCC);


--angleCount[12] is angleCount[12] at FF_X60_Y7_N20
--register power-up is low

angleCount[12] = DFFEAS(A1L806, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--A1L496 is LessThan1~6 at LABCELL_X60_Y7_N24
A1L496 = ( A1L450Q & ( currCount[13] & ( (angleCount[12] & (angleCount[13] & (!angleCount[14] $ (currCount[14])))) ) ) ) # ( !A1L450Q & ( currCount[13] & ( (!angleCount[12] & (angleCount[13] & (!angleCount[14] $ (currCount[14])))) ) ) ) # ( A1L450Q & ( !currCount[13] & ( (angleCount[12] & (!angleCount[13] & (!angleCount[14] $ (currCount[14])))) ) ) ) # ( !A1L450Q & ( !currCount[13] & ( (!angleCount[12] & (!angleCount[13] & (!angleCount[14] $ (currCount[14])))) ) ) );


--angleCount[11] is angleCount[11] at FF_X62_Y7_N26
--register power-up is low

angleCount[11] = DFFEAS(A1L807, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[9] is angleCount[9] at FF_X62_Y7_N56
--register power-up is low

angleCount[9] = DFFEAS(A1L809, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[10] is angleCount[10] at FF_X62_Y7_N59
--register power-up is low

angleCount[10] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L422, A1L808,  ,  , VCC);


--angleCount[8] is angleCount[8] at FF_X62_Y7_N2
--register power-up is low

angleCount[8] = DFFEAS(A1L810, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--A1L497 is LessThan1~7 at LABCELL_X60_Y7_N42
A1L497 = ( A1L525 & ( A1L524 & ( (!angleCount[14] & (!A1L453Q & (!currCount[9] $ (angleCount[9])))) # (angleCount[14] & (A1L453Q & (!currCount[9] $ (angleCount[9])))) ) ) );


--A1L498 is LessThan1~8 at LABCELL_X60_Y7_N0
A1L498 = ( A1L450Q & ( currCount[13] & ( (angleCount[14] & !currCount[14]) ) ) ) # ( !A1L450Q & ( currCount[13] & ( (!angleCount[14] & (angleCount[12] & (angleCount[13] & !currCount[14]))) # (angleCount[14] & ((!currCount[14]) # ((angleCount[12] & angleCount[13])))) ) ) ) # ( A1L450Q & ( !currCount[13] & ( (!angleCount[13] & (angleCount[14] & !currCount[14])) # (angleCount[13] & ((!currCount[14]) # (angleCount[14]))) ) ) ) # ( !A1L450Q & ( !currCount[13] & ( (!angleCount[14] & (!currCount[14] & ((angleCount[13]) # (angleCount[12])))) # (angleCount[14] & (((!currCount[14]) # (angleCount[13])) # (angleCount[12]))) ) ) );


--A1L499 is LessThan1~9 at LABCELL_X60_Y7_N6
A1L499 = ( !A1L498 & ( A1L496 & ( (!A1L448Q & (!angleCount[11] & ((!angleCount[10]) # (A1L446Q)))) # (A1L448Q & ((!angleCount[10]) # ((!angleCount[11]) # (A1L446Q)))) ) ) ) # ( !A1L498 & ( !A1L496 ) );


--A1L500 is LessThan1~10 at LABCELL_X60_Y7_N48
A1L500 = ( A1L527 & ( A1L526 & ( (!angleCount[9] & (angleCount[8] & (!currCount[9] & !A1L442Q))) # (angleCount[9] & ((!currCount[9]) # ((angleCount[8] & !A1L442Q)))) ) ) );


--angleCount[18] is angleCount[18] at FF_X61_Y4_N38
--register power-up is low

angleCount[18] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L422, A1L800,  ,  , VCC);


--angleCount[21] is angleCount[21] at FF_X62_Y4_N50
--register power-up is low

angleCount[21] = DFFEAS(A1L797, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[20] is angleCount[20] at FF_X62_Y4_N8
--register power-up is low

angleCount[20] = DFFEAS(A1L798, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[19] is angleCount[19] at FF_X62_Y4_N14
--register power-up is low

angleCount[19] = DFFEAS(A1L799, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--A1L501 is LessThan1~11 at LABCELL_X62_Y3_N3
A1L501 = ( currCount[20] & ( A1L464Q & ( (angleCount[21] & (angleCount[20] & (!angleCount[19] $ (currCount[19])))) ) ) ) # ( !currCount[20] & ( A1L464Q & ( (angleCount[21] & (!angleCount[20] & (!angleCount[19] $ (currCount[19])))) ) ) ) # ( currCount[20] & ( !A1L464Q & ( (!angleCount[21] & (angleCount[20] & (!angleCount[19] $ (currCount[19])))) ) ) ) # ( !currCount[20] & ( !A1L464Q & ( (!angleCount[21] & (!angleCount[20] & (!angleCount[19] $ (currCount[19])))) ) ) );


--angleCount[17] is angleCount[17] at FF_X61_Y4_N47
--register power-up is low

angleCount[17] = DFFEAS(A1L801, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[16] is angleCount[16] at FF_X62_Y4_N35
--register power-up is low

angleCount[16] = DFFEAS(A1L802, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[15] is angleCount[15] at FF_X62_Y4_N26
--register power-up is low

angleCount[15] = DFFEAS(A1L803, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--A1L502 is LessThan1~12 at LABCELL_X62_Y4_N18
A1L502 = ( A1L518 & ( A1L519 & ( (!angleCount[21] & (!A1L464Q & (!angleCount[18] $ (currCount[18])))) # (angleCount[21] & (A1L464Q & (!angleCount[18] $ (currCount[18])))) ) ) );


--A1L503 is LessThan1~13 at LABCELL_X61_Y6_N48
A1L503 = ( A1L502 & ( A1L497 & ( ((!A1L495) # ((!A1L499) # (A1L500))) # (A1L493) ) ) ) # ( A1L502 & ( !A1L497 & ( (!A1L499) # (A1L500) ) ) );


--A1L504 is LessThan1~14 at LABCELL_X62_Y3_N42
A1L504 = ( currCount[20] & ( currCount[19] & ( (!A1L464Q & angleCount[21]) ) ) ) # ( !currCount[20] & ( currCount[19] & ( (!A1L464Q & ((angleCount[20]) # (angleCount[21]))) # (A1L464Q & (angleCount[21] & angleCount[20])) ) ) ) # ( currCount[20] & ( !currCount[19] & ( (!A1L464Q & (((angleCount[19] & angleCount[20])) # (angleCount[21]))) # (A1L464Q & (angleCount[19] & (angleCount[21] & angleCount[20]))) ) ) ) # ( !currCount[20] & ( !currCount[19] & ( (!A1L464Q & (((angleCount[20]) # (angleCount[21])) # (angleCount[19]))) # (A1L464Q & (angleCount[21] & ((angleCount[20]) # (angleCount[19])))) ) ) );


--A1L505 is LessThan1~15 at LABCELL_X62_Y3_N12
A1L505 = ( A1L501 & ( A1L520 & ( (!A1L504 & (!A1L521 & (!angleCount[17] $ (!currCount[17])))) ) ) ) # ( !A1L501 & ( A1L520 & ( !A1L504 ) ) ) # ( A1L501 & ( !A1L520 & ( (!A1L504 & !A1L521) ) ) ) # ( !A1L501 & ( !A1L520 & ( !A1L504 ) ) );


--angleCount[25] is angleCount[25] at FF_X60_Y5_N50
--register power-up is low

angleCount[25] = DFFEAS(A1L793, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[28] is angleCount[28] at FF_X60_Y5_N32
--register power-up is low

angleCount[28] = DFFEAS(A1L790, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[27] is angleCount[27] at FF_X60_Y5_N38
--register power-up is low

angleCount[27] = DFFEAS(A1L791, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[26] is angleCount[26] at FF_X60_Y5_N8
--register power-up is low

angleCount[26] = DFFEAS(A1L792, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--A1L506 is LessThan1~16 at LABCELL_X60_Y4_N6
A1L506 = ( angleCount[27] & ( angleCount[28] & ( (currCount[27] & (currCount[28] & (!A1L470Q $ (angleCount[26])))) ) ) ) # ( !angleCount[27] & ( angleCount[28] & ( (!currCount[27] & (currCount[28] & (!A1L470Q $ (angleCount[26])))) ) ) ) # ( angleCount[27] & ( !angleCount[28] & ( (currCount[27] & (!currCount[28] & (!A1L470Q $ (angleCount[26])))) ) ) ) # ( !angleCount[27] & ( !angleCount[28] & ( (!currCount[27] & (!currCount[28] & (!A1L470Q $ (angleCount[26])))) ) ) );


--angleCount[24] is angleCount[24] at FF_X60_Y5_N2
--register power-up is low

angleCount[24] = DFFEAS(A1L794, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--A1L507 is LessThan1~17 at LABCELL_X60_Y4_N27
A1L507 = ( angleCount[24] & ( !currCount[24] ) ) # ( !angleCount[24] & ( currCount[24] ) );


--angleCount[23] is angleCount[23] at FF_X59_Y6_N38
--register power-up is low

angleCount[23] = DFFEAS(A1L795, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--A1L508 is LessThan1~18 at LABCELL_X60_Y4_N57
A1L508 = ( currCount[23] & ( !angleCount[23] ) ) # ( !currCount[23] & ( angleCount[23] ) );


--angleCount[22] is angleCount[22] at FF_X59_Y6_N56
--register power-up is low

angleCount[22] = DFFEAS(A1L796, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--A1L509 is LessThan1~19 at LABCELL_X60_Y4_N48
A1L509 = ( angleCount[22] & ( !currCount[22] ) ) # ( !angleCount[22] & ( currCount[22] ) );


--A1L510 is LessThan1~20 at LABCELL_X60_Y4_N0
A1L510 = ( currCount[25] & ( !A1L509 & ( (!A1L507 & (A1L506 & (angleCount[25] & !A1L508))) ) ) ) # ( !currCount[25] & ( !A1L509 & ( (!A1L507 & (A1L506 & (!angleCount[25] & !A1L508))) ) ) );


--A1L511 is LessThan1~21 at LABCELL_X60_Y4_N36
A1L511 = ( angleCount[27] & ( angleCount[28] & ( (!currCount[27]) # ((!currCount[28]) # ((!A1L470Q & angleCount[26]))) ) ) ) # ( !angleCount[27] & ( angleCount[28] & ( (!currCount[28]) # ((!currCount[27] & (!A1L470Q & angleCount[26]))) ) ) ) # ( angleCount[27] & ( !angleCount[28] & ( (!currCount[28] & ((!currCount[27]) # ((!A1L470Q & angleCount[26])))) ) ) ) # ( !angleCount[27] & ( !angleCount[28] & ( (!currCount[27] & (!A1L470Q & (angleCount[26] & !currCount[28]))) ) ) );


--A1L512 is LessThan1~22 at LABCELL_X60_Y4_N18
A1L512 = ( A1L507 & ( A1L522 & ( (!A1L511 & ((!A1L523) # (!A1L506))) ) ) ) # ( !A1L507 & ( A1L522 & ( (!A1L506 & !A1L511) ) ) ) # ( A1L507 & ( !A1L522 & ( (!A1L511 & ((!A1L523) # (!A1L506))) ) ) ) # ( !A1L507 & ( !A1L522 & ( (!A1L511 & ((!A1L523) # (!A1L506))) ) ) );


--angleCount[31] is angleCount[31] at FF_X57_Y6_N26
--register power-up is low

angleCount[31] = DFFEAS(A1L787, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[30] is angleCount[30] at FF_X60_Y6_N44
--register power-up is low

angleCount[30] = DFFEAS(A1L788, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--angleCount[29] is angleCount[29] at FF_X59_Y6_N50
--register power-up is low

angleCount[29] = DFFEAS(A1L789, GLOBAL(A1L426),  ,  , A1L422,  ,  ,  ,  );


--A1L513 is LessThan1~23 at LABCELL_X57_Y6_N21
A1L513 = ( currCount[31] & ( currCount[29] & ( (angleCount[31] & (angleCount[29] & (!currCount[30] $ (angleCount[30])))) ) ) ) # ( !currCount[31] & ( currCount[29] & ( (!angleCount[31] & (angleCount[29] & (!currCount[30] $ (angleCount[30])))) ) ) ) # ( currCount[31] & ( !currCount[29] & ( (angleCount[31] & (!angleCount[29] & (!currCount[30] $ (angleCount[30])))) ) ) ) # ( !currCount[31] & ( !currCount[29] & ( (!angleCount[31] & (!angleCount[29] & (!currCount[30] $ (angleCount[30])))) ) ) );


--A1L514 is LessThan1~24 at LABCELL_X60_Y5_N18
A1L514 = ( currCount[29] & ( angleCount[31] & ( (!currCount[30] & (angleCount[30] & currCount[31])) ) ) ) # ( !currCount[29] & ( angleCount[31] & ( (currCount[31] & ((!currCount[30] & ((angleCount[30]) # (angleCount[29]))) # (currCount[30] & (angleCount[29] & angleCount[30])))) ) ) ) # ( currCount[29] & ( !angleCount[31] & ( ((!currCount[30] & angleCount[30])) # (currCount[31]) ) ) ) # ( !currCount[29] & ( !angleCount[31] & ( ((!currCount[30] & ((angleCount[30]) # (angleCount[29]))) # (currCount[30] & (angleCount[29] & angleCount[30]))) # (currCount[31]) ) ) );


--A1L515 is LessThan1~25 at LABCELL_X61_Y6_N42
A1L515 = ( A1L512 & ( A1L503 & ( (!A1L514 & ((!A1L513) # (!A1L510))) ) ) ) # ( !A1L512 & ( A1L503 & ( (!A1L513 & !A1L514) ) ) ) # ( A1L512 & ( !A1L503 & ( (!A1L514 & ((!A1L513) # ((!A1L510) # (A1L505)))) ) ) ) # ( !A1L512 & ( !A1L503 & ( (!A1L513 & !A1L514) ) ) );


--A1L691 is out_wave~0 at LABCELL_X61_Y6_N39
A1L691 = ( current_state.INT_RIGHT & ( out_wave ) ) # ( !current_state.INT_RIGHT & ( (!current_state.INT_LEFT & ((!A1L786 & ((out_wave))) # (A1L786 & (!A1L515)))) # (current_state.INT_LEFT & (((out_wave)))) ) );


--current_state.SW_RIGHT is current_state.SW_RIGHT at FF_X57_Y5_N53
--register power-up is low

current_state.SW_RIGHT = DFFEAS( , GLOBAL(A1L426), A1L786,  ,  , next_state.SW_RIGHT,  ,  , VCC);


--minAngleCount[7] is minAngleCount[7] at FF_X62_Y5_N53
--register power-up is low

minAngleCount[7] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][7],  ,  , VCC);


--minAngleCount[6] is minAngleCount[6] at FF_X62_Y5_N59
--register power-up is low

minAngleCount[6] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][6],  ,  , VCC);


--A1L568 is LessThan3~0 at LABCELL_X62_Y5_N12
A1L568 = ( minAngleCount[6] & ( (A1L438Q & (!minAngleCount[7] $ (A1L440Q))) ) ) # ( !minAngleCount[6] & ( (!A1L438Q & (!minAngleCount[7] $ (A1L440Q))) ) );


--minAngleCount[5] is minAngleCount[5] at FF_X63_Y5_N53
--register power-up is low

minAngleCount[5] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][5],  ,  , VCC);


--minAngleCount[4] is minAngleCount[4] at FF_X63_Y5_N32
--register power-up is low

minAngleCount[4] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][4],  ,  , VCC);


--minAngleCount[1] is minAngleCount[1] at FF_X60_Y5_N26
--register power-up is low

minAngleCount[1] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][1],  ,  , VCC);


--minAngleCount[0] is minAngleCount[0] at FF_X60_Y5_N47
--register power-up is low

minAngleCount[0] = DFFEAS(A1L650, GLOBAL(A1L426),  ,  , A1L608,  ,  ,  ,  );


--minAngleCount[3] is minAngleCount[3] at FF_X62_Y6_N41
--register power-up is low

minAngleCount[3] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][3],  ,  , VCC);


--minAngleCount[2] is minAngleCount[2] at FF_X62_Y6_N2
--register power-up is low

minAngleCount[2] = DFFEAS(A1L653, GLOBAL(A1L426),  ,  , A1L608,  ,  ,  ,  );


--A1L569 is LessThan3~1 at LABCELL_X62_Y6_N9
A1L569 = ( currCount[3] & ( (minAngleCount[3] & (!currCount[2] $ (!minAngleCount[2]))) ) ) # ( !currCount[3] & ( (!minAngleCount[3] & (!currCount[2] $ (!minAngleCount[2]))) ) );


--A1L570 is LessThan3~2 at LABCELL_X62_Y6_N51
A1L570 = ( currCount[2] & ( (!minAngleCount[3] & ((minAngleCount[2]) # (currCount[3]))) # (minAngleCount[3] & (currCount[3] & minAngleCount[2])) ) ) # ( !currCount[2] & ( (!minAngleCount[3] & currCount[3]) ) );


--A1L571 is LessThan3~3 at LABCELL_X63_Y5_N24
A1L571 = ( A1L570 & ( A1L569 & ( (A1L596 & (!minAngleCount[7] $ (currCount[7]))) ) ) ) # ( !A1L570 & ( A1L569 & ( (A1L597 & (A1L596 & (!minAngleCount[7] $ (currCount[7])))) ) ) ) # ( A1L570 & ( !A1L569 & ( (A1L596 & (!minAngleCount[7] $ (currCount[7]))) ) ) );


--A1L572 is LessThan3~4 at LABCELL_X62_Y5_N51
A1L572 = ( minAngleCount[6] & ( (A1L440Q & !minAngleCount[7]) ) ) # ( !minAngleCount[6] & ( (!A1L440Q & (A1L438Q & !minAngleCount[7])) # (A1L440Q & ((!minAngleCount[7]) # (A1L438Q))) ) );


--A1L573 is LessThan3~5 at LABCELL_X63_Y5_N57
A1L573 = ( A1L568 & ( !A1L572 & ( (!currCount[5] & ((!A1L435Q) # ((minAngleCount[5]) # (minAngleCount[4])))) # (currCount[5] & (minAngleCount[5] & ((!A1L435Q) # (minAngleCount[4])))) ) ) ) # ( !A1L568 & ( !A1L572 ) );


--minAngleCount[14] is minAngleCount[14] at FF_X62_Y5_N50
--register power-up is low

minAngleCount[14] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][14],  ,  , VCC);


--minAngleCount[13] is minAngleCount[13] at FF_X62_Y5_N8
--register power-up is low

minAngleCount[13] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][13],  ,  , VCC);


--minAngleCount[12] is minAngleCount[12] at FF_X62_Y5_N2
--register power-up is low

minAngleCount[12] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][12],  ,  , VCC);


--A1L574 is LessThan3~6 at LABCELL_X62_Y5_N9
A1L574 = ( minAngleCount[12] & ( A1L450Q & ( (!currCount[13] & (!minAngleCount[13] & (!currCount[14] $ (minAngleCount[14])))) # (currCount[13] & (minAngleCount[13] & (!currCount[14] $ (minAngleCount[14])))) ) ) ) # ( !minAngleCount[12] & ( !A1L450Q & ( (!currCount[13] & (!minAngleCount[13] & (!currCount[14] $ (minAngleCount[14])))) # (currCount[13] & (minAngleCount[13] & (!currCount[14] $ (minAngleCount[14])))) ) ) );


--minAngleCount[11] is minAngleCount[11] at FF_X62_Y5_N47
--register power-up is low

minAngleCount[11] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][11],  ,  , VCC);


--minAngleCount[9] is minAngleCount[9] at FF_X62_Y5_N44
--register power-up is low

minAngleCount[9] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][9],  ,  , VCC);


--minAngleCount[10] is minAngleCount[10] at FF_X62_Y5_N26
--register power-up is low

minAngleCount[10] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][10],  ,  , VCC);


--minAngleCount[8] is minAngleCount[8] at FF_X62_Y5_N32
--register power-up is low

minAngleCount[8] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][8],  ,  , VCC);


--A1L575 is LessThan3~7 at LABCELL_X62_Y5_N42
A1L575 = ( minAngleCount[9] & ( A1L598 & ( (A1L599 & (currCount[9] & (!minAngleCount[14] $ (currCount[14])))) ) ) ) # ( !minAngleCount[9] & ( A1L598 & ( (A1L599 & (!currCount[9] & (!minAngleCount[14] $ (currCount[14])))) ) ) );


--A1L576 is LessThan3~8 at LABCELL_X62_Y5_N3
A1L576 = ( minAngleCount[12] & ( minAngleCount[14] & ( (currCount[13] & (currCount[14] & !minAngleCount[13])) ) ) ) # ( !minAngleCount[12] & ( minAngleCount[14] & ( (currCount[14] & ((!currCount[13] & (!minAngleCount[13] & A1L450Q)) # (currCount[13] & ((!minAngleCount[13]) # (A1L450Q))))) ) ) ) # ( minAngleCount[12] & ( !minAngleCount[14] & ( ((currCount[13] & !minAngleCount[13])) # (currCount[14]) ) ) ) # ( !minAngleCount[12] & ( !minAngleCount[14] & ( ((!currCount[13] & (!minAngleCount[13] & A1L450Q)) # (currCount[13] & ((!minAngleCount[13]) # (A1L450Q)))) # (currCount[14]) ) ) );


--A1L577 is LessThan3~9 at LABCELL_X62_Y5_N27
A1L577 = ( !A1L576 & ( A1L574 & ( (!minAngleCount[11] & (!currCount[11] & ((!A1L446Q) # (minAngleCount[10])))) # (minAngleCount[11] & ((!A1L446Q) # ((!currCount[11]) # (minAngleCount[10])))) ) ) ) # ( !A1L576 & ( !A1L574 ) );


--A1L578 is LessThan3~10 at LABCELL_X63_Y5_N15
A1L578 = ( A1L442Q & ( A1L601 & ( (A1L600 & ((!currCount[9] & (!minAngleCount[8] & !minAngleCount[9])) # (currCount[9] & ((!minAngleCount[8]) # (!minAngleCount[9]))))) ) ) ) # ( !A1L442Q & ( A1L601 & ( (currCount[9] & (A1L600 & !minAngleCount[9])) ) ) );


--minAngleCount[18] is minAngleCount[18] at FF_X63_Y5_N47
--register power-up is low

minAngleCount[18] = DFFEAS(A1L670, GLOBAL(A1L426),  ,  , A1L608,  ,  ,  ,  );


--minAngleCount[21] is minAngleCount[21] at FF_X62_Y3_N56
--register power-up is low

minAngleCount[21] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][21],  ,  , VCC);


--minAngleCount[20] is minAngleCount[20] at FF_X62_Y3_N38
--register power-up is low

minAngleCount[20] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][20],  ,  , VCC);


--minAngleCount[19] is minAngleCount[19] at FF_X62_Y3_N8
--register power-up is low

minAngleCount[19] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][19],  ,  , VCC);


--A1L579 is LessThan3~11 at LABCELL_X62_Y3_N9
A1L579 = ( currCount[20] & ( A1L464Q & ( (minAngleCount[21] & (minAngleCount[20] & (!minAngleCount[19] $ (currCount[19])))) ) ) ) # ( !currCount[20] & ( A1L464Q & ( (minAngleCount[21] & (!minAngleCount[20] & (!minAngleCount[19] $ (currCount[19])))) ) ) ) # ( currCount[20] & ( !A1L464Q & ( (!minAngleCount[21] & (minAngleCount[20] & (!minAngleCount[19] $ (currCount[19])))) ) ) ) # ( !currCount[20] & ( !A1L464Q & ( (!minAngleCount[21] & (!minAngleCount[20] & (!minAngleCount[19] $ (currCount[19])))) ) ) );


--minAngleCount[17] is minAngleCount[17] at FF_X62_Y5_N41
--register power-up is low

minAngleCount[17] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][17],  ,  , VCC);


--minAngleCount[16] is minAngleCount[16] at FF_X62_Y3_N26
--register power-up is low

minAngleCount[16] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][16],  ,  , VCC);


--minAngleCount[15] is minAngleCount[15] at FF_X62_Y5_N20
--register power-up is low

minAngleCount[15] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][15],  ,  , VCC);


--A1L580 is LessThan3~12 at LABCELL_X63_Y5_N3
A1L580 = ( A1L603 & ( A1L602 & ( (!currCount[18] & (!minAngleCount[18] & (!currCount[21] $ (minAngleCount[21])))) # (currCount[18] & (minAngleCount[18] & (!currCount[21] $ (minAngleCount[21])))) ) ) );


--A1L581 is LessThan3~13 at LABCELL_X63_Y5_N6
A1L581 = ( A1L575 & ( A1L571 & ( A1L580 ) ) ) # ( !A1L575 & ( A1L571 & ( (A1L580 & ((!A1L577) # (A1L578))) ) ) ) # ( A1L575 & ( !A1L571 & ( (A1L580 & ((!A1L577) # ((!A1L573) # (A1L578)))) ) ) ) # ( !A1L575 & ( !A1L571 & ( (A1L580 & ((!A1L577) # (A1L578))) ) ) );


--A1L582 is LessThan3~14 at LABCELL_X62_Y3_N57
A1L582 = ( minAngleCount[20] & ( A1L464Q & ( (!minAngleCount[21]) # ((!minAngleCount[19] & (currCount[19] & currCount[20]))) ) ) ) # ( !minAngleCount[20] & ( A1L464Q & ( (!minAngleCount[21]) # (((!minAngleCount[19] & currCount[19])) # (currCount[20])) ) ) ) # ( minAngleCount[20] & ( !A1L464Q & ( (!minAngleCount[21] & (!minAngleCount[19] & (currCount[19] & currCount[20]))) ) ) ) # ( !minAngleCount[20] & ( !A1L464Q & ( (!minAngleCount[21] & (((!minAngleCount[19] & currCount[19])) # (currCount[20]))) ) ) );


--A1L583 is LessThan3~15 at LABCELL_X62_Y3_N30
A1L583 = ( A1L605 & ( A1L604 & ( (!A1L582 & !A1L579) ) ) ) # ( !A1L605 & ( A1L604 & ( (!A1L582 & ((!A1L579) # (!minAngleCount[17] $ (!currCount[17])))) ) ) ) # ( A1L605 & ( !A1L604 & ( (!A1L582 & !A1L579) ) ) ) # ( !A1L605 & ( !A1L604 & ( !A1L582 ) ) );


--minAngleCount[25] is minAngleCount[25] at FF_X57_Y5_N35
--register power-up is low

minAngleCount[25] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][25],  ,  , VCC);


--minAngleCount[28] is minAngleCount[28] at FF_X56_Y5_N38
--register power-up is low

minAngleCount[28] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][28],  ,  , VCC);


--minAngleCount[27] is minAngleCount[27] at FF_X56_Y5_N59
--register power-up is low

minAngleCount[27] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][27],  ,  , VCC);


--minAngleCount[26] is minAngleCount[26] at FF_X56_Y5_N2
--register power-up is low

minAngleCount[26] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][26],  ,  , VCC);


--A1L584 is LessThan3~16 at LABCELL_X56_Y5_N3
A1L584 = ( currCount[27] & ( currCount[28] & ( (minAngleCount[28] & (minAngleCount[27] & (!currCount[26] $ (minAngleCount[26])))) ) ) ) # ( !currCount[27] & ( currCount[28] & ( (minAngleCount[28] & (!minAngleCount[27] & (!currCount[26] $ (minAngleCount[26])))) ) ) ) # ( currCount[27] & ( !currCount[28] & ( (!minAngleCount[28] & (minAngleCount[27] & (!currCount[26] $ (minAngleCount[26])))) ) ) ) # ( !currCount[27] & ( !currCount[28] & ( (!minAngleCount[28] & (!minAngleCount[27] & (!currCount[26] $ (minAngleCount[26])))) ) ) );


--minAngleCount[24] is minAngleCount[24] at FF_X56_Y5_N11
--register power-up is low

minAngleCount[24] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][24],  ,  , VCC);


--A1L585 is LessThan3~17 at LABCELL_X56_Y5_N39
A1L585 = ( currCount[24] & ( !minAngleCount[24] ) ) # ( !currCount[24] & ( minAngleCount[24] ) );


--minAngleCount[23] is minAngleCount[23] at FF_X56_Y5_N8
--register power-up is low

minAngleCount[23] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][23],  ,  , VCC);


--A1L586 is LessThan3~18 at LABCELL_X56_Y5_N27
A1L586 = ( currCount[23] & ( !minAngleCount[23] ) ) # ( !currCount[23] & ( minAngleCount[23] ) );


--minAngleCount[22] is minAngleCount[22] at FF_X56_Y5_N44
--register power-up is low

minAngleCount[22] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][22],  ,  , VCC);


--A1L587 is LessThan3~19 at LABCELL_X56_Y5_N45
A1L587 = ( currCount[22] & ( !minAngleCount[22] ) ) # ( !currCount[22] & ( minAngleCount[22] ) );


--A1L588 is LessThan3~20 at LABCELL_X56_Y5_N48
A1L588 = ( !A1L586 & ( currCount[25] & ( (A1L584 & (!A1L585 & (minAngleCount[25] & !A1L587))) ) ) ) # ( !A1L586 & ( !currCount[25] & ( (A1L584 & (!A1L585 & (!minAngleCount[25] & !A1L587))) ) ) );


--A1L589 is LessThan3~21 at LABCELL_X56_Y5_N54
A1L589 = ( A1L584 & ( !A1L585 & ( !currCount[25] $ (minAngleCount[25]) ) ) );


--A1L590 is LessThan3~22 at LABCELL_X56_Y5_N18
A1L590 = ( currCount[27] & ( currCount[28] & ( (!minAngleCount[27]) # ((!minAngleCount[28]) # ((!minAngleCount[26] & currCount[26]))) ) ) ) # ( !currCount[27] & ( currCount[28] & ( (!minAngleCount[28]) # ((!minAngleCount[26] & (!minAngleCount[27] & currCount[26]))) ) ) ) # ( currCount[27] & ( !currCount[28] & ( (!minAngleCount[28] & ((!minAngleCount[27]) # ((!minAngleCount[26] & currCount[26])))) ) ) ) # ( !currCount[27] & ( !currCount[28] & ( (!minAngleCount[26] & (!minAngleCount[27] & (!minAngleCount[28] & currCount[26]))) ) ) );


--A1L591 is LessThan3~23 at LABCELL_X56_Y5_N15
A1L591 = ( A1L584 & ( !A1L590 & ( (!minAngleCount[25] & (!currCount[25] & ((!currCount[24]) # (minAngleCount[24])))) # (minAngleCount[25] & ((!currCount[24]) # ((!currCount[25]) # (minAngleCount[24])))) ) ) ) # ( !A1L584 & ( !A1L590 ) );


--A1L592 is LessThan3~24 at LABCELL_X56_Y5_N30
A1L592 = ( A1L589 & ( A1L591 & ( (!minAngleCount[23] & (!currCount[23] & ((!currCount[22]) # (minAngleCount[22])))) # (minAngleCount[23] & (((!currCount[23]) # (!currCount[22])) # (minAngleCount[22]))) ) ) ) # ( !A1L589 & ( A1L591 ) );


--minAngleCount[30] is minAngleCount[30] at FF_X56_Y5_N41
--register power-up is low

minAngleCount[30] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][30],  ,  , VCC);


--minAngleCount[29] is minAngleCount[29] at FF_X57_Y4_N38
--register power-up is low

minAngleCount[29] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[0][29],  ,  , VCC);


--A1L593 is LessThan3~25 at LABCELL_X56_Y5_N24
A1L593 = ( minAngleCount[30] & ( (!currCount[31] & (currCount[30] & (!minAngleCount[29] $ (currCount[29])))) ) ) # ( !minAngleCount[30] & ( (!currCount[31] & (!currCount[30] & (!minAngleCount[29] $ (currCount[29])))) ) );


--A1L594 is LessThan3~26 at LABCELL_X57_Y4_N36
A1L594 = ( minAngleCount[29] & ( !currCount[31] & ( (currCount[30] & !minAngleCount[30]) ) ) ) # ( !minAngleCount[29] & ( !currCount[31] & ( (!currCount[29] & (currCount[30] & !minAngleCount[30])) # (currCount[29] & ((!minAngleCount[30]) # (currCount[30]))) ) ) );


--A1L595 is LessThan3~27 at LABCELL_X57_Y5_N15
A1L595 = ( A1L588 & ( A1L581 & ( (!A1L593 & !A1L594) ) ) ) # ( !A1L588 & ( A1L581 & ( (!A1L594 & ((!A1L593) # (A1L592))) ) ) ) # ( A1L588 & ( !A1L581 & ( (!A1L594 & ((!A1L593) # ((A1L592 & A1L583)))) ) ) ) # ( !A1L588 & ( !A1L581 & ( (!A1L594 & ((!A1L593) # (A1L592))) ) ) );


--current_state.SW_LEFT is current_state.SW_LEFT at FF_X57_Y5_N44
--register power-up is low

current_state.SW_LEFT = DFFEAS( , GLOBAL(A1L426), A1L786,  ,  , next_state.SW_LEFT,  ,  , VCC);


--maxAngleCount[7] is maxAngleCount[7] at FF_X60_Y6_N38
--register power-up is low

maxAngleCount[7] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][7],  ,  , VCC);


--maxAngleCount[6] is maxAngleCount[6] at FF_X60_Y6_N11
--register power-up is low

maxAngleCount[6] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][6],  ,  , VCC);


--A1L528 is LessThan2~0 at LABCELL_X60_Y6_N39
A1L528 = ( maxAngleCount[6] & ( (angleCount[6] & (!maxAngleCount[7] $ (angleCount[7]))) ) ) # ( !maxAngleCount[6] & ( (!angleCount[6] & (!maxAngleCount[7] $ (angleCount[7]))) ) );


--maxAngleCount[5] is maxAngleCount[5] at FF_X60_Y6_N17
--register power-up is low

maxAngleCount[5] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][5],  ,  , VCC);


--A1L529 is LessThan2~1 at LABCELL_X60_Y6_N33
A1L529 = ( maxAngleCount[5] & ( !angleCount[5] ) ) # ( !maxAngleCount[5] & ( angleCount[5] ) );


--maxAngleCount[4] is maxAngleCount[4] at FF_X60_Y6_N53
--register power-up is low

maxAngleCount[4] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][4],  ,  , VCC);


--A1L530 is LessThan2~2 at LABCELL_X60_Y6_N18
A1L530 = ( angleCount[4] & ( !maxAngleCount[4] ) ) # ( !angleCount[4] & ( maxAngleCount[4] ) );


--maxAngleCount[1] is maxAngleCount[1] at FF_X60_Y6_N41
--register power-up is low

maxAngleCount[1] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, A1L611,  ,  , VCC);


--maxAngleCount[0] is maxAngleCount[0] at FF_X60_Y6_N8
--register power-up is low

maxAngleCount[0] = DFFEAS(A1L609, GLOBAL(A1L426),  ,  , A1L608,  ,  ,  ,  );


--A1L531 is LessThan2~3 at LABCELL_X60_Y6_N9
A1L531 = ( angleCount[1] & ( (!angleCount[0] & (!maxAngleCount[1] & !maxAngleCount[0])) ) ) # ( !angleCount[1] & ( (!maxAngleCount[1]) # ((!angleCount[0] & !maxAngleCount[0])) ) );


--maxAngleCount[3] is maxAngleCount[3] at FF_X60_Y6_N20
--register power-up is low

maxAngleCount[3] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, A1L615,  ,  , VCC);


--maxAngleCount[2] is maxAngleCount[2] at FF_X60_Y6_N59
--register power-up is low

maxAngleCount[2] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, A1L613,  ,  , VCC);


--A1L532 is LessThan2~4 at LABCELL_X60_Y6_N27
A1L532 = ( maxAngleCount[3] & ( (!angleCount[3] & (!angleCount[2] $ (!maxAngleCount[2]))) ) ) # ( !maxAngleCount[3] & ( (angleCount[3] & (!angleCount[2] $ (!maxAngleCount[2]))) ) );


--A1L533 is LessThan2~5 at LABCELL_X60_Y6_N12
A1L533 = ( angleCount[3] & ( (!angleCount[2] & (!maxAngleCount[3] & !maxAngleCount[2])) ) ) # ( !angleCount[3] & ( (!maxAngleCount[3]) # ((!angleCount[2] & !maxAngleCount[2])) ) );


--A1L534 is LessThan2~6 at LABCELL_X60_Y6_N48
A1L534 = ( A1L528 & ( !A1L530 & ( (!A1L529 & (((A1L532 & A1L531)) # (A1L533))) ) ) );


--A1L535 is LessThan2~7 at LABCELL_X60_Y6_N30
A1L535 = ( maxAngleCount[6] & ( (!maxAngleCount[7] & (!angleCount[7] & !angleCount[6])) # (maxAngleCount[7] & ((!angleCount[7]) # (!angleCount[6]))) ) ) # ( !maxAngleCount[6] & ( (maxAngleCount[7] & !angleCount[7]) ) );


--A1L536 is LessThan2~8 at LABCELL_X60_Y6_N54
A1L536 = ( A1L528 & ( !A1L535 & ( (!angleCount[5] & (!maxAngleCount[5] & ((!maxAngleCount[4]) # (angleCount[4])))) # (angleCount[5] & ((!maxAngleCount[5]) # ((!maxAngleCount[4]) # (angleCount[4])))) ) ) ) # ( !A1L528 & ( !A1L535 ) );


--maxAngleCount[14] is maxAngleCount[14] at FF_X62_Y7_N20
--register power-up is low

maxAngleCount[14] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][14],  ,  , VCC);


--maxAngleCount[13] is maxAngleCount[13] at FF_X62_Y7_N38
--register power-up is low

maxAngleCount[13] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][13],  ,  , VCC);


--maxAngleCount[12] is maxAngleCount[12] at FF_X62_Y7_N32
--register power-up is low

maxAngleCount[12] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][12],  ,  , VCC);


--A1L537 is LessThan2~9 at LABCELL_X62_Y7_N51
A1L537 = ( angleCount[14] & ( angleCount[13] & ( (maxAngleCount[14] & (maxAngleCount[13] & (!maxAngleCount[12] $ (angleCount[12])))) ) ) ) # ( !angleCount[14] & ( angleCount[13] & ( (!maxAngleCount[14] & (maxAngleCount[13] & (!maxAngleCount[12] $ (angleCount[12])))) ) ) ) # ( angleCount[14] & ( !angleCount[13] & ( (maxAngleCount[14] & (!maxAngleCount[13] & (!maxAngleCount[12] $ (angleCount[12])))) ) ) ) # ( !angleCount[14] & ( !angleCount[13] & ( (!maxAngleCount[14] & (!maxAngleCount[13] & (!maxAngleCount[12] $ (angleCount[12])))) ) ) );


--maxAngleCount[11] is maxAngleCount[11] at FF_X62_Y7_N44
--register power-up is low

maxAngleCount[11] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][11],  ,  , VCC);


--A1L538 is LessThan2~10 at LABCELL_X62_Y7_N15
A1L538 = ( angleCount[11] & ( !maxAngleCount[11] ) ) # ( !angleCount[11] & ( maxAngleCount[11] ) );


--maxAngleCount[9] is maxAngleCount[9] at FF_X62_Y7_N8
--register power-up is low

maxAngleCount[9] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][9],  ,  , VCC);


--maxAngleCount[10] is maxAngleCount[10] at FF_X62_Y7_N50
--register power-up is low

maxAngleCount[10] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][10],  ,  , VCC);


--A1L539 is LessThan2~11 at LABCELL_X62_Y7_N12
A1L539 = ( maxAngleCount[10] & ( !angleCount[10] ) ) # ( !maxAngleCount[10] & ( angleCount[10] ) );


--maxAngleCount[8] is maxAngleCount[8] at FF_X63_Y7_N29
--register power-up is low

maxAngleCount[8] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][8],  ,  , VCC);


--A1L540 is LessThan2~12 at LABCELL_X63_Y7_N30
A1L540 = ( !maxAngleCount[8] & ( angleCount[8] ) ) # ( maxAngleCount[8] & ( !angleCount[8] ) );


--A1L541 is LessThan2~13 at LABCELL_X62_Y7_N9
A1L541 = ( A1L537 & ( !A1L538 & ( (!A1L539 & (!A1L540 & (!angleCount[9] $ (maxAngleCount[9])))) ) ) );


--A1L542 is LessThan2~14 at LABCELL_X62_Y7_N45
A1L542 = ( angleCount[14] & ( angleCount[13] & ( (maxAngleCount[14] & (!angleCount[12] & (maxAngleCount[12] & maxAngleCount[13]))) ) ) ) # ( !angleCount[14] & ( angleCount[13] & ( ((!angleCount[12] & (maxAngleCount[12] & maxAngleCount[13]))) # (maxAngleCount[14]) ) ) ) # ( angleCount[14] & ( !angleCount[13] & ( (maxAngleCount[14] & (((!angleCount[12] & maxAngleCount[12])) # (maxAngleCount[13]))) ) ) ) # ( !angleCount[14] & ( !angleCount[13] & ( (((!angleCount[12] & maxAngleCount[12])) # (maxAngleCount[13])) # (maxAngleCount[14]) ) ) );


--A1L543 is LessThan2~15 at LABCELL_X62_Y7_N39
A1L543 = ( !A1L542 & ( A1L537 & ( (!maxAngleCount[11] & ((!maxAngleCount[10]) # ((angleCount[11]) # (angleCount[10])))) # (maxAngleCount[11] & (angleCount[11] & ((!maxAngleCount[10]) # (angleCount[10])))) ) ) ) # ( !A1L542 & ( !A1L537 ) );


--A1L544 is LessThan2~16 at LABCELL_X62_Y7_N33
A1L544 = ( maxAngleCount[8] & ( !angleCount[8] ) );


--A1L545 is LessThan2~17 at LABCELL_X62_Y7_N21
A1L545 = ( A1L537 & ( !A1L538 & ( (!A1L539 & ((!angleCount[9] & ((A1L544) # (maxAngleCount[9]))) # (angleCount[9] & (maxAngleCount[9] & A1L544)))) ) ) );


--maxAngleCount[18] is maxAngleCount[18] at FF_X57_Y5_N14
--register power-up is low

maxAngleCount[18] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][18],  ,  , VCC);


--maxAngleCount[21] is maxAngleCount[21] at FF_X62_Y4_N23
--register power-up is low

maxAngleCount[21] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][21],  ,  , VCC);


--maxAngleCount[20] is maxAngleCount[20] at FF_X62_Y4_N41
--register power-up is low

maxAngleCount[20] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][20],  ,  , VCC);


--maxAngleCount[19] is maxAngleCount[19] at FF_X62_Y4_N56
--register power-up is low

maxAngleCount[19] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][19],  ,  , VCC);


--A1L546 is LessThan2~18 at LABCELL_X62_Y4_N0
A1L546 = ( maxAngleCount[21] & ( angleCount[20] & ( (maxAngleCount[20] & (angleCount[21] & (!maxAngleCount[19] $ (angleCount[19])))) ) ) ) # ( !maxAngleCount[21] & ( angleCount[20] & ( (maxAngleCount[20] & (!angleCount[21] & (!maxAngleCount[19] $ (angleCount[19])))) ) ) ) # ( maxAngleCount[21] & ( !angleCount[20] & ( (!maxAngleCount[20] & (angleCount[21] & (!maxAngleCount[19] $ (angleCount[19])))) ) ) ) # ( !maxAngleCount[21] & ( !angleCount[20] & ( (!maxAngleCount[20] & (!angleCount[21] & (!maxAngleCount[19] $ (angleCount[19])))) ) ) );


--maxAngleCount[17] is maxAngleCount[17] at FF_X57_Y4_N20
--register power-up is low

maxAngleCount[17] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][17],  ,  , VCC);


--A1L547 is LessThan2~19 at LABCELL_X57_Y4_N24
A1L547 = ( angleCount[17] & ( !maxAngleCount[17] ) ) # ( !angleCount[17] & ( maxAngleCount[17] ) );


--maxAngleCount[16] is maxAngleCount[16] at FF_X57_Y5_N26
--register power-up is low

maxAngleCount[16] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][16],  ,  , VCC);


--A1L548 is LessThan2~20 at LABCELL_X57_Y5_N18
A1L548 = ( angleCount[16] & ( !maxAngleCount[16] ) ) # ( !angleCount[16] & ( maxAngleCount[16] ) );


--maxAngleCount[15] is maxAngleCount[15] at FF_X62_Y4_N5
--register power-up is low

maxAngleCount[15] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][15],  ,  , VCC);


--A1L549 is LessThan2~21 at LABCELL_X62_Y4_N45
A1L549 = ( angleCount[15] & ( !maxAngleCount[15] ) ) # ( !angleCount[15] & ( maxAngleCount[15] ) );


--A1L550 is LessThan2~22 at LABCELL_X57_Y5_N48
A1L550 = ( !A1L549 & ( !A1L547 & ( (!A1L548 & (A1L546 & (!angleCount[18] $ (maxAngleCount[18])))) ) ) );


--A1L551 is LessThan2~23 at LABCELL_X57_Y5_N27
A1L551 = ( A1L534 & ( A1L543 & ( (A1L550 & ((A1L545) # (A1L541))) ) ) ) # ( !A1L534 & ( A1L543 & ( (A1L550 & (((A1L541 & !A1L536)) # (A1L545))) ) ) ) # ( A1L534 & ( !A1L543 & ( A1L550 ) ) ) # ( !A1L534 & ( !A1L543 & ( A1L550 ) ) );


--A1L552 is LessThan2~24 at LABCELL_X57_Y5_N39
A1L552 = ( !A1L547 & ( (A1L546 & (!maxAngleCount[18] $ (angleCount[18]))) ) );


--A1L553 is LessThan2~25 at LABCELL_X62_Y4_N57
A1L553 = ( maxAngleCount[21] & ( angleCount[20] & ( (!angleCount[21]) # ((maxAngleCount[19] & (maxAngleCount[20] & !angleCount[19]))) ) ) ) # ( !maxAngleCount[21] & ( angleCount[20] & ( (maxAngleCount[19] & (maxAngleCount[20] & (!angleCount[19] & !angleCount[21]))) ) ) ) # ( maxAngleCount[21] & ( !angleCount[20] & ( ((!angleCount[21]) # ((maxAngleCount[19] & !angleCount[19]))) # (maxAngleCount[20]) ) ) ) # ( !maxAngleCount[21] & ( !angleCount[20] & ( (!angleCount[21] & (((maxAngleCount[19] & !angleCount[19])) # (maxAngleCount[20]))) ) ) );


--A1L554 is LessThan2~26 at LABCELL_X57_Y5_N45
A1L554 = ( angleCount[18] & ( !A1L553 & ( (!maxAngleCount[17]) # ((!maxAngleCount[18]) # ((!A1L546) # (angleCount[17]))) ) ) ) # ( !angleCount[18] & ( !A1L553 & ( (!A1L546) # ((!maxAngleCount[18] & ((!maxAngleCount[17]) # (angleCount[17])))) ) ) );


--A1L555 is LessThan2~27 at LABCELL_X57_Y5_N30
A1L555 = ( A1L554 & ( A1L552 & ( (!maxAngleCount[16] & (((!maxAngleCount[15]) # (angleCount[15])) # (angleCount[16]))) # (maxAngleCount[16] & (angleCount[16] & ((!maxAngleCount[15]) # (angleCount[15])))) ) ) ) # ( A1L554 & ( !A1L552 ) );


--maxAngleCount[25] is maxAngleCount[25] at FF_X59_Y5_N38
--register power-up is low

maxAngleCount[25] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][25],  ,  , VCC);


--maxAngleCount[28] is maxAngleCount[28] at FF_X60_Y5_N17
--register power-up is low

maxAngleCount[28] = DFFEAS(A1L643, GLOBAL(A1L426),  ,  , A1L608,  ,  ,  ,  );


--maxAngleCount[27] is maxAngleCount[27] at FF_X59_Y5_N35
--register power-up is low

maxAngleCount[27] = DFFEAS(A1L641, GLOBAL(A1L426),  ,  , A1L608,  ,  ,  ,  );


--maxAngleCount[26] is maxAngleCount[26] at FF_X60_Y5_N56
--register power-up is low

maxAngleCount[26] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][26],  ,  , VCC);


--A1L556 is LessThan2~28 at MLABCELL_X59_Y5_N0
A1L556 = ( angleCount[26] & ( angleCount[28] & ( (maxAngleCount[28] & (maxAngleCount[26] & (!maxAngleCount[27] $ (angleCount[27])))) ) ) ) # ( !angleCount[26] & ( angleCount[28] & ( (maxAngleCount[28] & (!maxAngleCount[26] & (!maxAngleCount[27] $ (angleCount[27])))) ) ) ) # ( angleCount[26] & ( !angleCount[28] & ( (!maxAngleCount[28] & (maxAngleCount[26] & (!maxAngleCount[27] $ (angleCount[27])))) ) ) ) # ( !angleCount[26] & ( !angleCount[28] & ( (!maxAngleCount[28] & (!maxAngleCount[26] & (!maxAngleCount[27] $ (angleCount[27])))) ) ) );


--maxAngleCount[24] is maxAngleCount[24] at FF_X59_Y5_N44
--register power-up is low

maxAngleCount[24] = DFFEAS(A1L637, GLOBAL(A1L426),  ,  , A1L608,  ,  ,  ,  );


--A1L557 is LessThan2~29 at MLABCELL_X59_Y5_N24
A1L557 = ( !angleCount[24] & ( maxAngleCount[24] ) ) # ( angleCount[24] & ( !maxAngleCount[24] ) );


--maxAngleCount[23] is maxAngleCount[23] at FF_X59_Y6_N44
--register power-up is low

maxAngleCount[23] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][23],  ,  , VCC);


--A1L558 is LessThan2~30 at MLABCELL_X59_Y6_N45
A1L558 = ( maxAngleCount[23] & ( !angleCount[23] ) ) # ( !maxAngleCount[23] & ( angleCount[23] ) );


--maxAngleCount[22] is maxAngleCount[22] at FF_X59_Y6_N47
--register power-up is low

maxAngleCount[22] = DFFEAS( , GLOBAL(A1L426),  ,  , A1L608, reg[1][22],  ,  , VCC);


--A1L559 is LessThan2~31 at MLABCELL_X59_Y6_N42
A1L559 = !maxAngleCount[22] $ (!angleCount[22]);


--A1L560 is LessThan2~32 at MLABCELL_X59_Y5_N18
A1L560 = ( maxAngleCount[25] & ( !A1L559 & ( (A1L556 & (!A1L558 & (!A1L557 & angleCount[25]))) ) ) ) # ( !maxAngleCount[25] & ( !A1L559 & ( (A1L556 & (!A1L558 & (!A1L557 & !angleCount[25]))) ) ) );


--A1L561 is LessThan2~33 at MLABCELL_X59_Y5_N48
A1L561 = ( angleCount[25] & ( !A1L557 & ( (maxAngleCount[25] & A1L556) ) ) ) # ( !angleCount[25] & ( !A1L557 & ( (!maxAngleCount[25] & A1L556) ) ) );


--A1L562 is LessThan2~34 at LABCELL_X60_Y5_N57
A1L562 = ( maxAngleCount[27] & ( angleCount[26] & ( (!angleCount[28] & ((!angleCount[27]) # (maxAngleCount[28]))) # (angleCount[28] & (maxAngleCount[28] & !angleCount[27])) ) ) ) # ( !maxAngleCount[27] & ( angleCount[26] & ( (!angleCount[28] & maxAngleCount[28]) ) ) ) # ( maxAngleCount[27] & ( !angleCount[26] & ( (!angleCount[28] & (((!angleCount[27]) # (maxAngleCount[28])) # (maxAngleCount[26]))) # (angleCount[28] & (maxAngleCount[28] & ((!angleCount[27]) # (maxAngleCount[26])))) ) ) ) # ( !maxAngleCount[27] & ( !angleCount[26] & ( (!angleCount[28] & (((maxAngleCount[26] & !angleCount[27])) # (maxAngleCount[28]))) # (angleCount[28] & (maxAngleCount[26] & (maxAngleCount[28] & !angleCount[27]))) ) ) );


--A1L563 is LessThan2~35 at MLABCELL_X59_Y5_N6
A1L563 = ( A1L556 & ( !A1L562 & ( (!maxAngleCount[25] & (((!maxAngleCount[24]) # (angleCount[25])) # (angleCount[24]))) # (maxAngleCount[25] & (angleCount[25] & ((!maxAngleCount[24]) # (angleCount[24])))) ) ) ) # ( !A1L556 & ( !A1L562 ) );


--A1L564 is LessThan2~36 at MLABCELL_X59_Y5_N15
A1L564 = ( maxAngleCount[22] & ( angleCount[22] & ( (A1L563 & ((!A1L561) # ((!maxAngleCount[23]) # (angleCount[23])))) ) ) ) # ( !maxAngleCount[22] & ( angleCount[22] & ( (A1L563 & ((!A1L561) # ((!maxAngleCount[23]) # (angleCount[23])))) ) ) ) # ( maxAngleCount[22] & ( !angleCount[22] & ( (A1L563 & ((!A1L561) # ((!maxAngleCount[23] & angleCount[23])))) ) ) ) # ( !maxAngleCount[22] & ( !angleCount[22] & ( (A1L563 & ((!A1L561) # ((!maxAngleCount[23]) # (angleCount[23])))) ) ) );


--maxAngleCount[30] is maxAngleCount[30] at FF_X57_Y6_N14
--register power-up is low

maxAngleCount[30] = DFFEAS(A1L647, GLOBAL(A1L426),  ,  , A1L608,  ,  ,  ,  );


--maxAngleCount[29] is maxAngleCount[29] at FF_X57_Y6_N59
--register power-up is low

maxAngleCount[29] = DFFEAS(A1L645, GLOBAL(A1L426),  ,  , A1L608,  ,  ,  ,  );


--A1L565 is LessThan2~37 at LABCELL_X57_Y6_N36
A1L565 = ( angleCount[30] & ( (!angleCount[31] & (maxAngleCount[30] & (!angleCount[29] $ (maxAngleCount[29])))) ) ) # ( !angleCount[30] & ( (!angleCount[31] & (!maxAngleCount[30] & (!angleCount[29] $ (maxAngleCount[29])))) ) );


--A1L566 is LessThan2~38 at LABCELL_X57_Y6_N9
A1L566 = ( angleCount[29] & ( maxAngleCount[30] & ( (!angleCount[31] & angleCount[30]) ) ) ) # ( !angleCount[29] & ( maxAngleCount[30] & ( (!angleCount[31] & (!maxAngleCount[29] & angleCount[30])) ) ) ) # ( angleCount[29] & ( !maxAngleCount[30] & ( !angleCount[31] ) ) ) # ( !angleCount[29] & ( !maxAngleCount[30] & ( (!angleCount[31] & ((!maxAngleCount[29]) # (angleCount[30]))) ) ) );


--A1L567 is LessThan2~39 at LABCELL_X57_Y5_N6
A1L567 = ( A1L551 & ( A1L555 & ( (A1L566 & ((!A1L565) # ((!A1L560 & A1L564)))) ) ) ) # ( !A1L551 & ( A1L555 & ( (A1L566 & ((!A1L565) # (A1L564))) ) ) ) # ( A1L551 & ( !A1L555 & ( (A1L566 & ((!A1L565) # ((!A1L560 & A1L564)))) ) ) ) # ( !A1L551 & ( !A1L555 & ( (A1L566 & ((!A1L565) # ((!A1L560 & A1L564)))) ) ) );


--A1L819 is Selector33~0 at LABCELL_X56_Y6_N51
A1L819 = ( A1L595 & ( A1L567 & ( (!A1L479Q) # (current_state.SW_RIGHT) ) ) ) # ( !A1L595 & ( A1L567 & ( !A1L479Q ) ) ) # ( A1L595 & ( !A1L567 & ( current_state.SW_RIGHT ) ) );


--next_state.INT_RIGHT is next_state.INT_RIGHT at FF_X57_Y5_N2
--register power-up is low

next_state.INT_RIGHT = DFFEAS(A1L821, GLOBAL(A1L426), A1L786,  ,  ,  ,  ,  ,  );


--next_state.INT_LEFT is next_state.INT_LEFT at FF_X57_Y5_N23
--register power-up is low

next_state.INT_LEFT = DFFEAS(A1L823, GLOBAL(A1L426), A1L786,  ,  ,  ,  ,  ,  );


--A1L394 is angleCount[5]~0 at LABCELL_X57_Y5_N57
A1L394 = !current_state.SW_RIGHT $ (!current_state.INT_LEFT);


--A1L395 is angleCount[5]~1 at LABCELL_X57_Y6_N3
A1L395 = ( current_state.SW_RIGHT & ( !current_state.INT_RIGHT ) ) # ( !current_state.SW_RIGHT & ( current_state.INT_RIGHT ) );


--A1L811 is Selector24~0 at LABCELL_X60_Y6_N0
A1L811 = ( A1L258 & ( maxAngleCount[7] & ( ((!A1L395 & (A1L130)) # (A1L395 & ((minAngleCount[7])))) # (A1L394) ) ) ) # ( !A1L258 & ( maxAngleCount[7] & ( (!A1L395 & (((A1L394)) # (A1L130))) # (A1L395 & (((!A1L394 & minAngleCount[7])))) ) ) ) # ( A1L258 & ( !maxAngleCount[7] & ( (!A1L395 & (A1L130 & (!A1L394))) # (A1L395 & (((minAngleCount[7]) # (A1L394)))) ) ) ) # ( !A1L258 & ( !maxAngleCount[7] & ( (!A1L394 & ((!A1L395 & (A1L130)) # (A1L395 & ((minAngleCount[7]))))) ) ) );


--A1L422 is angleCount[31]~2 at LABCELL_X61_Y6_N36
A1L422 = ( A1L515 & ( A1L786 ) ) # ( !A1L515 & ( (A1L786 & (A1L479Q & !current_state.SW_RIGHT)) ) );


--A1L484 is LessThan0~0 at LABCELL_X60_Y5_N42
A1L484 = ( !A1L440Q & ( (!currCount[10] & (!currCount[6] & (!currCount[5] & !A1L444Q))) ) );


--A1L485 is LessThan0~1 at LABCELL_X63_Y6_N48
A1L485 = ( !currCount[15] & ( !A1L450Q & ( (!currCount[14] & (!A1L448Q & (!A1L457Q & !currCount[13]))) ) ) );


--A1L486 is LessThan0~2 at LABCELL_X61_Y4_N48
A1L486 = ( !currCount[18] & ( !currCount[17] & ( (!currCount[21] & (!currCount[19] & (!currCount[20] & !currCount[22]))) ) ) );


--A1L487 is LessThan0~3 at LABCELL_X60_Y4_N30
A1L487 = ( !A1L435Q & ( A1L432Q & ( (!currCount[25] & (!A1L470Q & !currCount[27])) ) ) ) # ( A1L435Q & ( !A1L432Q & ( (!currCount[25] & (!A1L470Q & (!currCount[27] & !currCount[3]))) ) ) ) # ( !A1L435Q & ( !A1L432Q & ( (!currCount[25] & (!A1L470Q & !currCount[27])) ) ) );


--A1L488 is LessThan0~4 at LABCELL_X61_Y4_N39
A1L488 = ( !currCount[29] & ( !A1L442Q & ( (!currCount[28] & (!currCount[23] & (!currCount[24] & !currCount[30]))) ) ) );


--A1L489 is LessThan0~5 at LABCELL_X61_Y4_N54
A1L489 = ( A1L484 & ( A1L487 & ( (!currCount[31] & ((!A1L486) # ((!A1L485) # (!A1L488)))) ) ) ) # ( !A1L484 & ( A1L487 & ( !currCount[31] ) ) ) # ( A1L484 & ( !A1L487 & ( !currCount[31] ) ) ) # ( !A1L484 & ( !A1L487 & ( !currCount[31] ) ) );


--A1L812 is Selector25~0 at LABCELL_X62_Y6_N21
A1L812 = ( A1L134 & ( A1L262 & ( (!A1L394 & (((!A1L395)) # (minAngleCount[6]))) # (A1L394 & (((A1L395) # (maxAngleCount[6])))) ) ) ) # ( !A1L134 & ( A1L262 & ( (!A1L394 & (minAngleCount[6] & ((A1L395)))) # (A1L394 & (((A1L395) # (maxAngleCount[6])))) ) ) ) # ( A1L134 & ( !A1L262 & ( (!A1L394 & (((!A1L395)) # (minAngleCount[6]))) # (A1L394 & (((maxAngleCount[6] & !A1L395)))) ) ) ) # ( !A1L134 & ( !A1L262 & ( (!A1L394 & (minAngleCount[6] & ((A1L395)))) # (A1L394 & (((maxAngleCount[6] & !A1L395)))) ) ) );


--A1L813 is Selector26~0 at LABCELL_X62_Y6_N42
A1L813 = ( A1L395 & ( A1L138 & ( (!A1L394 & (minAngleCount[5])) # (A1L394 & ((A1L266))) ) ) ) # ( !A1L395 & ( A1L138 & ( (!A1L394) # (maxAngleCount[5]) ) ) ) # ( A1L395 & ( !A1L138 & ( (!A1L394 & (minAngleCount[5])) # (A1L394 & ((A1L266))) ) ) ) # ( !A1L395 & ( !A1L138 & ( (A1L394 & maxAngleCount[5]) ) ) );


--A1L814 is Selector27~0 at LABCELL_X62_Y6_N12
A1L814 = ( A1L395 & ( A1L270 & ( (A1L394) # (minAngleCount[4]) ) ) ) # ( !A1L395 & ( A1L270 & ( (!A1L394 & ((A1L142))) # (A1L394 & (maxAngleCount[4])) ) ) ) # ( A1L395 & ( !A1L270 & ( (minAngleCount[4] & !A1L394) ) ) ) # ( !A1L395 & ( !A1L270 & ( (!A1L394 & ((A1L142))) # (A1L394 & (maxAngleCount[4])) ) ) );


--A1L817 is Selector30~0 at LABCELL_X60_Y8_N45
A1L817 = ( A1L146 & ( A1L274 & ( (!A1L395 & (((!maxAngleCount[1]) # (!A1L394)))) # (A1L395 & (((A1L394)) # (minAngleCount[1]))) ) ) ) # ( !A1L146 & ( A1L274 & ( (!A1L395 & (((!maxAngleCount[1] & A1L394)))) # (A1L395 & (((A1L394)) # (minAngleCount[1]))) ) ) ) # ( A1L146 & ( !A1L274 & ( (!A1L395 & (((!maxAngleCount[1]) # (!A1L394)))) # (A1L395 & (minAngleCount[1] & ((!A1L394)))) ) ) ) # ( !A1L146 & ( !A1L274 & ( (!A1L395 & (((!maxAngleCount[1] & A1L394)))) # (A1L395 & (minAngleCount[1] & ((!A1L394)))) ) ) );


--A1L818 is Selector31~0 at LABCELL_X57_Y6_N45
A1L818 = ( A1L150 & ( A1L278 & ( (!A1L394 & (((!minAngleCount[0]) # (!A1L395)))) # (A1L394 & ((!maxAngleCount[0]) # ((A1L395)))) ) ) ) # ( !A1L150 & ( A1L278 & ( (!A1L394 & (((!minAngleCount[0] & A1L395)))) # (A1L394 & ((!maxAngleCount[0]) # ((A1L395)))) ) ) ) # ( A1L150 & ( !A1L278 & ( (!A1L394 & (((!minAngleCount[0]) # (!A1L395)))) # (A1L394 & (!maxAngleCount[0] & ((!A1L395)))) ) ) ) # ( !A1L150 & ( !A1L278 & ( (!A1L394 & (((!minAngleCount[0] & A1L395)))) # (A1L394 & (!maxAngleCount[0] & ((!A1L395)))) ) ) );


--A1L815 is Selector28~0 at LABCELL_X62_Y6_N24
A1L815 = ( maxAngleCount[3] & ( minAngleCount[3] & ( (!A1L395 & (!A1L394 & ((A1L154)))) # (A1L395 & ((!A1L394) # ((A1L282)))) ) ) ) # ( !maxAngleCount[3] & ( minAngleCount[3] & ( (!A1L395 & (((A1L154)) # (A1L394))) # (A1L395 & ((!A1L394) # ((A1L282)))) ) ) ) # ( maxAngleCount[3] & ( !minAngleCount[3] & ( (!A1L395 & (!A1L394 & ((A1L154)))) # (A1L395 & (A1L394 & (A1L282))) ) ) ) # ( !maxAngleCount[3] & ( !minAngleCount[3] & ( (!A1L395 & (((A1L154)) # (A1L394))) # (A1L395 & (A1L394 & (A1L282))) ) ) );


--A1L816 is Selector29~0 at LABCELL_X62_Y6_N54
A1L816 = ( minAngleCount[2] & ( A1L286 & ( (!A1L395 & ((!A1L394 & (A1L158)) # (A1L394 & ((!maxAngleCount[2]))))) # (A1L395 & (((A1L394)))) ) ) ) # ( !minAngleCount[2] & ( A1L286 & ( ((!A1L394 & (A1L158)) # (A1L394 & ((!maxAngleCount[2])))) # (A1L395) ) ) ) # ( minAngleCount[2] & ( !A1L286 & ( (!A1L395 & ((!A1L394 & (A1L158)) # (A1L394 & ((!maxAngleCount[2]))))) ) ) ) # ( !minAngleCount[2] & ( !A1L286 & ( (!A1L395 & ((!A1L394 & (A1L158)) # (A1L394 & ((!maxAngleCount[2]))))) # (A1L395 & (((!A1L394)))) ) ) );


--A1L804 is Selector17~0 at LABCELL_X60_Y7_N36
A1L804 = ( A1L290 & ( A1L162 & ( (!A1L395 & (((!A1L394)) # (maxAngleCount[14]))) # (A1L395 & (((A1L394) # (minAngleCount[14])))) ) ) ) # ( !A1L290 & ( A1L162 & ( (!A1L395 & (((!A1L394)) # (maxAngleCount[14]))) # (A1L395 & (((minAngleCount[14] & !A1L394)))) ) ) ) # ( A1L290 & ( !A1L162 & ( (!A1L395 & (maxAngleCount[14] & ((A1L394)))) # (A1L395 & (((A1L394) # (minAngleCount[14])))) ) ) ) # ( !A1L290 & ( !A1L162 & ( (!A1L395 & (maxAngleCount[14] & ((A1L394)))) # (A1L395 & (((minAngleCount[14] & !A1L394)))) ) ) );


--A1L805 is Selector18~0 at LABCELL_X60_Y7_N30
A1L805 = ( A1L394 & ( A1L294 & ( (A1L395) # (maxAngleCount[13]) ) ) ) # ( !A1L394 & ( A1L294 & ( (!A1L395 & ((A1L166))) # (A1L395 & (minAngleCount[13])) ) ) ) # ( A1L394 & ( !A1L294 & ( (maxAngleCount[13] & !A1L395) ) ) ) # ( !A1L394 & ( !A1L294 & ( (!A1L395 & ((A1L166))) # (A1L395 & (minAngleCount[13])) ) ) );


--A1L806 is Selector19~0 at LABCELL_X60_Y7_N18
A1L806 = ( A1L394 & ( A1L298 & ( (maxAngleCount[12]) # (A1L395) ) ) ) # ( !A1L394 & ( A1L298 & ( (!A1L395 & (A1L170)) # (A1L395 & ((minAngleCount[12]))) ) ) ) # ( A1L394 & ( !A1L298 & ( (!A1L395 & maxAngleCount[12]) ) ) ) # ( !A1L394 & ( !A1L298 & ( (!A1L395 & (A1L170)) # (A1L395 & ((minAngleCount[12]))) ) ) );


--A1L807 is Selector20~0 at LABCELL_X62_Y7_N24
A1L807 = ( A1L302 & ( maxAngleCount[11] & ( ((!A1L395 & ((A1L174))) # (A1L395 & (minAngleCount[11]))) # (A1L394) ) ) ) # ( !A1L302 & ( maxAngleCount[11] & ( (!A1L395 & (((A1L174) # (A1L394)))) # (A1L395 & (minAngleCount[11] & (!A1L394))) ) ) ) # ( A1L302 & ( !maxAngleCount[11] & ( (!A1L395 & (((!A1L394 & A1L174)))) # (A1L395 & (((A1L394)) # (minAngleCount[11]))) ) ) ) # ( !A1L302 & ( !maxAngleCount[11] & ( (!A1L394 & ((!A1L395 & ((A1L174))) # (A1L395 & (minAngleCount[11])))) ) ) );


--A1L809 is Selector22~0 at LABCELL_X62_Y7_N54
A1L809 = ( A1L178 & ( maxAngleCount[9] & ( (!A1L395) # ((!A1L394 & (minAngleCount[9])) # (A1L394 & ((A1L306)))) ) ) ) # ( !A1L178 & ( maxAngleCount[9] & ( (!A1L395 & (((A1L394)))) # (A1L395 & ((!A1L394 & (minAngleCount[9])) # (A1L394 & ((A1L306))))) ) ) ) # ( A1L178 & ( !maxAngleCount[9] & ( (!A1L395 & (((!A1L394)))) # (A1L395 & ((!A1L394 & (minAngleCount[9])) # (A1L394 & ((A1L306))))) ) ) ) # ( !A1L178 & ( !maxAngleCount[9] & ( (A1L395 & ((!A1L394 & (minAngleCount[9])) # (A1L394 & ((A1L306))))) ) ) );


--A1L808 is Selector21~0 at LABCELL_X63_Y7_N0
A1L808 = ( A1L182 & ( A1L310 & ( (!A1L395 & (((!A1L394)) # (maxAngleCount[10]))) # (A1L395 & (((minAngleCount[10]) # (A1L394)))) ) ) ) # ( !A1L182 & ( A1L310 & ( (!A1L395 & (maxAngleCount[10] & (A1L394))) # (A1L395 & (((minAngleCount[10]) # (A1L394)))) ) ) ) # ( A1L182 & ( !A1L310 & ( (!A1L395 & (((!A1L394)) # (maxAngleCount[10]))) # (A1L395 & (((!A1L394 & minAngleCount[10])))) ) ) ) # ( !A1L182 & ( !A1L310 & ( (!A1L395 & (maxAngleCount[10] & (A1L394))) # (A1L395 & (((!A1L394 & minAngleCount[10])))) ) ) );


--A1L810 is Selector23~0 at LABCELL_X62_Y7_N0
A1L810 = ( A1L186 & ( maxAngleCount[8] & ( (!A1L395) # ((!A1L394 & (minAngleCount[8])) # (A1L394 & ((A1L314)))) ) ) ) # ( !A1L186 & ( maxAngleCount[8] & ( (!A1L395 & (((A1L394)))) # (A1L395 & ((!A1L394 & (minAngleCount[8])) # (A1L394 & ((A1L314))))) ) ) ) # ( A1L186 & ( !maxAngleCount[8] & ( (!A1L395 & (((!A1L394)))) # (A1L395 & ((!A1L394 & (minAngleCount[8])) # (A1L394 & ((A1L314))))) ) ) ) # ( !A1L186 & ( !maxAngleCount[8] & ( (A1L395 & ((!A1L394 & (minAngleCount[8])) # (A1L394 & ((A1L314))))) ) ) );


--A1L800 is Selector13~0 at LABCELL_X60_Y4_N42
A1L800 = ( A1L394 & ( A1L318 & ( (A1L395) # (maxAngleCount[18]) ) ) ) # ( !A1L394 & ( A1L318 & ( (!A1L395 & ((A1L190))) # (A1L395 & (minAngleCount[18])) ) ) ) # ( A1L394 & ( !A1L318 & ( (maxAngleCount[18] & !A1L395) ) ) ) # ( !A1L394 & ( !A1L318 & ( (!A1L395 & ((A1L190))) # (A1L395 & (minAngleCount[18])) ) ) );


--A1L797 is Selector10~0 at LABCELL_X62_Y4_N48
A1L797 = ( A1L394 & ( A1L194 & ( (!A1L395 & (maxAngleCount[21])) # (A1L395 & ((A1L322))) ) ) ) # ( !A1L394 & ( A1L194 & ( (!A1L395) # (minAngleCount[21]) ) ) ) # ( A1L394 & ( !A1L194 & ( (!A1L395 & (maxAngleCount[21])) # (A1L395 & ((A1L322))) ) ) ) # ( !A1L394 & ( !A1L194 & ( (A1L395 & minAngleCount[21]) ) ) );


--A1L798 is Selector11~0 at LABCELL_X62_Y4_N6
A1L798 = ( A1L394 & ( maxAngleCount[20] & ( (!A1L395) # (A1L326) ) ) ) # ( !A1L394 & ( maxAngleCount[20] & ( (!A1L395 & ((A1L198))) # (A1L395 & (minAngleCount[20])) ) ) ) # ( A1L394 & ( !maxAngleCount[20] & ( (A1L395 & A1L326) ) ) ) # ( !A1L394 & ( !maxAngleCount[20] & ( (!A1L395 & ((A1L198))) # (A1L395 & (minAngleCount[20])) ) ) );


--A1L799 is Selector12~0 at LABCELL_X62_Y4_N12
A1L799 = ( A1L394 & ( maxAngleCount[19] & ( (!A1L395) # (A1L330) ) ) ) # ( !A1L394 & ( maxAngleCount[19] & ( (!A1L395 & ((A1L202))) # (A1L395 & (minAngleCount[19])) ) ) ) # ( A1L394 & ( !maxAngleCount[19] & ( (A1L395 & A1L330) ) ) ) # ( !A1L394 & ( !maxAngleCount[19] & ( (!A1L395 & ((A1L202))) # (A1L395 & (minAngleCount[19])) ) ) );


--A1L801 is Selector14~0 at LABCELL_X61_Y4_N45
A1L801 = ( A1L206 & ( A1L334 & ( (!A1L395 & (((!A1L394)) # (maxAngleCount[17]))) # (A1L395 & (((A1L394) # (minAngleCount[17])))) ) ) ) # ( !A1L206 & ( A1L334 & ( (!A1L395 & (maxAngleCount[17] & ((A1L394)))) # (A1L395 & (((A1L394) # (minAngleCount[17])))) ) ) ) # ( A1L206 & ( !A1L334 & ( (!A1L395 & (((!A1L394)) # (maxAngleCount[17]))) # (A1L395 & (((minAngleCount[17] & !A1L394)))) ) ) ) # ( !A1L206 & ( !A1L334 & ( (!A1L395 & (maxAngleCount[17] & ((A1L394)))) # (A1L395 & (((minAngleCount[17] & !A1L394)))) ) ) );


--A1L802 is Selector15~0 at LABCELL_X62_Y4_N33
A1L802 = ( maxAngleCount[16] & ( A1L210 & ( (!A1L395) # ((!A1L394 & ((minAngleCount[16]))) # (A1L394 & (A1L338))) ) ) ) # ( !maxAngleCount[16] & ( A1L210 & ( (!A1L394 & (((!A1L395) # (minAngleCount[16])))) # (A1L394 & (A1L338 & ((A1L395)))) ) ) ) # ( maxAngleCount[16] & ( !A1L210 & ( (!A1L394 & (((minAngleCount[16] & A1L395)))) # (A1L394 & (((!A1L395)) # (A1L338))) ) ) ) # ( !maxAngleCount[16] & ( !A1L210 & ( (A1L395 & ((!A1L394 & ((minAngleCount[16]))) # (A1L394 & (A1L338)))) ) ) );


--A1L803 is Selector16~0 at LABCELL_X62_Y4_N24
A1L803 = ( A1L342 & ( maxAngleCount[15] & ( ((!A1L395 & ((A1L214))) # (A1L395 & (minAngleCount[15]))) # (A1L394) ) ) ) # ( !A1L342 & ( maxAngleCount[15] & ( (!A1L395 & (((A1L214) # (A1L394)))) # (A1L395 & (minAngleCount[15] & (!A1L394))) ) ) ) # ( A1L342 & ( !maxAngleCount[15] & ( (!A1L395 & (((!A1L394 & A1L214)))) # (A1L395 & (((A1L394)) # (minAngleCount[15]))) ) ) ) # ( !A1L342 & ( !maxAngleCount[15] & ( (!A1L394 & ((!A1L395 & ((A1L214))) # (A1L395 & (minAngleCount[15])))) ) ) );


--A1L793 is Selector6~0 at LABCELL_X60_Y5_N48
A1L793 = ( A1L218 & ( A1L346 & ( (!A1L395 & (((!A1L394)) # (maxAngleCount[25]))) # (A1L395 & (((minAngleCount[25]) # (A1L394)))) ) ) ) # ( !A1L218 & ( A1L346 & ( (!A1L395 & (maxAngleCount[25] & (A1L394))) # (A1L395 & (((minAngleCount[25]) # (A1L394)))) ) ) ) # ( A1L218 & ( !A1L346 & ( (!A1L395 & (((!A1L394)) # (maxAngleCount[25]))) # (A1L395 & (((!A1L394 & minAngleCount[25])))) ) ) ) # ( !A1L218 & ( !A1L346 & ( (!A1L395 & (maxAngleCount[25] & (A1L394))) # (A1L395 & (((!A1L394 & minAngleCount[25])))) ) ) );


--A1L790 is Selector3~0 at LABCELL_X60_Y5_N30
A1L790 = ( A1L222 & ( A1L350 & ( (!A1L395 & (((!A1L394) # (maxAngleCount[28])))) # (A1L395 & (((A1L394)) # (minAngleCount[28]))) ) ) ) # ( !A1L222 & ( A1L350 & ( (!A1L395 & (((A1L394 & maxAngleCount[28])))) # (A1L395 & (((A1L394)) # (minAngleCount[28]))) ) ) ) # ( A1L222 & ( !A1L350 & ( (!A1L395 & (((!A1L394) # (maxAngleCount[28])))) # (A1L395 & (minAngleCount[28] & (!A1L394))) ) ) ) # ( !A1L222 & ( !A1L350 & ( (!A1L395 & (((A1L394 & maxAngleCount[28])))) # (A1L395 & (minAngleCount[28] & (!A1L394))) ) ) );


--A1L791 is Selector4~0 at LABCELL_X60_Y5_N36
A1L791 = ( A1L354 & ( A1L226 & ( (!A1L394 & (((!A1L395) # (minAngleCount[27])))) # (A1L394 & (((A1L395)) # (maxAngleCount[27]))) ) ) ) # ( !A1L354 & ( A1L226 & ( (!A1L394 & (((!A1L395) # (minAngleCount[27])))) # (A1L394 & (maxAngleCount[27] & (!A1L395))) ) ) ) # ( A1L354 & ( !A1L226 & ( (!A1L394 & (((A1L395 & minAngleCount[27])))) # (A1L394 & (((A1L395)) # (maxAngleCount[27]))) ) ) ) # ( !A1L354 & ( !A1L226 & ( (!A1L394 & (((A1L395 & minAngleCount[27])))) # (A1L394 & (maxAngleCount[27] & (!A1L395))) ) ) );


--A1L792 is Selector5~0 at LABCELL_X60_Y5_N6
A1L792 = ( A1L230 & ( A1L358 & ( (!A1L394 & ((!A1L395) # ((minAngleCount[26])))) # (A1L394 & (((maxAngleCount[26])) # (A1L395))) ) ) ) # ( !A1L230 & ( A1L358 & ( (!A1L394 & (A1L395 & ((minAngleCount[26])))) # (A1L394 & (((maxAngleCount[26])) # (A1L395))) ) ) ) # ( A1L230 & ( !A1L358 & ( (!A1L394 & ((!A1L395) # ((minAngleCount[26])))) # (A1L394 & (!A1L395 & (maxAngleCount[26]))) ) ) ) # ( !A1L230 & ( !A1L358 & ( (!A1L394 & (A1L395 & ((minAngleCount[26])))) # (A1L394 & (!A1L395 & (maxAngleCount[26]))) ) ) );


--A1L794 is Selector7~0 at LABCELL_X60_Y5_N0
A1L794 = ( A1L362 & ( A1L234 & ( (!A1L394 & (((!A1L395)) # (minAngleCount[24]))) # (A1L394 & (((maxAngleCount[24]) # (A1L395)))) ) ) ) # ( !A1L362 & ( A1L234 & ( (!A1L394 & (((!A1L395)) # (minAngleCount[24]))) # (A1L394 & (((!A1L395 & maxAngleCount[24])))) ) ) ) # ( A1L362 & ( !A1L234 & ( (!A1L394 & (minAngleCount[24] & (A1L395))) # (A1L394 & (((maxAngleCount[24]) # (A1L395)))) ) ) ) # ( !A1L362 & ( !A1L234 & ( (!A1L394 & (minAngleCount[24] & (A1L395))) # (A1L394 & (((!A1L395 & maxAngleCount[24])))) ) ) );


--A1L795 is Selector8~0 at MLABCELL_X59_Y6_N36
A1L795 = ( A1L395 & ( A1L366 & ( (minAngleCount[23]) # (A1L394) ) ) ) # ( !A1L395 & ( A1L366 & ( (!A1L394 & (A1L238)) # (A1L394 & ((maxAngleCount[23]))) ) ) ) # ( A1L395 & ( !A1L366 & ( (!A1L394 & minAngleCount[23]) ) ) ) # ( !A1L395 & ( !A1L366 & ( (!A1L394 & (A1L238)) # (A1L394 & ((maxAngleCount[23]))) ) ) );


--A1L796 is Selector9~0 at MLABCELL_X59_Y6_N54
A1L796 = ( A1L370 & ( A1L242 & ( (!A1L394 & (((!A1L395)) # (minAngleCount[22]))) # (A1L394 & (((maxAngleCount[22]) # (A1L395)))) ) ) ) # ( !A1L370 & ( A1L242 & ( (!A1L394 & (((!A1L395)) # (minAngleCount[22]))) # (A1L394 & (((!A1L395 & maxAngleCount[22])))) ) ) ) # ( A1L370 & ( !A1L242 & ( (!A1L394 & (minAngleCount[22] & (A1L395))) # (A1L394 & (((maxAngleCount[22]) # (A1L395)))) ) ) ) # ( !A1L370 & ( !A1L242 & ( (!A1L394 & (minAngleCount[22] & (A1L395))) # (A1L394 & (((!A1L395 & maxAngleCount[22])))) ) ) );


--A1L787 is Selector0~0 at LABCELL_X57_Y6_N24
A1L787 = ( A1L246 & ( A1L374 & ( !A1L394 $ (A1L395) ) ) ) # ( !A1L246 & ( A1L374 & ( (A1L394 & A1L395) ) ) ) # ( A1L246 & ( !A1L374 & ( (!A1L394 & !A1L395) ) ) );


--A1L788 is Selector1~0 at LABCELL_X60_Y6_N42
A1L788 = ( maxAngleCount[30] & ( A1L250 & ( (!A1L395) # ((!A1L394 & ((minAngleCount[30]))) # (A1L394 & (A1L378))) ) ) ) # ( !maxAngleCount[30] & ( A1L250 & ( (!A1L394 & ((!A1L395) # ((minAngleCount[30])))) # (A1L394 & (A1L395 & (A1L378))) ) ) ) # ( maxAngleCount[30] & ( !A1L250 & ( (!A1L394 & (A1L395 & ((minAngleCount[30])))) # (A1L394 & ((!A1L395) # ((A1L378)))) ) ) ) # ( !maxAngleCount[30] & ( !A1L250 & ( (A1L395 & ((!A1L394 & ((minAngleCount[30]))) # (A1L394 & (A1L378)))) ) ) );


--A1L789 is Selector2~0 at MLABCELL_X59_Y6_N48
A1L789 = ( A1L254 & ( A1L382 & ( (!A1L394 & (((!A1L395) # (minAngleCount[29])))) # (A1L394 & (((A1L395)) # (maxAngleCount[29]))) ) ) ) # ( !A1L254 & ( A1L382 & ( (!A1L394 & (((A1L395 & minAngleCount[29])))) # (A1L394 & (((A1L395)) # (maxAngleCount[29]))) ) ) ) # ( A1L254 & ( !A1L382 & ( (!A1L394 & (((!A1L395) # (minAngleCount[29])))) # (A1L394 & (maxAngleCount[29] & (!A1L395))) ) ) ) # ( !A1L254 & ( !A1L382 & ( (!A1L394 & (((A1L395 & minAngleCount[29])))) # (A1L394 & (maxAngleCount[29] & (!A1L395))) ) ) );


--next_state.SW_RIGHT is next_state.SW_RIGHT at FF_X57_Y5_N38
--register power-up is low

next_state.SW_RIGHT = DFFEAS(A1L820, GLOBAL(A1L426), A1L786,  , A1L822,  ,  ,  ,  );


--reg[0][7] is reg[0][7] at FF_X63_Y5_N2
--register power-up is low

reg[0][7] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L841,  ,  , VCC);


--A1L608 is maxAngleCount[0]~0 at LABCELL_X57_Y4_N42
A1L608 = ( A1L786 & ( !A1L890 ) );


--reg[0][6] is reg[0][6] at FF_X59_Y4_N49
--register power-up is low

reg[0][6] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L839,  ,  , VCC);


--reg[0][5] is reg[0][5] at FF_X63_Y5_N11
--register power-up is low

reg[0][5] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L837,  ,  , VCC);


--reg[0][4] is reg[0][4] at FF_X63_Y5_N29
--register power-up is low

reg[0][4] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L835,  ,  , VCC);


--reg[0][1] is reg[0][1] at FF_X59_Y5_N13
--register power-up is low

reg[0][1] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L829,  ,  , VCC);


--reg[0][0] is reg[0][0] at FF_X56_Y5_N19
--register power-up is low

reg[0][0] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L827,  ,  , VCC);


--reg[0][3] is reg[0][3] at FF_X63_Y6_N22
--register power-up is low

reg[0][3] = DFFEAS(A1L697, GLOBAL(A1L426), A1L786,  , A1L714,  ,  ,  ,  );


--reg[0][2] is reg[0][2] at FF_X62_Y3_N16
--register power-up is low

reg[0][2] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L831,  ,  , VCC);


--reg[0][14] is reg[0][14] at FF_X63_Y5_N55
--register power-up is low

reg[0][14] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L855,  ,  , VCC);


--reg[0][13] is reg[0][13] at FF_X63_Y5_N38
--register power-up is low

reg[0][13] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L853,  ,  , VCC);


--reg[0][12] is reg[0][12] at FF_X63_Y5_N19
--register power-up is low

reg[0][12] = DFFEAS(A1L708, GLOBAL(A1L426), A1L786,  , A1L714,  ,  ,  ,  );


--reg[0][11] is reg[0][11] at FF_X59_Y5_N22
--register power-up is low

reg[0][11] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L849,  ,  , VCC);


--reg[0][9] is reg[0][9] at FF_X59_Y5_N4
--register power-up is low

reg[0][9] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L845,  ,  , VCC);


--reg[0][10] is reg[0][10] at FF_X63_Y5_N23
--register power-up is low

reg[0][10] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L847,  ,  , VCC);


--reg[0][8] is reg[0][8] at FF_X59_Y5_N55
--register power-up is low

reg[0][8] = DFFEAS(A1L703, GLOBAL(A1L426), A1L786,  , A1L714,  ,  ,  ,  );


--reg[0][18] is reg[0][18] at FF_X55_Y5_N13
--register power-up is low

reg[0][18] = DFFEAS(A1L717, GLOBAL(A1L426), A1L786,  , A1L714,  ,  ,  ,  );


--reg[0][21] is reg[0][21] at FF_X62_Y3_N34
--register power-up is low

reg[0][21] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L869,  ,  , VCC);


--reg[0][20] is reg[0][20] at FF_X62_Y3_N52
--register power-up is low

reg[0][20] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L867,  ,  , VCC);


--reg[0][19] is reg[0][19] at FF_X62_Y3_N50
--register power-up is low

reg[0][19] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L865,  ,  , VCC);


--reg[0][17] is reg[0][17] at FF_X59_Y5_N52
--register power-up is low

reg[0][17] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L861,  ,  , VCC);


--reg[0][16] is reg[0][16] at FF_X62_Y3_N23
--register power-up is low

reg[0][16] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L859,  ,  , VCC);


--reg[0][15] is reg[0][15] at FF_X59_Y4_N46
--register power-up is low

reg[0][15] = DFFEAS(A1L712, GLOBAL(A1L426), A1L786,  , A1L714,  ,  ,  ,  );


--reg[0][25] is reg[0][25] at FF_X56_Y5_N22
--register power-up is low

reg[0][25] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L877,  ,  , VCC);


--reg[0][28] is reg[0][28] at FF_X55_Y5_N34
--register power-up is low

reg[0][28] = DFFEAS(A1L729, GLOBAL(A1L426), A1L786,  , A1L714,  ,  ,  ,  );


--reg[0][27] is reg[0][27] at FF_X55_Y5_N49
--register power-up is low

reg[0][27] = DFFEAS(A1L727, GLOBAL(A1L426), A1L786,  , A1L714,  ,  ,  ,  );


--reg[0][26] is reg[0][26] at FF_X56_Y5_N52
--register power-up is low

reg[0][26] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L879,  ,  , VCC);


--reg[0][24] is reg[0][24] at FF_X56_Y5_N32
--register power-up is low

reg[0][24] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L875,  ,  , VCC);


--reg[0][23] is reg[0][23] at FF_X56_Y5_N50
--register power-up is low

reg[0][23] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L873,  ,  , VCC);


--reg[0][22] is reg[0][22] at FF_X59_Y5_N29
--register power-up is low

reg[0][22] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L871,  ,  , VCC);


--reg[0][30] is reg[0][30] at FF_X56_Y5_N14
--register power-up is low

reg[0][30] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L714, A1L887,  ,  , VCC);


--reg[0][29] is reg[0][29] at FF_X59_Y4_N13
--register power-up is low

reg[0][29] = DFFEAS(A1L731, GLOBAL(A1L426), A1L786,  , A1L714,  ,  ,  ,  );


--next_state.SW_LEFT is next_state.SW_LEFT at FF_X57_Y5_N40
--register power-up is low

next_state.SW_LEFT = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L822, A1L686,  ,  , VCC);


--reg[1][7] is reg[1][7] at FF_X56_Y6_N19
--register power-up is low

reg[1][7] = DFFEAS(A1L747, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][6] is reg[1][6] at FF_X59_Y4_N10
--register power-up is low

reg[1][6] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L839,  ,  , VCC);


--reg[1][5] is reg[1][5] at FF_X56_Y6_N40
--register power-up is low

reg[1][5] = DFFEAS(A1L744, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][4] is reg[1][4] at FF_X63_Y4_N1
--register power-up is low

reg[1][4] = DFFEAS(A1L742, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][1] is reg[1][1] at FF_X56_Y6_N32
--register power-up is low

reg[1][1] = DFFEAS(A1L737, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][0] is reg[1][0] at FF_X56_Y6_N16
--register power-up is low

reg[1][0] = DFFEAS(A1L735, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][3] is reg[1][3] at FF_X63_Y6_N16
--register power-up is low

reg[1][3] = DFFEAS(A1L740, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][2] is reg[1][2] at FF_X61_Y6_N52
--register power-up is low

reg[1][2] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L831,  ,  , VCC);


--reg[1][14] is reg[1][14] at FF_X63_Y7_N56
--register power-up is low

reg[1][14] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L855,  ,  , VCC);


--reg[1][13] is reg[1][13] at FF_X63_Y7_N52
--register power-up is low

reg[1][13] = DFFEAS(A1L757, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][12] is reg[1][12] at FF_X63_Y7_N34
--register power-up is low

reg[1][12] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L851,  ,  , VCC);


--reg[1][11] is reg[1][11] at FF_X63_Y7_N11
--register power-up is low

reg[1][11] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L849,  ,  , VCC);


--reg[1][9] is reg[1][9] at FF_X63_Y7_N13
--register power-up is low

reg[1][9] = DFFEAS(A1L751, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][10] is reg[1][10] at FF_X63_Y7_N44
--register power-up is low

reg[1][10] = DFFEAS(A1L753, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][8] is reg[1][8] at FF_X63_Y7_N38
--register power-up is low

reg[1][8] = DFFEAS(A1L749, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][18] is reg[1][18] at FF_X55_Y5_N58
--register power-up is low

reg[1][18] = DFFEAS(A1L766, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][21] is reg[1][21] at FF_X61_Y4_N58
--register power-up is low

reg[1][21] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L869,  ,  , VCC);


--reg[1][20] is reg[1][20] at FF_X59_Y4_N37
--register power-up is low

reg[1][20] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L867,  ,  , VCC);


--reg[1][19] is reg[1][19] at FF_X63_Y4_N55
--register power-up is low

reg[1][19] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L865,  ,  , VCC);


--reg[1][17] is reg[1][17] at FF_X57_Y4_N50
--register power-up is low

reg[1][17] = DFFEAS(A1L764, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][16] is reg[1][16] at FF_X57_Y4_N31
--register power-up is low

reg[1][16] = DFFEAS(A1L762, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][15] is reg[1][15] at FF_X59_Y4_N55
--register power-up is low

reg[1][15] = DFFEAS(A1L760, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][25] is reg[1][25] at FF_X55_Y5_N37
--register power-up is low

reg[1][25] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L877,  ,  , VCC);


--reg[1][28] is reg[1][28] at FF_X55_Y5_N22
--register power-up is low

reg[1][28] = DFFEAS(A1L779, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][27] is reg[1][27] at FF_X55_Y5_N25
--register power-up is low

reg[1][27] = DFFEAS(A1L777, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][26] is reg[1][26] at FF_X55_Y5_N43
--register power-up is low

reg[1][26] = DFFEAS(A1L775, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][24] is reg[1][24] at FF_X55_Y5_N2
--register power-up is low

reg[1][24] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L875,  ,  , VCC);


--reg[1][23] is reg[1][23] at FF_X56_Y6_N58
--register power-up is low

reg[1][23] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L873,  ,  , VCC);


--reg[1][22] is reg[1][22] at FF_X61_Y6_N47
--register power-up is low

reg[1][22] = DFFEAS( , GLOBAL(A1L426), A1L786,  , A1L784, A1L871,  ,  , VCC);


--reg[1][30] is reg[1][30] at FF_X56_Y6_N25
--register power-up is low

reg[1][30] = DFFEAS(A1L783, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--reg[1][29] is reg[1][29] at FF_X59_Y4_N28
--register power-up is low

reg[1][29] = DFFEAS(A1L781, GLOBAL(A1L426), A1L786,  , A1L784,  ,  ,  ,  );


--A1L821 is Selector35~0 at LABCELL_X57_Y5_N0
A1L821 = ( A1L595 & ( ((!A1L567 & (!current_state.SW_LEFT & next_state.INT_RIGHT))) # (current_state.SW_RIGHT) ) ) # ( !A1L595 & ( (next_state.INT_RIGHT & (((!A1L567 & !current_state.SW_LEFT)) # (current_state.SW_RIGHT))) ) );


--A1L823 is Selector37~0 at LABCELL_X57_Y5_N21
A1L823 = ( A1L567 & ( (!current_state.SW_LEFT) # ((current_state.SW_RIGHT & (!A1L595 & next_state.INT_LEFT))) ) ) # ( !A1L567 & ( (next_state.INT_LEFT & ((!current_state.SW_LEFT) # ((current_state.SW_RIGHT & !A1L595)))) ) );


--A1L820 is Selector34~0 at LABCELL_X57_Y5_N36
A1L820 = (!current_state.INT_RIGHT & current_state.INT_LEFT);


--A1L822 is Selector36~0 at LABCELL_X57_Y5_N54
A1L822 = ( A1L595 & ( (((A1L567) # (current_state.INT_RIGHT)) # (current_state.INT_LEFT)) # (current_state.SW_RIGHT) ) ) # ( !A1L595 & ( (((!current_state.SW_RIGHT & A1L567)) # (current_state.INT_RIGHT)) # (current_state.INT_LEFT) ) );


--A1L714 is reg[0][16]~0 at LABCELL_X57_Y4_N12
A1L714 = ( A1L890 & ( !A1L386 ) );


--A1L784 is reg[1][31]~1 at LABCELL_X53_Y5_N12
A1L784 = ( A1L386 & ( A1L890 ) );


--A1L516 is LessThan1~26 at LABCELL_X62_Y6_N36
A1L516 = ( currCount[4] & ( A1L438Q & ( (angleCount[6] & (angleCount[4] & (!currCount[5] $ (angleCount[5])))) ) ) ) # ( !currCount[4] & ( A1L438Q & ( (angleCount[6] & (!angleCount[4] & (!currCount[5] $ (angleCount[5])))) ) ) ) # ( currCount[4] & ( !A1L438Q & ( (!angleCount[6] & (angleCount[4] & (!currCount[5] $ (angleCount[5])))) ) ) ) # ( !currCount[4] & ( !A1L438Q & ( (!angleCount[6] & (!angleCount[4] & (!currCount[5] $ (angleCount[5])))) ) ) );


--A1L517 is LessThan1~27 at LABCELL_X62_Y6_N48
A1L517 = ( currCount[1] & ( (angleCount[0] & (angleCount[1] & !currCount[0])) ) ) # ( !currCount[1] & ( ((angleCount[0] & !currCount[0])) # (angleCount[1]) ) );


--A1L518 is LessThan1~28 at LABCELL_X62_Y4_N36
A1L518 = ( currCount[17] & ( A1L455Q & ( (angleCount[17] & (angleCount[15] & (!angleCount[16] $ (A1L457Q)))) ) ) ) # ( !currCount[17] & ( A1L455Q & ( (!angleCount[17] & (angleCount[15] & (!angleCount[16] $ (A1L457Q)))) ) ) ) # ( currCount[17] & ( !A1L455Q & ( (angleCount[17] & (!angleCount[15] & (!angleCount[16] $ (A1L457Q)))) ) ) ) # ( !currCount[17] & ( !A1L455Q & ( (!angleCount[17] & (!angleCount[15] & (!angleCount[16] $ (A1L457Q)))) ) ) );


--A1L519 is LessThan1~29 at LABCELL_X62_Y4_N42
A1L519 = ( currCount[20] & ( (angleCount[20] & (!angleCount[19] $ (currCount[19]))) ) ) # ( !currCount[20] & ( (!angleCount[20] & (!angleCount[19] $ (currCount[19]))) ) );


--A1L520 is LessThan1~30 at LABCELL_X62_Y3_N18
A1L520 = ( angleCount[15] & ( currCount[18] & ( (angleCount[18] & ((!A1L457Q & ((!A1L455Q) # (angleCount[16]))) # (A1L457Q & (!A1L455Q & angleCount[16])))) ) ) ) # ( !angleCount[15] & ( currCount[18] & ( (!A1L457Q & (angleCount[18] & angleCount[16])) ) ) ) # ( angleCount[15] & ( !currCount[18] & ( ((!A1L457Q & ((!A1L455Q) # (angleCount[16]))) # (A1L457Q & (!A1L455Q & angleCount[16]))) # (angleCount[18]) ) ) ) # ( !angleCount[15] & ( !currCount[18] & ( ((!A1L457Q & angleCount[16])) # (angleCount[18]) ) ) );


--A1L521 is LessThan1~31 at LABCELL_X62_Y3_N39
A1L521 = ( currCount[18] & ( angleCount[18] & ( (angleCount[17] & !currCount[17]) ) ) ) # ( !currCount[18] & ( angleCount[18] ) ) # ( !currCount[18] & ( !angleCount[18] & ( (angleCount[17] & !currCount[17]) ) ) );


--A1L522 is LessThan1~32 at LABCELL_X60_Y4_N12
A1L522 = ( angleCount[25] & ( angleCount[22] & ( (!currCount[25]) # ((!currCount[22] & ((!currCount[23]) # (angleCount[23]))) # (currCount[22] & (!currCount[23] & angleCount[23]))) ) ) ) # ( !angleCount[25] & ( angleCount[22] & ( (!currCount[25] & ((!currCount[22] & ((!currCount[23]) # (angleCount[23]))) # (currCount[22] & (!currCount[23] & angleCount[23])))) ) ) ) # ( angleCount[25] & ( !angleCount[22] & ( (!currCount[25]) # ((!currCount[23] & angleCount[23])) ) ) ) # ( !angleCount[25] & ( !angleCount[22] & ( (!currCount[25] & (!currCount[23] & angleCount[23])) ) ) );


--A1L523 is LessThan1~33 at LABCELL_X60_Y4_N24
A1L523 = ( angleCount[24] & ( (!currCount[24] & ((!currCount[25]) # (angleCount[25]))) # (currCount[24] & (!currCount[25] & angleCount[25])) ) ) # ( !angleCount[24] & ( (!currCount[25] & angleCount[25]) ) );


--A1L596 is LessThan3~28 at LABCELL_X63_Y5_N39
A1L596 = ( A1L435Q & ( currCount[5] & ( (minAngleCount[4] & (minAngleCount[5] & (!A1L438Q $ (minAngleCount[6])))) ) ) ) # ( !A1L435Q & ( currCount[5] & ( (!minAngleCount[4] & (minAngleCount[5] & (!A1L438Q $ (minAngleCount[6])))) ) ) ) # ( A1L435Q & ( !currCount[5] & ( (minAngleCount[4] & (!minAngleCount[5] & (!A1L438Q $ (minAngleCount[6])))) ) ) ) # ( !A1L435Q & ( !currCount[5] & ( (!minAngleCount[4] & (!minAngleCount[5] & (!A1L438Q $ (minAngleCount[6])))) ) ) );


--A1L597 is LessThan3~29 at LABCELL_X60_Y5_N27
A1L597 = ( A1L429Q & ( minAngleCount[1] & ( (minAngleCount[0] & currCount[1]) ) ) ) # ( A1L429Q & ( !minAngleCount[1] & ( (currCount[1]) # (minAngleCount[0]) ) ) ) # ( !A1L429Q & ( !minAngleCount[1] & ( currCount[1] ) ) );


--A1L524 is LessThan1~34 at LABCELL_X60_Y7_N15
A1L524 = ( angleCount[8] & ( A1L442Q & ( (!A1L448Q & (!angleCount[11] & (!angleCount[10] $ (A1L446Q)))) # (A1L448Q & (angleCount[11] & (!angleCount[10] $ (A1L446Q)))) ) ) ) # ( !angleCount[8] & ( !A1L442Q & ( (!A1L448Q & (!angleCount[11] & (!angleCount[10] $ (A1L446Q)))) # (A1L448Q & (angleCount[11] & (!angleCount[10] $ (A1L446Q)))) ) ) );


--A1L525 is LessThan1~35 at LABCELL_X60_Y7_N57
A1L525 = ( currCount[13] & ( (angleCount[13] & (!angleCount[12] $ (A1L450Q))) ) ) # ( !currCount[13] & ( (!angleCount[13] & (!angleCount[12] $ (A1L450Q))) ) );


--A1L526 is LessThan1~36 at LABCELL_X60_Y7_N12
A1L526 = ( A1L450Q & ( angleCount[12] & ( (!A1L448Q & (!angleCount[11] & (!angleCount[10] $ (A1L446Q)))) # (A1L448Q & (angleCount[11] & (!angleCount[10] $ (A1L446Q)))) ) ) ) # ( !A1L450Q & ( !angleCount[12] & ( (!A1L448Q & (!angleCount[11] & (!angleCount[10] $ (A1L446Q)))) # (A1L448Q & (angleCount[11] & (!angleCount[10] $ (A1L446Q)))) ) ) );


--A1L527 is LessThan1~37 at LABCELL_X60_Y7_N54
A1L527 = ( A1L453Q & ( (angleCount[14] & (!angleCount[13] $ (currCount[13]))) ) ) # ( !A1L453Q & ( (!angleCount[14] & (!angleCount[13] $ (currCount[13]))) ) );


--A1L598 is LessThan3~30 at LABCELL_X62_Y5_N54
A1L598 = ( minAngleCount[11] & ( minAngleCount[8] & ( (A1L442Q & (currCount[11] & (!minAngleCount[10] $ (A1L446Q)))) ) ) ) # ( !minAngleCount[11] & ( minAngleCount[8] & ( (A1L442Q & (!currCount[11] & (!minAngleCount[10] $ (A1L446Q)))) ) ) ) # ( minAngleCount[11] & ( !minAngleCount[8] & ( (!A1L442Q & (currCount[11] & (!minAngleCount[10] $ (A1L446Q)))) ) ) ) # ( !minAngleCount[11] & ( !minAngleCount[8] & ( (!A1L442Q & (!currCount[11] & (!minAngleCount[10] $ (A1L446Q)))) ) ) );


--A1L599 is LessThan3~31 at LABCELL_X62_Y5_N36
A1L599 = ( A1L450Q & ( (minAngleCount[12] & (!minAngleCount[13] $ (currCount[13]))) ) ) # ( !A1L450Q & ( (!minAngleCount[12] & (!minAngleCount[13] $ (currCount[13]))) ) );


--A1L600 is LessThan3~32 at LABCELL_X62_Y5_N33
A1L600 = ( minAngleCount[12] & ( A1L446Q & ( (minAngleCount[10] & (A1L450Q & (!minAngleCount[11] $ (currCount[11])))) ) ) ) # ( !minAngleCount[12] & ( A1L446Q & ( (minAngleCount[10] & (!A1L450Q & (!minAngleCount[11] $ (currCount[11])))) ) ) ) # ( minAngleCount[12] & ( !A1L446Q & ( (!minAngleCount[10] & (A1L450Q & (!minAngleCount[11] $ (currCount[11])))) ) ) ) # ( !minAngleCount[12] & ( !A1L446Q & ( (!minAngleCount[10] & (!A1L450Q & (!minAngleCount[11] $ (currCount[11])))) ) ) );


--A1L601 is LessThan3~33 at LABCELL_X62_Y5_N48
A1L601 = ( minAngleCount[13] & ( (currCount[13] & (!currCount[14] $ (minAngleCount[14]))) ) ) # ( !minAngleCount[13] & ( (!currCount[13] & (!currCount[14] $ (minAngleCount[14]))) ) );


--A1L602 is LessThan3~34 at LABCELL_X62_Y5_N21
A1L602 = ( minAngleCount[15] & ( minAngleCount[16] & ( (A1L457Q & (A1L455Q & (!currCount[17] $ (minAngleCount[17])))) ) ) ) # ( !minAngleCount[15] & ( minAngleCount[16] & ( (A1L457Q & (!A1L455Q & (!currCount[17] $ (minAngleCount[17])))) ) ) ) # ( minAngleCount[15] & ( !minAngleCount[16] & ( (!A1L457Q & (A1L455Q & (!currCount[17] $ (minAngleCount[17])))) ) ) ) # ( !minAngleCount[15] & ( !minAngleCount[16] & ( (!A1L457Q & (!A1L455Q & (!currCount[17] $ (minAngleCount[17])))) ) ) );


--A1L603 is LessThan3~35 at LABCELL_X62_Y3_N48
A1L603 = ( currCount[20] & ( currCount[19] & ( (minAngleCount[19] & minAngleCount[20]) ) ) ) # ( !currCount[20] & ( currCount[19] & ( (minAngleCount[19] & !minAngleCount[20]) ) ) ) # ( currCount[20] & ( !currCount[19] & ( (!minAngleCount[19] & minAngleCount[20]) ) ) ) # ( !currCount[20] & ( !currCount[19] & ( (!minAngleCount[19] & !minAngleCount[20]) ) ) );


--A1L604 is LessThan3~36 at LABCELL_X62_Y3_N27
A1L604 = ( currCount[18] & ( currCount[15] & ( (!minAngleCount[18]) # ((!minAngleCount[16] & ((!minAngleCount[15]) # (A1L457Q))) # (minAngleCount[16] & (!minAngleCount[15] & A1L457Q))) ) ) ) # ( !currCount[18] & ( currCount[15] & ( (!minAngleCount[18] & ((!minAngleCount[16] & ((!minAngleCount[15]) # (A1L457Q))) # (minAngleCount[16] & (!minAngleCount[15] & A1L457Q)))) ) ) ) # ( currCount[18] & ( !currCount[15] & ( (!minAngleCount[18]) # ((!minAngleCount[16] & A1L457Q)) ) ) ) # ( !currCount[18] & ( !currCount[15] & ( (!minAngleCount[16] & (!minAngleCount[18] & A1L457Q)) ) ) );


--A1L605 is LessThan3~37 at LABCELL_X62_Y5_N15
A1L605 = ( minAngleCount[18] & ( (currCount[17] & (!minAngleCount[17] & currCount[18])) ) ) # ( !minAngleCount[18] & ( ((currCount[17] & !minAngleCount[17])) # (currCount[18]) ) );


--A1L650 is minAngleCount[0]~0 at LABCELL_X60_Y5_N45
A1L650 = ( !reg[0][0] );


--A1L653 is minAngleCount[2]~1 at LABCELL_X62_Y6_N0
A1L653 = ( !reg[0][2] );


--A1L611 is maxAngleCount[1]~1 at LABCELL_X56_Y6_N6
A1L611 = ( !reg[1][1] );


--A1L609 is maxAngleCount[0]~2 at LABCELL_X60_Y6_N6
A1L609 = !reg[1][0];


--A1L615 is maxAngleCount[3]~3 at LABCELL_X60_Y6_N15
A1L615 = !reg[1][3];


--A1L613 is maxAngleCount[2]~4 at LABCELL_X60_Y6_N36
A1L613 = !reg[1][2];


--A1L686 is next_state.SW_LEFT~0 at LABCELL_X57_Y5_N3
A1L686 = !current_state.INT_RIGHT;



--writedata[31] is writedata[31] at PIN_W25
writedata[31] = INPUT();


--A1L690 is out_wave_export~output at IOOBUF_X60_Y0_N53
A1L690 = OUTPUT_BUFFER.O(.I(out_wave), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--out_wave_export is out_wave_export at PIN_AK19
out_wave_export = OUTPUT();


--A1L482 is irq~output at IOOBUF_X56_Y0_N53
A1L482 = OUTPUT_BUFFER.O(.I(A1L483Q), , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , );


--irq is irq at PIN_AH18
irq = OUTPUT();


--A1L786 is reset_n~input at IOIBUF_X62_Y0_N52
A1L786 = INPUT_BUFFER(.I(reset_n), );


--reset_n is reset_n at PIN_AJ21
reset_n = INPUT();


--A1L425 is clk~input at IOIBUF_X89_Y25_N21
A1L425 = INPUT_BUFFER(.I(clk), );


--clk is clk at PIN_Y27
clk = INPUT();


--A1L890 is write~input at IOIBUF_X56_Y0_N35
A1L890 = INPUT_BUFFER(.I(write), );


--write is write at PIN_AH17
write = INPUT();


--A1L841 is writedata[7]~input at IOIBUF_X60_Y0_N1
A1L841 = INPUT_BUFFER(.I(writedata[7]), );


--writedata[7] is writedata[7] at PIN_V17
writedata[7] = INPUT();


--A1L386 is address~input at IOIBUF_X58_Y0_N92
A1L386 = INPUT_BUFFER(.I(address), );


--address is address at PIN_AH19
address = INPUT();


--A1L839 is writedata[6]~input at IOIBUF_X58_Y0_N58
A1L839 = INPUT_BUFFER(.I(writedata[6]), );


--writedata[6] is writedata[6] at PIN_AK18
writedata[6] = INPUT();


--A1L837 is writedata[5]~input at IOIBUF_X64_Y0_N18
A1L837 = INPUT_BUFFER(.I(writedata[5]), );


--writedata[5] is writedata[5] at PIN_AD17
writedata[5] = INPUT();


--A1L835 is writedata[4]~input at IOIBUF_X66_Y0_N75
A1L835 = INPUT_BUFFER(.I(writedata[4]), );


--writedata[4] is writedata[4] at PIN_AG22
writedata[4] = INPUT();


--A1L829 is writedata[1]~input at IOIBUF_X58_Y0_N41
A1L829 = INPUT_BUFFER(.I(writedata[1]), );


--writedata[1] is writedata[1] at PIN_AJ17
writedata[1] = INPUT();


--A1L827 is writedata[0]~input at IOIBUF_X54_Y0_N35
A1L827 = INPUT_BUFFER(.I(writedata[0]), );


--writedata[0] is writedata[0] at PIN_AJ16
writedata[0] = INPUT();


--A1L833 is writedata[3]~input at IOIBUF_X64_Y0_N35
A1L833 = INPUT_BUFFER(.I(writedata[3]), );


--writedata[3] is writedata[3] at PIN_AG23
writedata[3] = INPUT();


--A1L831 is writedata[2]~input at IOIBUF_X66_Y0_N92
A1L831 = INPUT_BUFFER(.I(writedata[2]), );


--writedata[2] is writedata[2] at PIN_AH22
writedata[2] = INPUT();


--A1L855 is writedata[14]~input at IOIBUF_X68_Y0_N35
A1L855 = INPUT_BUFFER(.I(writedata[14]), );


--writedata[14] is writedata[14] at PIN_AK21
writedata[14] = INPUT();


--A1L853 is writedata[13]~input at IOIBUF_X68_Y0_N1
A1L853 = INPUT_BUFFER(.I(writedata[13]), );


--writedata[13] is writedata[13] at PIN_Y17
writedata[13] = INPUT();


--A1L851 is writedata[12]~input at IOIBUF_X68_Y0_N52
A1L851 = INPUT_BUFFER(.I(writedata[12]), );


--writedata[12] is writedata[12] at PIN_AK22
writedata[12] = INPUT();


--A1L849 is writedata[11]~input at IOIBUF_X56_Y0_N1
A1L849 = INPUT_BUFFER(.I(writedata[11]), );


--writedata[11] is writedata[11] at PIN_AA16
writedata[11] = INPUT();


--A1L845 is writedata[9]~input at IOIBUF_X62_Y0_N35
A1L845 = INPUT_BUFFER(.I(writedata[9]), );


--writedata[9] is writedata[9] at PIN_AJ20
writedata[9] = INPUT();


--A1L847 is writedata[10]~input at IOIBUF_X66_Y0_N41
A1L847 = INPUT_BUFFER(.I(writedata[10]), );


--writedata[10] is writedata[10] at PIN_AE18
writedata[10] = INPUT();


--A1L843 is writedata[8]~input at IOIBUF_X70_Y0_N52
A1L843 = INPUT_BUFFER(.I(writedata[8]), );


--writedata[8] is writedata[8] at PIN_AJ22
writedata[8] = INPUT();


--A1L863 is writedata[18]~input at IOIBUF_X56_Y0_N18
A1L863 = INPUT_BUFFER(.I(writedata[18]), );


--writedata[18] is writedata[18] at PIN_AB17
writedata[18] = INPUT();


--A1L869 is writedata[21]~input at IOIBUF_X64_Y0_N52
A1L869 = INPUT_BUFFER(.I(writedata[21]), );


--writedata[21] is writedata[21] at PIN_AH24
writedata[21] = INPUT();


--A1L867 is writedata[20]~input at IOIBUF_X62_Y0_N18
A1L867 = INPUT_BUFFER(.I(writedata[20]), );


--writedata[20] is writedata[20] at PIN_AG20
writedata[20] = INPUT();


--A1L865 is writedata[19]~input at IOIBUF_X66_Y0_N58
A1L865 = INPUT_BUFFER(.I(writedata[19]), );


--writedata[19] is writedata[19] at PIN_AE19
writedata[19] = INPUT();


--A1L861 is writedata[17]~input at IOIBUF_X54_Y0_N52
A1L861 = INPUT_BUFFER(.I(writedata[17]), );


--writedata[17] is writedata[17] at PIN_AK16
writedata[17] = INPUT();


--A1L859 is writedata[16]~input at IOIBUF_X62_Y0_N1
A1L859 = INPUT_BUFFER(.I(writedata[16]), );


--writedata[16] is writedata[16] at PIN_AF19
writedata[16] = INPUT();


--A1L857 is writedata[15]~input at IOIBUF_X58_Y0_N75
A1L857 = INPUT_BUFFER(.I(writedata[15]), );


--writedata[15] is writedata[15] at PIN_AG18
writedata[15] = INPUT();


--A1L877 is writedata[25]~input at IOIBUF_X54_Y0_N18
A1L877 = INPUT_BUFFER(.I(writedata[25]), );


--writedata[25] is writedata[25] at PIN_AH20
writedata[25] = INPUT();


--A1L883 is writedata[28]~input at IOIBUF_X89_Y6_N4
A1L883 = INPUT_BUFFER(.I(writedata[28]), );


--writedata[28] is writedata[28] at PIN_W20
writedata[28] = INPUT();


--A1L881 is writedata[27]~input at IOIBUF_X52_Y0_N35
A1L881 = INPUT_BUFFER(.I(writedata[27]), );


--writedata[27] is writedata[27] at PIN_AE16
writedata[27] = INPUT();


--A1L879 is writedata[26]~input at IOIBUF_X60_Y0_N35
A1L879 = INPUT_BUFFER(.I(writedata[26]), );


--writedata[26] is writedata[26] at PIN_AJ19
writedata[26] = INPUT();


--A1L875 is writedata[24]~input at IOIBUF_X54_Y0_N1
A1L875 = INPUT_BUFFER(.I(writedata[24]), );


--writedata[24] is writedata[24] at PIN_AG21
writedata[24] = INPUT();


--A1L873 is writedata[23]~input at IOIBUF_X40_Y0_N1
A1L873 = INPUT_BUFFER(.I(writedata[23]), );


--writedata[23] is writedata[23] at PIN_W15
writedata[23] = INPUT();


--A1L871 is writedata[22]~input at IOIBUF_X64_Y0_N1
A1L871 = INPUT_BUFFER(.I(writedata[22]), );


--writedata[22] is writedata[22] at PIN_AC18
writedata[22] = INPUT();


--A1L887 is writedata[30]~input at IOIBUF_X52_Y0_N52
A1L887 = INPUT_BUFFER(.I(writedata[30]), );


--writedata[30] is writedata[30] at PIN_AF16
writedata[30] = INPUT();


--A1L885 is writedata[29]~input at IOIBUF_X60_Y0_N18
A1L885 = INPUT_BUFFER(.I(writedata[29]), );


--writedata[29] is writedata[29] at PIN_W17
writedata[29] = INPUT();



--A1L426 is clk~inputCLKENA0 at CLKCTRL_G10
A1L426 = cyclonev_clkena(.INCLK = A1L425) WITH (clock_type = "Global Clock", ena_register_mode = "always enabled");


--A1L670 is minAngleCount[18]~feeder at LABCELL_X63_Y5_N45
A1L670 = ( reg[0][18] );


--A1L643 is maxAngleCount[28]~feeder at LABCELL_X60_Y5_N15
A1L643 = ( reg[1][28] );


--A1L641 is maxAngleCount[27]~feeder at MLABCELL_X59_Y5_N33
A1L641 = ( reg[1][27] );


--A1L637 is maxAngleCount[24]~feeder at MLABCELL_X59_Y5_N42
A1L637 = ( reg[1][24] );


--A1L647 is maxAngleCount[30]~feeder at LABCELL_X57_Y6_N12
A1L647 = ( reg[1][30] );


--A1L645 is maxAngleCount[29]~feeder at LABCELL_X57_Y6_N57
A1L645 = ( reg[1][29] );


--A1L747 is reg[1][7]~feeder at LABCELL_X56_Y6_N18
A1L747 = ( A1L841 );


--A1L744 is reg[1][5]~feeder at LABCELL_X56_Y6_N39
A1L744 = ( A1L837 );


--A1L742 is reg[1][4]~feeder at LABCELL_X63_Y4_N0
A1L742 = ( A1L835 );


--A1L737 is reg[1][1]~feeder at LABCELL_X56_Y6_N30
A1L737 = ( A1L829 );


--A1L735 is reg[1][0]~feeder at LABCELL_X56_Y6_N15
A1L735 = ( A1L827 );


--A1L697 is reg[0][3]~feeder at LABCELL_X63_Y6_N21
A1L697 = ( A1L833 );


--A1L740 is reg[1][3]~feeder at LABCELL_X63_Y6_N15
A1L740 = ( A1L833 );


--A1L757 is reg[1][13]~feeder at LABCELL_X63_Y7_N51
A1L757 = ( A1L853 );


--A1L708 is reg[0][12]~feeder at LABCELL_X63_Y5_N18
A1L708 = ( A1L851 );


--A1L751 is reg[1][9]~feeder at LABCELL_X63_Y7_N12
A1L751 = ( A1L845 );


--A1L753 is reg[1][10]~feeder at LABCELL_X63_Y7_N42
A1L753 = ( A1L847 );


--A1L749 is reg[1][8]~feeder at LABCELL_X63_Y7_N36
A1L749 = ( A1L843 );


--A1L703 is reg[0][8]~feeder at MLABCELL_X59_Y5_N54
A1L703 = ( A1L843 );


--A1L717 is reg[0][18]~feeder at LABCELL_X55_Y5_N12
A1L717 = ( A1L863 );


--A1L766 is reg[1][18]~feeder at LABCELL_X55_Y5_N57
A1L766 = ( A1L863 );


--A1L764 is reg[1][17]~feeder at LABCELL_X57_Y4_N48
A1L764 = ( A1L861 );


--A1L762 is reg[1][16]~feeder at LABCELL_X57_Y4_N30
A1L762 = ( A1L859 );


--A1L712 is reg[0][15]~feeder at MLABCELL_X59_Y4_N45
A1L712 = ( A1L857 );


--A1L760 is reg[1][15]~feeder at MLABCELL_X59_Y4_N54
A1L760 = ( A1L857 );


--A1L729 is reg[0][28]~feeder at LABCELL_X55_Y5_N33
A1L729 = ( A1L883 );


--A1L779 is reg[1][28]~feeder at LABCELL_X55_Y5_N21
A1L779 = ( A1L883 );


--A1L727 is reg[0][27]~feeder at LABCELL_X55_Y5_N48
A1L727 = ( A1L881 );


--A1L777 is reg[1][27]~feeder at LABCELL_X55_Y5_N24
A1L777 = ( A1L881 );


--A1L775 is reg[1][26]~feeder at LABCELL_X55_Y5_N42
A1L775 = ( A1L879 );


--A1L783 is reg[1][30]~feeder at LABCELL_X56_Y6_N24
A1L783 = ( A1L887 );


--A1L731 is reg[0][29]~feeder at MLABCELL_X59_Y4_N12
A1L731 = ( A1L885 );


--A1L781 is reg[1][29]~feeder at MLABCELL_X59_Y4_N27
A1L781 = ( A1L885 );


--A1L440Q is currCount[7]~DUPLICATE at FF_X61_Y5_N22
--register power-up is low

A1L440Q = DFFEAS(A1L2, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L438Q is currCount[6]~DUPLICATE at FF_X61_Y5_N19
--register power-up is low

A1L438Q = DFFEAS(A1L6, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L435Q is currCount[4]~DUPLICATE at FF_X61_Y5_N13
--register power-up is low

A1L435Q = DFFEAS(A1L14, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L429Q is currCount[0]~DUPLICATE at FF_X61_Y5_N2
--register power-up is low

A1L429Q = DFFEAS(A1L22, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L432Q is currCount[2]~DUPLICATE at FF_X62_Y6_N34
--register power-up is low

A1L432Q = DFFEAS( , GLOBAL(A1L426), A1L786,  ,  , A1L30,  , A1L489, VCC);


--A1L453Q is currCount[14]~DUPLICATE at FF_X61_Y5_N44
--register power-up is low

A1L453Q = DFFEAS(A1L34, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L450Q is currCount[12]~DUPLICATE at FF_X61_Y5_N37
--register power-up is low

A1L450Q = DFFEAS(A1L42, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L448Q is currCount[11]~DUPLICATE at FF_X61_Y5_N35
--register power-up is low

A1L448Q = DFFEAS(A1L46, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L444Q is currCount[9]~DUPLICATE at FF_X61_Y5_N28
--register power-up is low

A1L444Q = DFFEAS(A1L50, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L446Q is currCount[10]~DUPLICATE at FF_X61_Y5_N31
--register power-up is low

A1L446Q = DFFEAS(A1L54, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L442Q is currCount[8]~DUPLICATE at FF_X61_Y5_N25
--register power-up is low

A1L442Q = DFFEAS(A1L58, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L464Q is currCount[21]~DUPLICATE at FF_X61_Y4_N4
--register power-up is low

A1L464Q = DFFEAS(A1L66, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L461Q is currCount[19]~DUPLICATE at FF_X61_Y5_N59
--register power-up is low

A1L461Q = DFFEAS(A1L74, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L457Q is currCount[16]~DUPLICATE at FF_X61_Y5_N49
--register power-up is low

A1L457Q = DFFEAS(A1L82, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L455Q is currCount[15]~DUPLICATE at FF_X61_Y5_N46
--register power-up is low

A1L455Q = DFFEAS(A1L86, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L470Q is currCount[26]~DUPLICATE at FF_X61_Y4_N20
--register power-up is low

A1L470Q = DFFEAS(A1L102, GLOBAL(A1L426), A1L786,  ,  ,  ,  , A1L489,  );


--A1L479Q is current_state.SW_LEFT~DUPLICATE at FF_X57_Y5_N43
--register power-up is low

A1L479Q = DFFEAS( , GLOBAL(A1L426), A1L786,  ,  , next_state.SW_LEFT,  ,  , VCC);


